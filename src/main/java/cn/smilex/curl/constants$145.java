// Generated by jextract

package cn.smilex;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$145 {

    static final  GroupLayout GUID_SLEEP_SUBGROUP$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("Data1"),
        Constants$root.C_SHORT$LAYOUT.withName("Data2"),
        Constants$root.C_SHORT$LAYOUT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, Constants$root.C_CHAR$LAYOUT).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment GUID_SLEEP_SUBGROUP$SEGMENT = RuntimeHelper.lookupGlobalVariable("GUID_SLEEP_SUBGROUP", constants$145.GUID_SLEEP_SUBGROUP$LAYOUT);
    static final  GroupLayout GUID_SLEEP_IDLE_THRESHOLD$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("Data1"),
        Constants$root.C_SHORT$LAYOUT.withName("Data2"),
        Constants$root.C_SHORT$LAYOUT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, Constants$root.C_CHAR$LAYOUT).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment GUID_SLEEP_IDLE_THRESHOLD$SEGMENT = RuntimeHelper.lookupGlobalVariable("GUID_SLEEP_IDLE_THRESHOLD", constants$145.GUID_SLEEP_IDLE_THRESHOLD$LAYOUT);
    static final  GroupLayout GUID_STANDBY_TIMEOUT$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("Data1"),
        Constants$root.C_SHORT$LAYOUT.withName("Data2"),
        Constants$root.C_SHORT$LAYOUT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, Constants$root.C_CHAR$LAYOUT).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment GUID_STANDBY_TIMEOUT$SEGMENT = RuntimeHelper.lookupGlobalVariable("GUID_STANDBY_TIMEOUT", constants$145.GUID_STANDBY_TIMEOUT$LAYOUT);
    static final  GroupLayout GUID_UNATTEND_SLEEP_TIMEOUT$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("Data1"),
        Constants$root.C_SHORT$LAYOUT.withName("Data2"),
        Constants$root.C_SHORT$LAYOUT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, Constants$root.C_CHAR$LAYOUT).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment GUID_UNATTEND_SLEEP_TIMEOUT$SEGMENT = RuntimeHelper.lookupGlobalVariable("GUID_UNATTEND_SLEEP_TIMEOUT", constants$145.GUID_UNATTEND_SLEEP_TIMEOUT$LAYOUT);
    static final  GroupLayout GUID_HIBERNATE_TIMEOUT$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("Data1"),
        Constants$root.C_SHORT$LAYOUT.withName("Data2"),
        Constants$root.C_SHORT$LAYOUT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, Constants$root.C_CHAR$LAYOUT).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment GUID_HIBERNATE_TIMEOUT$SEGMENT = RuntimeHelper.lookupGlobalVariable("GUID_HIBERNATE_TIMEOUT", constants$145.GUID_HIBERNATE_TIMEOUT$LAYOUT);
    static final  GroupLayout GUID_HIBERNATE_FASTS4_POLICY$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("Data1"),
        Constants$root.C_SHORT$LAYOUT.withName("Data2"),
        Constants$root.C_SHORT$LAYOUT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, Constants$root.C_CHAR$LAYOUT).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment GUID_HIBERNATE_FASTS4_POLICY$SEGMENT = RuntimeHelper.lookupGlobalVariable("GUID_HIBERNATE_FASTS4_POLICY", constants$145.GUID_HIBERNATE_FASTS4_POLICY$LAYOUT);
}


