// Generated by jextract

package cn.smilex;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$329 {

    static final FunctionDescriptor Wow64GetThreadSelectorEntry$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle Wow64GetThreadSelectorEntry$MH = RuntimeHelper.downcallHandle(
        "Wow64GetThreadSelectorEntry",
        constants$329.Wow64GetThreadSelectorEntry$FUNC
    );
    static final FunctionDescriptor DebugSetProcessKillOnExit$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle DebugSetProcessKillOnExit$MH = RuntimeHelper.downcallHandle(
        "DebugSetProcessKillOnExit",
        constants$329.DebugSetProcessKillOnExit$FUNC
    );
    static final FunctionDescriptor DebugBreakProcess$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle DebugBreakProcess$MH = RuntimeHelper.downcallHandle(
        "DebugBreakProcess",
        constants$329.DebugBreakProcess$FUNC
    );
    static final FunctionDescriptor PulseEvent$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle PulseEvent$MH = RuntimeHelper.downcallHandle(
        "PulseEvent",
        constants$329.PulseEvent$FUNC
    );
    static final FunctionDescriptor GlobalDeleteAtom$FUNC = FunctionDescriptor.of(Constants$root.C_SHORT$LAYOUT,
        Constants$root.C_SHORT$LAYOUT
    );
    static final MethodHandle GlobalDeleteAtom$MH = RuntimeHelper.downcallHandle(
        "GlobalDeleteAtom",
        constants$329.GlobalDeleteAtom$FUNC
    );
    static final FunctionDescriptor InitAtomTable$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle InitAtomTable$MH = RuntimeHelper.downcallHandle(
        "InitAtomTable",
        constants$329.InitAtomTable$FUNC
    );
}


