// Generated by jextract

package cn.smilex;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
 class curl_h_22 extends curl_h_21 {

    public static OfAddress PSD_ENUM_SDS_OUTPUT = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PSD_GLOBAL_CHANGE_INPUT = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PSD_GLOBAL_CHANGE_OUTPUT = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PLOOKUP_STREAM_FROM_CLUSTER_INPUT = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PLOOKUP_STREAM_FROM_CLUSTER_OUTPUT = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PLOOKUP_STREAM_FROM_CLUSTER_ENTRY = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PFILE_TYPE_NOTIFICATION_INPUT = Constants$root.C_POINTER$LAYOUT;
    public static MemorySegment FILE_TYPE_NOTIFICATION_GUID_PAGE_FILE$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$929.FILE_TYPE_NOTIFICATION_GUID_PAGE_FILE$SEGMENT,"FILE_TYPE_NOTIFICATION_GUID_PAGE_FILE");
    }
    public static MemorySegment FILE_TYPE_NOTIFICATION_GUID_HIBERNATION_FILE$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$929.FILE_TYPE_NOTIFICATION_GUID_HIBERNATION_FILE$SEGMENT,"FILE_TYPE_NOTIFICATION_GUID_HIBERNATION_FILE");
    }
    public static MemorySegment FILE_TYPE_NOTIFICATION_GUID_CRASHDUMP_FILE$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$929.FILE_TYPE_NOTIFICATION_GUID_CRASHDUMP_FILE$SEGMENT,"FILE_TYPE_NOTIFICATION_GUID_CRASHDUMP_FILE");
    }
    public static OfAddress PCSV_MGMT_LOCK = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PCSV_NAMESPACE_INFO = Constants$root.C_POINTER$LAYOUT;
    public static int CsvControlStartRedirectFile() {
        return (int)2L;
    }
    public static int CsvControlStopRedirectFile() {
        return (int)3L;
    }
    public static int CsvControlQueryRedirectState() {
        return (int)4L;
    }
    public static int CsvControlQueryFileRevision() {
        return (int)6L;
    }
    public static int CsvControlQueryMdsPath() {
        return (int)8L;
    }
    public static int CsvControlQueryFileRevisionFileId128() {
        return (int)9L;
    }
    public static int CsvControlQueryVolumeRedirectState() {
        return (int)10L;
    }
    public static int CsvControlEnableUSNRangeModificationTracking() {
        return (int)13L;
    }
    public static int CsvControlMarkHandleLocalVolumeMount() {
        return (int)14L;
    }
    public static int CsvControlUnmarkHandleLocalVolumeMount() {
        return (int)15L;
    }
    public static int CsvControlGetCsvFsMdsPathV2() {
        return (int)18L;
    }
    public static int CsvControlDisableCaching() {
        return (int)19L;
    }
    public static int CsvControlEnableCaching() {
        return (int)20L;
    }
    public static int CsvControlStartForceDFO() {
        return (int)21L;
    }
    public static int CsvControlStopForceDFO() {
        return (int)22L;
    }
    public static OfAddress PCSV_CONTROL_OP = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PCSV_CONTROL_PARAM = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PCSV_QUERY_REDIRECT_STATE = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PCSV_QUERY_FILE_REVISION = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PCSV_QUERY_FILE_REVISION_FILE_ID_128 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PCSV_QUERY_MDS_PATH = Constants$root.C_POINTER$LAYOUT;
    public static int CsvFsDiskConnectivityNone() {
        return (int)0L;
    }
    public static int CsvFsDiskConnectivityMdsNodeOnly() {
        return (int)1L;
    }
    public static int CsvFsDiskConnectivitySubsetOfNodes() {
        return (int)2L;
    }
    public static int CsvFsDiskConnectivityAllNodes() {
        return (int)3L;
    }
    public static OfAddress PCSVFS_DISK_CONNECTIVITY = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PCSV_QUERY_VOLUME_REDIRECT_STATE = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PCSV_QUERY_MDS_PATH_V2 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PCSV_QUERY_VETO_FILE_DIRECT_IO_OUTPUT = Constants$root.C_POINTER$LAYOUT;
    public static int StorageReserveIdNone() {
        return (int)0L;
    }
    public static int StorageReserveIdHard() {
        return (int)1L;
    }
    public static int StorageReserveIdSoft() {
        return (int)2L;
    }
    public static int StorageReserveIdUpdateScratch() {
        return (int)3L;
    }
    public static int StorageReserveIdMax() {
        return (int)4L;
    }
    public static OfAddress PSTORAGE_RESERVE_ID = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PCSV_IS_OWNED_BY_CSVFS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PFILE_LEVEL_TRIM_RANGE = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PFILE_LEVEL_TRIM = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PFILE_LEVEL_TRIM_OUTPUT = Constants$root.C_POINTER$LAYOUT;
    public static int QUERY_FILE_LAYOUT_FILTER_TYPE_NONE() {
        return (int)0L;
    }
    public static int QUERY_FILE_LAYOUT_FILTER_TYPE_CLUSTERS() {
        return (int)1L;
    }
    public static int QUERY_FILE_LAYOUT_FILTER_TYPE_FILEID() {
        return (int)2L;
    }
    public static int QUERY_FILE_LAYOUT_FILTER_TYPE_STORAGE_RESERVE_ID() {
        return (int)3L;
    }
    public static int QUERY_FILE_LAYOUT_NUM_FILTER_TYPES() {
        return (int)4L;
    }
    public static OfAddress PCLUSTER_RANGE = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PFILE_REFERENCE_RANGE = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PQUERY_FILE_LAYOUT_INPUT = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PQUERY_FILE_LAYOUT_OUTPUT = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PFILE_LAYOUT_ENTRY = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PFILE_LAYOUT_NAME_ENTRY = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PFILE_LAYOUT_INFO_ENTRY = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PSTREAM_LAYOUT_ENTRY = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PSTREAM_EXTENT_ENTRY = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PFSCTL_GET_INTEGRITY_INFORMATION_BUFFER = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PFSCTL_SET_INTEGRITY_INFORMATION_BUFFER = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PFSCTL_SET_INTEGRITY_INFORMATION_BUFFER_EX = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PFSCTL_OFFLOAD_READ_INPUT = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PFSCTL_OFFLOAD_READ_OUTPUT = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PFSCTL_OFFLOAD_WRITE_INPUT = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PFSCTL_OFFLOAD_WRITE_OUTPUT = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PSET_PURGE_FAILURE_MODE_INPUT = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PREPAIR_COPIES_INPUT = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PREPAIR_COPIES_OUTPUT = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PFILE_REGION_INFO = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PFILE_REGION_OUTPUT = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PFILE_REGION_INPUT = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PWRITE_USN_REASON_INPUT = Constants$root.C_POINTER$LAYOUT;
    public static int FileStorageTierMediaTypeUnspecified() {
        return (int)0L;
    }
    public static int FileStorageTierMediaTypeDisk() {
        return (int)1L;
    }
    public static int FileStorageTierMediaTypeSsd() {
        return (int)2L;
    }
    public static int FileStorageTierMediaTypeScm() {
        return (int)4L;
    }
    public static int FileStorageTierMediaTypeMax() {
        return (int)5L;
    }
    public static OfAddress PFILE_STORAGE_TIER_MEDIA_TYPE = Constants$root.C_POINTER$LAYOUT;
    public static int FileStorageTierClassUnspecified() {
        return (int)0L;
    }
    public static int FileStorageTierClassCapacity() {
        return (int)1L;
    }
    public static int FileStorageTierClassPerformance() {
        return (int)2L;
    }
    public static int FileStorageTierClassMax() {
        return (int)3L;
    }
    public static OfAddress PFILE_STORAGE_TIER_CLASS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PFILE_STORAGE_TIER = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PFSCTL_QUERY_STORAGE_CLASSES_OUTPUT = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PSTREAM_INFORMATION_ENTRY = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PFSCTL_QUERY_REGION_INFO_INPUT = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PFILE_STORAGE_TIER_REGION = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PFSCTL_QUERY_REGION_INFO_OUTPUT = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PFILE_DESIRED_STORAGE_CLASS_INFORMATION = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PDUPLICATE_EXTENTS_DATA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PDUPLICATE_EXTENTS_DATA32 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PDUPLICATE_EXTENTS_DATA_EX = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PDUPLICATE_EXTENTS_DATA_EX32 = Constants$root.C_POINTER$LAYOUT;
    public static int SmrGcStateInactive() {
        return (int)0L;
    }
    public static int SmrGcStatePaused() {
        return (int)1L;
    }
    public static int SmrGcStateActive() {
        return (int)2L;
    }
    public static int SmrGcStateActiveFullSpeed() {
        return (int)3L;
    }
    public static OfAddress PREFS_SMR_VOLUME_GC_STATE = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PREFS_SMR_VOLUME_INFO_OUTPUT = Constants$root.C_POINTER$LAYOUT;
    public static int SmrGcActionStart() {
        return (int)1L;
    }
    public static int SmrGcActionStartFullSpeed() {
        return (int)2L;
    }
    public static int SmrGcActionPause() {
        return (int)3L;
    }
    public static int SmrGcActionStop() {
        return (int)4L;
    }
    public static OfAddress PREFS_SMR_VOLUME_GC_ACTION = Constants$root.C_POINTER$LAYOUT;
    public static int SmrGcMethodCompaction() {
        return (int)1L;
    }
    public static int SmrGcMethodCompression() {
        return (int)2L;
    }
    public static int SmrGcMethodRotation() {
        return (int)3L;
    }
    public static OfAddress PREFS_SMR_VOLUME_GC_METHOD = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PREFS_SMR_VOLUME_GC_PARAMETERS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PSTREAMS_QUERY_PARAMETERS_OUTPUT_BUFFER = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PSTREAMS_ASSOCIATE_ID_INPUT_BUFFER = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PSTREAMS_QUERY_ID_OUTPUT_BUFFER = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PQUERY_BAD_RANGES_INPUT_RANGE = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PQUERY_BAD_RANGES_INPUT = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PQUERY_BAD_RANGES_OUTPUT_RANGE = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PQUERY_BAD_RANGES_OUTPUT = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PSET_DAX_ALLOC_ALIGNMENT_HINT_INPUT = Constants$root.C_POINTER$LAYOUT;
    public static int VirtualStorageBehaviorUndefined() {
        return (int)0L;
    }
    public static int VirtualStorageBehaviorCacheWriteThrough() {
        return (int)1L;
    }
    public static int VirtualStorageBehaviorCacheWriteBack() {
        return (int)2L;
    }
    public static OfAddress PVIRTUAL_STORAGE_BEHAVIOR_CODE = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PVIRTUAL_STORAGE_SET_BEHAVIOR_INPUT = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PENCRYPTION_KEY_CTRL_INPUT = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PWOF_EXTERNAL_INFO = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PWOF_EXTERNAL_FILE_ID = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PWOF_VERSION_INFO = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PWIM_PROVIDER_EXTERNAL_INFO = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PWIM_PROVIDER_ADD_OVERLAY_INPUT = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PWIM_PROVIDER_UPDATE_OVERLAY_INPUT = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PWIM_PROVIDER_REMOVE_OVERLAY_INPUT = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PWIM_PROVIDER_SUSPEND_OVERLAY_INPUT = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PWIM_PROVIDER_OVERLAY_ENTRY = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PFILE_PROVIDER_EXTERNAL_INFO_V0 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PFILE_PROVIDER_EXTERNAL_INFO_V1 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PFILE_PROVIDER_EXTERNAL_INFO = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PCONTAINER_VOLUME_STATE = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PCONTAINER_ROOT_INFO_INPUT = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PCONTAINER_ROOT_INFO_OUTPUT = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PVIRTUALIZATION_INSTANCE_INFO_INPUT = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PVIRTUALIZATION_INSTANCE_INFO_INPUT_EX = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PVIRTUALIZATION_INSTANCE_INFO_OUTPUT = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PGET_FILTER_FILE_IDENTIFIER_INPUT = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PGET_FILTER_FILE_IDENTIFIER_OUTPUT = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PDISK_EXTENT = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PVOLUME_DISK_EXTENTS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PVOLUME_GET_GPT_ATTRIBUTES_INFORMATION = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PIO_IRP_EXT_TRACK_OFFSET_HEADER = Constants$root.C_POINTER$LAYOUT;
    public static MemorySegment GUID_DEVINTERFACE_SMARTCARD_READER$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$930.GUID_DEVINTERFACE_SMARTCARD_READER$SEGMENT,"GUID_DEVINTERFACE_SMARTCARD_READER");
    }
    public static OfAddress PSCARD_IO_REQUEST = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPSCARD_IO_REQUEST = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPCSCARD_IO_REQUEST = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPSCARD_T0_COMMAND = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PSCARD_T0_REQUEST = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPSCARD_T0_REQUEST = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PSCARD_T1_REQUEST = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPSCARD_T1_REQUEST = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPCBYTE = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPCVOID = Constants$root.C_POINTER$LAYOUT;
    public static MemorySegment g_rgSCardT0Pci$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$930.g_rgSCardT0Pci$SEGMENT,"g_rgSCardT0Pci");
    }
    public static MemorySegment g_rgSCardT1Pci$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$930.g_rgSCardT1Pci$SEGMENT,"g_rgSCardT1Pci");
    }
    public static MemorySegment g_rgSCardRawPci$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$930.g_rgSCardRawPci$SEGMENT,"g_rgSCardRawPci");
    }
    public static OfAddress PSCARDCONTEXT = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPSCARDCONTEXT = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PSCARDHANDLE = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPSCARDHANDLE = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle SCardEstablishContext$MH() {
        return RuntimeHelper.requireNonNull(constants$931.SCardEstablishContext$MH,"SCardEstablishContext");
    }
    public static int SCardEstablishContext ( int dwScope,  Addressable pvReserved1,  Addressable pvReserved2,  Addressable phContext) {
        var mh$ = SCardEstablishContext$MH();
        try {
            return (int)mh$.invokeExact(dwScope, pvReserved1, pvReserved2, phContext);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardReleaseContext$MH() {
        return RuntimeHelper.requireNonNull(constants$931.SCardReleaseContext$MH,"SCardReleaseContext");
    }
    public static int SCardReleaseContext ( long hContext) {
        var mh$ = SCardReleaseContext$MH();
        try {
            return (int)mh$.invokeExact(hContext);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardIsValidContext$MH() {
        return RuntimeHelper.requireNonNull(constants$931.SCardIsValidContext$MH,"SCardIsValidContext");
    }
    public static int SCardIsValidContext ( long hContext) {
        var mh$ = SCardIsValidContext$MH();
        try {
            return (int)mh$.invokeExact(hContext);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardListReaderGroupsA$MH() {
        return RuntimeHelper.requireNonNull(constants$931.SCardListReaderGroupsA$MH,"SCardListReaderGroupsA");
    }
    public static int SCardListReaderGroupsA ( long hContext,  Addressable mszGroups,  Addressable pcchGroups) {
        var mh$ = SCardListReaderGroupsA$MH();
        try {
            return (int)mh$.invokeExact(hContext, mszGroups, pcchGroups);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardListReaderGroupsW$MH() {
        return RuntimeHelper.requireNonNull(constants$931.SCardListReaderGroupsW$MH,"SCardListReaderGroupsW");
    }
    public static int SCardListReaderGroupsW ( long hContext,  Addressable mszGroups,  Addressable pcchGroups) {
        var mh$ = SCardListReaderGroupsW$MH();
        try {
            return (int)mh$.invokeExact(hContext, mszGroups, pcchGroups);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardListReadersA$MH() {
        return RuntimeHelper.requireNonNull(constants$931.SCardListReadersA$MH,"SCardListReadersA");
    }
    public static int SCardListReadersA ( long hContext,  Addressable mszGroups,  Addressable mszReaders,  Addressable pcchReaders) {
        var mh$ = SCardListReadersA$MH();
        try {
            return (int)mh$.invokeExact(hContext, mszGroups, mszReaders, pcchReaders);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardListReadersW$MH() {
        return RuntimeHelper.requireNonNull(constants$932.SCardListReadersW$MH,"SCardListReadersW");
    }
    public static int SCardListReadersW ( long hContext,  Addressable mszGroups,  Addressable mszReaders,  Addressable pcchReaders) {
        var mh$ = SCardListReadersW$MH();
        try {
            return (int)mh$.invokeExact(hContext, mszGroups, mszReaders, pcchReaders);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardListCardsA$MH() {
        return RuntimeHelper.requireNonNull(constants$932.SCardListCardsA$MH,"SCardListCardsA");
    }
    public static int SCardListCardsA ( long hContext,  Addressable pbAtr,  Addressable rgquidInterfaces,  int cguidInterfaceCount,  Addressable mszCards,  Addressable pcchCards) {
        var mh$ = SCardListCardsA$MH();
        try {
            return (int)mh$.invokeExact(hContext, pbAtr, rgquidInterfaces, cguidInterfaceCount, mszCards, pcchCards);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardListCardsW$MH() {
        return RuntimeHelper.requireNonNull(constants$932.SCardListCardsW$MH,"SCardListCardsW");
    }
    public static int SCardListCardsW ( long hContext,  Addressable pbAtr,  Addressable rgquidInterfaces,  int cguidInterfaceCount,  Addressable mszCards,  Addressable pcchCards) {
        var mh$ = SCardListCardsW$MH();
        try {
            return (int)mh$.invokeExact(hContext, pbAtr, rgquidInterfaces, cguidInterfaceCount, mszCards, pcchCards);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardListInterfacesA$MH() {
        return RuntimeHelper.requireNonNull(constants$932.SCardListInterfacesA$MH,"SCardListInterfacesA");
    }
    public static int SCardListInterfacesA ( long hContext,  Addressable szCard,  Addressable pguidInterfaces,  Addressable pcguidInterfaces) {
        var mh$ = SCardListInterfacesA$MH();
        try {
            return (int)mh$.invokeExact(hContext, szCard, pguidInterfaces, pcguidInterfaces);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardListInterfacesW$MH() {
        return RuntimeHelper.requireNonNull(constants$932.SCardListInterfacesW$MH,"SCardListInterfacesW");
    }
    public static int SCardListInterfacesW ( long hContext,  Addressable szCard,  Addressable pguidInterfaces,  Addressable pcguidInterfaces) {
        var mh$ = SCardListInterfacesW$MH();
        try {
            return (int)mh$.invokeExact(hContext, szCard, pguidInterfaces, pcguidInterfaces);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardGetProviderIdA$MH() {
        return RuntimeHelper.requireNonNull(constants$932.SCardGetProviderIdA$MH,"SCardGetProviderIdA");
    }
    public static int SCardGetProviderIdA ( long hContext,  Addressable szCard,  Addressable pguidProviderId) {
        var mh$ = SCardGetProviderIdA$MH();
        try {
            return (int)mh$.invokeExact(hContext, szCard, pguidProviderId);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardGetProviderIdW$MH() {
        return RuntimeHelper.requireNonNull(constants$933.SCardGetProviderIdW$MH,"SCardGetProviderIdW");
    }
    public static int SCardGetProviderIdW ( long hContext,  Addressable szCard,  Addressable pguidProviderId) {
        var mh$ = SCardGetProviderIdW$MH();
        try {
            return (int)mh$.invokeExact(hContext, szCard, pguidProviderId);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardGetCardTypeProviderNameA$MH() {
        return RuntimeHelper.requireNonNull(constants$933.SCardGetCardTypeProviderNameA$MH,"SCardGetCardTypeProviderNameA");
    }
    public static int SCardGetCardTypeProviderNameA ( long hContext,  Addressable szCardName,  int dwProviderId,  Addressable szProvider,  Addressable pcchProvider) {
        var mh$ = SCardGetCardTypeProviderNameA$MH();
        try {
            return (int)mh$.invokeExact(hContext, szCardName, dwProviderId, szProvider, pcchProvider);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardGetCardTypeProviderNameW$MH() {
        return RuntimeHelper.requireNonNull(constants$933.SCardGetCardTypeProviderNameW$MH,"SCardGetCardTypeProviderNameW");
    }
    public static int SCardGetCardTypeProviderNameW ( long hContext,  Addressable szCardName,  int dwProviderId,  Addressable szProvider,  Addressable pcchProvider) {
        var mh$ = SCardGetCardTypeProviderNameW$MH();
        try {
            return (int)mh$.invokeExact(hContext, szCardName, dwProviderId, szProvider, pcchProvider);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardIntroduceReaderGroupA$MH() {
        return RuntimeHelper.requireNonNull(constants$933.SCardIntroduceReaderGroupA$MH,"SCardIntroduceReaderGroupA");
    }
    public static int SCardIntroduceReaderGroupA ( long hContext,  Addressable szGroupName) {
        var mh$ = SCardIntroduceReaderGroupA$MH();
        try {
            return (int)mh$.invokeExact(hContext, szGroupName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardIntroduceReaderGroupW$MH() {
        return RuntimeHelper.requireNonNull(constants$933.SCardIntroduceReaderGroupW$MH,"SCardIntroduceReaderGroupW");
    }
    public static int SCardIntroduceReaderGroupW ( long hContext,  Addressable szGroupName) {
        var mh$ = SCardIntroduceReaderGroupW$MH();
        try {
            return (int)mh$.invokeExact(hContext, szGroupName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardForgetReaderGroupA$MH() {
        return RuntimeHelper.requireNonNull(constants$933.SCardForgetReaderGroupA$MH,"SCardForgetReaderGroupA");
    }
    public static int SCardForgetReaderGroupA ( long hContext,  Addressable szGroupName) {
        var mh$ = SCardForgetReaderGroupA$MH();
        try {
            return (int)mh$.invokeExact(hContext, szGroupName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardForgetReaderGroupW$MH() {
        return RuntimeHelper.requireNonNull(constants$934.SCardForgetReaderGroupW$MH,"SCardForgetReaderGroupW");
    }
    public static int SCardForgetReaderGroupW ( long hContext,  Addressable szGroupName) {
        var mh$ = SCardForgetReaderGroupW$MH();
        try {
            return (int)mh$.invokeExact(hContext, szGroupName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardIntroduceReaderA$MH() {
        return RuntimeHelper.requireNonNull(constants$934.SCardIntroduceReaderA$MH,"SCardIntroduceReaderA");
    }
    public static int SCardIntroduceReaderA ( long hContext,  Addressable szReaderName,  Addressable szDeviceName) {
        var mh$ = SCardIntroduceReaderA$MH();
        try {
            return (int)mh$.invokeExact(hContext, szReaderName, szDeviceName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardIntroduceReaderW$MH() {
        return RuntimeHelper.requireNonNull(constants$934.SCardIntroduceReaderW$MH,"SCardIntroduceReaderW");
    }
    public static int SCardIntroduceReaderW ( long hContext,  Addressable szReaderName,  Addressable szDeviceName) {
        var mh$ = SCardIntroduceReaderW$MH();
        try {
            return (int)mh$.invokeExact(hContext, szReaderName, szDeviceName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardForgetReaderA$MH() {
        return RuntimeHelper.requireNonNull(constants$934.SCardForgetReaderA$MH,"SCardForgetReaderA");
    }
    public static int SCardForgetReaderA ( long hContext,  Addressable szReaderName) {
        var mh$ = SCardForgetReaderA$MH();
        try {
            return (int)mh$.invokeExact(hContext, szReaderName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardForgetReaderW$MH() {
        return RuntimeHelper.requireNonNull(constants$934.SCardForgetReaderW$MH,"SCardForgetReaderW");
    }
    public static int SCardForgetReaderW ( long hContext,  Addressable szReaderName) {
        var mh$ = SCardForgetReaderW$MH();
        try {
            return (int)mh$.invokeExact(hContext, szReaderName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardAddReaderToGroupA$MH() {
        return RuntimeHelper.requireNonNull(constants$934.SCardAddReaderToGroupA$MH,"SCardAddReaderToGroupA");
    }
    public static int SCardAddReaderToGroupA ( long hContext,  Addressable szReaderName,  Addressable szGroupName) {
        var mh$ = SCardAddReaderToGroupA$MH();
        try {
            return (int)mh$.invokeExact(hContext, szReaderName, szGroupName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardAddReaderToGroupW$MH() {
        return RuntimeHelper.requireNonNull(constants$935.SCardAddReaderToGroupW$MH,"SCardAddReaderToGroupW");
    }
    public static int SCardAddReaderToGroupW ( long hContext,  Addressable szReaderName,  Addressable szGroupName) {
        var mh$ = SCardAddReaderToGroupW$MH();
        try {
            return (int)mh$.invokeExact(hContext, szReaderName, szGroupName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardRemoveReaderFromGroupA$MH() {
        return RuntimeHelper.requireNonNull(constants$935.SCardRemoveReaderFromGroupA$MH,"SCardRemoveReaderFromGroupA");
    }
    public static int SCardRemoveReaderFromGroupA ( long hContext,  Addressable szReaderName,  Addressable szGroupName) {
        var mh$ = SCardRemoveReaderFromGroupA$MH();
        try {
            return (int)mh$.invokeExact(hContext, szReaderName, szGroupName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardRemoveReaderFromGroupW$MH() {
        return RuntimeHelper.requireNonNull(constants$935.SCardRemoveReaderFromGroupW$MH,"SCardRemoveReaderFromGroupW");
    }
    public static int SCardRemoveReaderFromGroupW ( long hContext,  Addressable szReaderName,  Addressable szGroupName) {
        var mh$ = SCardRemoveReaderFromGroupW$MH();
        try {
            return (int)mh$.invokeExact(hContext, szReaderName, szGroupName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardIntroduceCardTypeA$MH() {
        return RuntimeHelper.requireNonNull(constants$935.SCardIntroduceCardTypeA$MH,"SCardIntroduceCardTypeA");
    }
    public static int SCardIntroduceCardTypeA ( long hContext,  Addressable szCardName,  Addressable pguidPrimaryProvider,  Addressable rgguidInterfaces,  int dwInterfaceCount,  Addressable pbAtr,  Addressable pbAtrMask,  int cbAtrLen) {
        var mh$ = SCardIntroduceCardTypeA$MH();
        try {
            return (int)mh$.invokeExact(hContext, szCardName, pguidPrimaryProvider, rgguidInterfaces, dwInterfaceCount, pbAtr, pbAtrMask, cbAtrLen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardIntroduceCardTypeW$MH() {
        return RuntimeHelper.requireNonNull(constants$935.SCardIntroduceCardTypeW$MH,"SCardIntroduceCardTypeW");
    }
    public static int SCardIntroduceCardTypeW ( long hContext,  Addressable szCardName,  Addressable pguidPrimaryProvider,  Addressable rgguidInterfaces,  int dwInterfaceCount,  Addressable pbAtr,  Addressable pbAtrMask,  int cbAtrLen) {
        var mh$ = SCardIntroduceCardTypeW$MH();
        try {
            return (int)mh$.invokeExact(hContext, szCardName, pguidPrimaryProvider, rgguidInterfaces, dwInterfaceCount, pbAtr, pbAtrMask, cbAtrLen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardSetCardTypeProviderNameA$MH() {
        return RuntimeHelper.requireNonNull(constants$935.SCardSetCardTypeProviderNameA$MH,"SCardSetCardTypeProviderNameA");
    }
    public static int SCardSetCardTypeProviderNameA ( long hContext,  Addressable szCardName,  int dwProviderId,  Addressable szProvider) {
        var mh$ = SCardSetCardTypeProviderNameA$MH();
        try {
            return (int)mh$.invokeExact(hContext, szCardName, dwProviderId, szProvider);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardSetCardTypeProviderNameW$MH() {
        return RuntimeHelper.requireNonNull(constants$936.SCardSetCardTypeProviderNameW$MH,"SCardSetCardTypeProviderNameW");
    }
    public static int SCardSetCardTypeProviderNameW ( long hContext,  Addressable szCardName,  int dwProviderId,  Addressable szProvider) {
        var mh$ = SCardSetCardTypeProviderNameW$MH();
        try {
            return (int)mh$.invokeExact(hContext, szCardName, dwProviderId, szProvider);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardForgetCardTypeA$MH() {
        return RuntimeHelper.requireNonNull(constants$936.SCardForgetCardTypeA$MH,"SCardForgetCardTypeA");
    }
    public static int SCardForgetCardTypeA ( long hContext,  Addressable szCardName) {
        var mh$ = SCardForgetCardTypeA$MH();
        try {
            return (int)mh$.invokeExact(hContext, szCardName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardForgetCardTypeW$MH() {
        return RuntimeHelper.requireNonNull(constants$936.SCardForgetCardTypeW$MH,"SCardForgetCardTypeW");
    }
    public static int SCardForgetCardTypeW ( long hContext,  Addressable szCardName) {
        var mh$ = SCardForgetCardTypeW$MH();
        try {
            return (int)mh$.invokeExact(hContext, szCardName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardFreeMemory$MH() {
        return RuntimeHelper.requireNonNull(constants$936.SCardFreeMemory$MH,"SCardFreeMemory");
    }
    public static int SCardFreeMemory ( long hContext,  Addressable pvMem) {
        var mh$ = SCardFreeMemory$MH();
        try {
            return (int)mh$.invokeExact(hContext, pvMem);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardAccessStartedEvent$MH() {
        return RuntimeHelper.requireNonNull(constants$936.SCardAccessStartedEvent$MH,"SCardAccessStartedEvent");
    }
    public static MemoryAddress SCardAccessStartedEvent () {
        var mh$ = SCardAccessStartedEvent$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardReleaseStartedEvent$MH() {
        return RuntimeHelper.requireNonNull(constants$936.SCardReleaseStartedEvent$MH,"SCardReleaseStartedEvent");
    }
    public static void SCardReleaseStartedEvent () {
        var mh$ = SCardReleaseStartedEvent$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress PSCARD_READERSTATEA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPSCARD_READERSTATEA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PSCARD_READERSTATEW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPSCARD_READERSTATEW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PSCARD_READERSTATE = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPSCARD_READERSTATE = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle SCardLocateCardsA$MH() {
        return RuntimeHelper.requireNonNull(constants$937.SCardLocateCardsA$MH,"SCardLocateCardsA");
    }
    public static int SCardLocateCardsA ( long hContext,  Addressable mszCards,  Addressable rgReaderStates,  int cReaders) {
        var mh$ = SCardLocateCardsA$MH();
        try {
            return (int)mh$.invokeExact(hContext, mszCards, rgReaderStates, cReaders);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardLocateCardsW$MH() {
        return RuntimeHelper.requireNonNull(constants$937.SCardLocateCardsW$MH,"SCardLocateCardsW");
    }
    public static int SCardLocateCardsW ( long hContext,  Addressable mszCards,  Addressable rgReaderStates,  int cReaders) {
        var mh$ = SCardLocateCardsW$MH();
        try {
            return (int)mh$.invokeExact(hContext, mszCards, rgReaderStates, cReaders);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress PSCARD_ATRMASK = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPSCARD_ATRMASK = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle SCardLocateCardsByATRA$MH() {
        return RuntimeHelper.requireNonNull(constants$937.SCardLocateCardsByATRA$MH,"SCardLocateCardsByATRA");
    }
    public static int SCardLocateCardsByATRA ( long hContext,  Addressable rgAtrMasks,  int cAtrs,  Addressable rgReaderStates,  int cReaders) {
        var mh$ = SCardLocateCardsByATRA$MH();
        try {
            return (int)mh$.invokeExact(hContext, rgAtrMasks, cAtrs, rgReaderStates, cReaders);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardLocateCardsByATRW$MH() {
        return RuntimeHelper.requireNonNull(constants$937.SCardLocateCardsByATRW$MH,"SCardLocateCardsByATRW");
    }
    public static int SCardLocateCardsByATRW ( long hContext,  Addressable rgAtrMasks,  int cAtrs,  Addressable rgReaderStates,  int cReaders) {
        var mh$ = SCardLocateCardsByATRW$MH();
        try {
            return (int)mh$.invokeExact(hContext, rgAtrMasks, cAtrs, rgReaderStates, cReaders);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardGetStatusChangeA$MH() {
        return RuntimeHelper.requireNonNull(constants$937.SCardGetStatusChangeA$MH,"SCardGetStatusChangeA");
    }
    public static int SCardGetStatusChangeA ( long hContext,  int dwTimeout,  Addressable rgReaderStates,  int cReaders) {
        var mh$ = SCardGetStatusChangeA$MH();
        try {
            return (int)mh$.invokeExact(hContext, dwTimeout, rgReaderStates, cReaders);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardGetStatusChangeW$MH() {
        return RuntimeHelper.requireNonNull(constants$937.SCardGetStatusChangeW$MH,"SCardGetStatusChangeW");
    }
    public static int SCardGetStatusChangeW ( long hContext,  int dwTimeout,  Addressable rgReaderStates,  int cReaders) {
        var mh$ = SCardGetStatusChangeW$MH();
        try {
            return (int)mh$.invokeExact(hContext, dwTimeout, rgReaderStates, cReaders);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardCancel$MH() {
        return RuntimeHelper.requireNonNull(constants$938.SCardCancel$MH,"SCardCancel");
    }
    public static int SCardCancel ( long hContext) {
        var mh$ = SCardCancel$MH();
        try {
            return (int)mh$.invokeExact(hContext);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardConnectA$MH() {
        return RuntimeHelper.requireNonNull(constants$938.SCardConnectA$MH,"SCardConnectA");
    }
    public static int SCardConnectA ( long hContext,  Addressable szReader,  int dwShareMode,  int dwPreferredProtocols,  Addressable phCard,  Addressable pdwActiveProtocol) {
        var mh$ = SCardConnectA$MH();
        try {
            return (int)mh$.invokeExact(hContext, szReader, dwShareMode, dwPreferredProtocols, phCard, pdwActiveProtocol);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardConnectW$MH() {
        return RuntimeHelper.requireNonNull(constants$938.SCardConnectW$MH,"SCardConnectW");
    }
    public static int SCardConnectW ( long hContext,  Addressable szReader,  int dwShareMode,  int dwPreferredProtocols,  Addressable phCard,  Addressable pdwActiveProtocol) {
        var mh$ = SCardConnectW$MH();
        try {
            return (int)mh$.invokeExact(hContext, szReader, dwShareMode, dwPreferredProtocols, phCard, pdwActiveProtocol);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardReconnect$MH() {
        return RuntimeHelper.requireNonNull(constants$938.SCardReconnect$MH,"SCardReconnect");
    }
    public static int SCardReconnect ( long hCard,  int dwShareMode,  int dwPreferredProtocols,  int dwInitialization,  Addressable pdwActiveProtocol) {
        var mh$ = SCardReconnect$MH();
        try {
            return (int)mh$.invokeExact(hCard, dwShareMode, dwPreferredProtocols, dwInitialization, pdwActiveProtocol);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardDisconnect$MH() {
        return RuntimeHelper.requireNonNull(constants$938.SCardDisconnect$MH,"SCardDisconnect");
    }
    public static int SCardDisconnect ( long hCard,  int dwDisposition) {
        var mh$ = SCardDisconnect$MH();
        try {
            return (int)mh$.invokeExact(hCard, dwDisposition);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardBeginTransaction$MH() {
        return RuntimeHelper.requireNonNull(constants$938.SCardBeginTransaction$MH,"SCardBeginTransaction");
    }
    public static int SCardBeginTransaction ( long hCard) {
        var mh$ = SCardBeginTransaction$MH();
        try {
            return (int)mh$.invokeExact(hCard);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardEndTransaction$MH() {
        return RuntimeHelper.requireNonNull(constants$939.SCardEndTransaction$MH,"SCardEndTransaction");
    }
    public static int SCardEndTransaction ( long hCard,  int dwDisposition) {
        var mh$ = SCardEndTransaction$MH();
        try {
            return (int)mh$.invokeExact(hCard, dwDisposition);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardCancelTransaction$MH() {
        return RuntimeHelper.requireNonNull(constants$939.SCardCancelTransaction$MH,"SCardCancelTransaction");
    }
    public static int SCardCancelTransaction ( long hCard) {
        var mh$ = SCardCancelTransaction$MH();
        try {
            return (int)mh$.invokeExact(hCard);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardState$MH() {
        return RuntimeHelper.requireNonNull(constants$939.SCardState$MH,"SCardState");
    }
    public static int SCardState ( long hCard,  Addressable pdwState,  Addressable pdwProtocol,  Addressable pbAtr,  Addressable pcbAtrLen) {
        var mh$ = SCardState$MH();
        try {
            return (int)mh$.invokeExact(hCard, pdwState, pdwProtocol, pbAtr, pcbAtrLen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardStatusA$MH() {
        return RuntimeHelper.requireNonNull(constants$939.SCardStatusA$MH,"SCardStatusA");
    }
    public static int SCardStatusA ( long hCard,  Addressable mszReaderNames,  Addressable pcchReaderLen,  Addressable pdwState,  Addressable pdwProtocol,  Addressable pbAtr,  Addressable pcbAtrLen) {
        var mh$ = SCardStatusA$MH();
        try {
            return (int)mh$.invokeExact(hCard, mszReaderNames, pcchReaderLen, pdwState, pdwProtocol, pbAtr, pcbAtrLen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardStatusW$MH() {
        return RuntimeHelper.requireNonNull(constants$939.SCardStatusW$MH,"SCardStatusW");
    }
    public static int SCardStatusW ( long hCard,  Addressable mszReaderNames,  Addressable pcchReaderLen,  Addressable pdwState,  Addressable pdwProtocol,  Addressable pbAtr,  Addressable pcbAtrLen) {
        var mh$ = SCardStatusW$MH();
        try {
            return (int)mh$.invokeExact(hCard, mszReaderNames, pcchReaderLen, pdwState, pdwProtocol, pbAtr, pcbAtrLen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardTransmit$MH() {
        return RuntimeHelper.requireNonNull(constants$939.SCardTransmit$MH,"SCardTransmit");
    }
    public static int SCardTransmit ( long hCard,  Addressable pioSendPci,  Addressable pbSendBuffer,  int cbSendLength,  Addressable pioRecvPci,  Addressable pbRecvBuffer,  Addressable pcbRecvLength) {
        var mh$ = SCardTransmit$MH();
        try {
            return (int)mh$.invokeExact(hCard, pioSendPci, pbSendBuffer, cbSendLength, pioRecvPci, pbRecvBuffer, pcbRecvLength);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardGetTransmitCount$MH() {
        return RuntimeHelper.requireNonNull(constants$940.SCardGetTransmitCount$MH,"SCardGetTransmitCount");
    }
    public static int SCardGetTransmitCount ( long hCard,  Addressable pcTransmitCount) {
        var mh$ = SCardGetTransmitCount$MH();
        try {
            return (int)mh$.invokeExact(hCard, pcTransmitCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardControl$MH() {
        return RuntimeHelper.requireNonNull(constants$940.SCardControl$MH,"SCardControl");
    }
    public static int SCardControl ( long hCard,  int dwControlCode,  Addressable lpInBuffer,  int cbInBufferSize,  Addressable lpOutBuffer,  int cbOutBufferSize,  Addressable lpBytesReturned) {
        var mh$ = SCardControl$MH();
        try {
            return (int)mh$.invokeExact(hCard, dwControlCode, lpInBuffer, cbInBufferSize, lpOutBuffer, cbOutBufferSize, lpBytesReturned);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardGetAttrib$MH() {
        return RuntimeHelper.requireNonNull(constants$940.SCardGetAttrib$MH,"SCardGetAttrib");
    }
    public static int SCardGetAttrib ( long hCard,  int dwAttrId,  Addressable pbAttr,  Addressable pcbAttrLen) {
        var mh$ = SCardGetAttrib$MH();
        try {
            return (int)mh$.invokeExact(hCard, dwAttrId, pbAttr, pcbAttrLen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardSetAttrib$MH() {
        return RuntimeHelper.requireNonNull(constants$940.SCardSetAttrib$MH,"SCardSetAttrib");
    }
    public static int SCardSetAttrib ( long hCard,  int dwAttrId,  Addressable pbAttr,  int cbAttrLen) {
        var mh$ = SCardSetAttrib$MH();
        try {
            return (int)mh$.invokeExact(hCard, dwAttrId, pbAttr, cbAttrLen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress POPENCARD_SEARCH_CRITERIAA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPOPENCARD_SEARCH_CRITERIAA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress POPENCARD_SEARCH_CRITERIAW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPOPENCARD_SEARCH_CRITERIAW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress POPENCARD_SEARCH_CRITERIA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPOPENCARD_SEARCH_CRITERIA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress POPENCARDNAME_EXA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPOPENCARDNAME_EXA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress POPENCARDNAME_EXW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPOPENCARDNAME_EXW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress POPENCARDNAME_EX = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPOPENCARDNAME_EX = Constants$root.C_POINTER$LAYOUT;
    public static int RSR_MATCH_TYPE_READER_AND_CONTAINER() {
        return (int)1L;
    }
    public static int RSR_MATCH_TYPE_SERIAL_NUMBER() {
        return (int)2L;
    }
    public static int RSR_MATCH_TYPE_ALL_CARDS() {
        return (int)3L;
    }
    public static OfAddress PREADER_SEL_REQUEST = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PREADER_SEL_RESPONSE = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle SCardUIDlgSelectCardA$MH() {
        return RuntimeHelper.requireNonNull(constants$942.SCardUIDlgSelectCardA$MH,"SCardUIDlgSelectCardA");
    }
    public static int SCardUIDlgSelectCardA ( Addressable x0) {
        var mh$ = SCardUIDlgSelectCardA$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardUIDlgSelectCardW$MH() {
        return RuntimeHelper.requireNonNull(constants$942.SCardUIDlgSelectCardW$MH,"SCardUIDlgSelectCardW");
    }
    public static int SCardUIDlgSelectCardW ( Addressable x0) {
        var mh$ = SCardUIDlgSelectCardW$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress POPENCARDNAMEA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPOPENCARDNAMEA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress POPENCARDNAMEW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPOPENCARDNAMEW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress POPENCARDNAME = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPOPENCARDNAME = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle GetOpenCardNameA$MH() {
        return RuntimeHelper.requireNonNull(constants$942.GetOpenCardNameA$MH,"GetOpenCardNameA");
    }
    public static int GetOpenCardNameA ( Addressable x0) {
        var mh$ = GetOpenCardNameA$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetOpenCardNameW$MH() {
        return RuntimeHelper.requireNonNull(constants$942.GetOpenCardNameW$MH,"GetOpenCardNameW");
    }
    public static int GetOpenCardNameW ( Addressable x0) {
        var mh$ = GetOpenCardNameW$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardDlgExtendedError$MH() {
        return RuntimeHelper.requireNonNull(constants$942.SCardDlgExtendedError$MH,"SCardDlgExtendedError");
    }
    public static int SCardDlgExtendedError () {
        var mh$ = SCardDlgExtendedError$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardReadCacheA$MH() {
        return RuntimeHelper.requireNonNull(constants$942.SCardReadCacheA$MH,"SCardReadCacheA");
    }
    public static int SCardReadCacheA ( long hContext,  Addressable CardIdentifier,  int FreshnessCounter,  Addressable LookupName,  Addressable Data,  Addressable DataLen) {
        var mh$ = SCardReadCacheA$MH();
        try {
            return (int)mh$.invokeExact(hContext, CardIdentifier, FreshnessCounter, LookupName, Data, DataLen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardReadCacheW$MH() {
        return RuntimeHelper.requireNonNull(constants$943.SCardReadCacheW$MH,"SCardReadCacheW");
    }
    public static int SCardReadCacheW ( long hContext,  Addressable CardIdentifier,  int FreshnessCounter,  Addressable LookupName,  Addressable Data,  Addressable DataLen) {
        var mh$ = SCardReadCacheW$MH();
        try {
            return (int)mh$.invokeExact(hContext, CardIdentifier, FreshnessCounter, LookupName, Data, DataLen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardWriteCacheA$MH() {
        return RuntimeHelper.requireNonNull(constants$943.SCardWriteCacheA$MH,"SCardWriteCacheA");
    }
    public static int SCardWriteCacheA ( long hContext,  Addressable CardIdentifier,  int FreshnessCounter,  Addressable LookupName,  Addressable Data,  int DataLen) {
        var mh$ = SCardWriteCacheA$MH();
        try {
            return (int)mh$.invokeExact(hContext, CardIdentifier, FreshnessCounter, LookupName, Data, DataLen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardWriteCacheW$MH() {
        return RuntimeHelper.requireNonNull(constants$943.SCardWriteCacheW$MH,"SCardWriteCacheW");
    }
    public static int SCardWriteCacheW ( long hContext,  Addressable CardIdentifier,  int FreshnessCounter,  Addressable LookupName,  Addressable Data,  int DataLen) {
        var mh$ = SCardWriteCacheW$MH();
        try {
            return (int)mh$.invokeExact(hContext, CardIdentifier, FreshnessCounter, LookupName, Data, DataLen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardGetReaderIconA$MH() {
        return RuntimeHelper.requireNonNull(constants$943.SCardGetReaderIconA$MH,"SCardGetReaderIconA");
    }
    public static int SCardGetReaderIconA ( long hContext,  Addressable szReaderName,  Addressable pbIcon,  Addressable pcbIcon) {
        var mh$ = SCardGetReaderIconA$MH();
        try {
            return (int)mh$.invokeExact(hContext, szReaderName, pbIcon, pcbIcon);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardGetReaderIconW$MH() {
        return RuntimeHelper.requireNonNull(constants$943.SCardGetReaderIconW$MH,"SCardGetReaderIconW");
    }
    public static int SCardGetReaderIconW ( long hContext,  Addressable szReaderName,  Addressable pbIcon,  Addressable pcbIcon) {
        var mh$ = SCardGetReaderIconW$MH();
        try {
            return (int)mh$.invokeExact(hContext, szReaderName, pbIcon, pcbIcon);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardGetDeviceTypeIdA$MH() {
        return RuntimeHelper.requireNonNull(constants$943.SCardGetDeviceTypeIdA$MH,"SCardGetDeviceTypeIdA");
    }
    public static int SCardGetDeviceTypeIdA ( long hContext,  Addressable szReaderName,  Addressable pdwDeviceTypeId) {
        var mh$ = SCardGetDeviceTypeIdA$MH();
        try {
            return (int)mh$.invokeExact(hContext, szReaderName, pdwDeviceTypeId);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardGetDeviceTypeIdW$MH() {
        return RuntimeHelper.requireNonNull(constants$944.SCardGetDeviceTypeIdW$MH,"SCardGetDeviceTypeIdW");
    }
    public static int SCardGetDeviceTypeIdW ( long hContext,  Addressable szReaderName,  Addressable pdwDeviceTypeId) {
        var mh$ = SCardGetDeviceTypeIdW$MH();
        try {
            return (int)mh$.invokeExact(hContext, szReaderName, pdwDeviceTypeId);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardGetReaderDeviceInstanceIdA$MH() {
        return RuntimeHelper.requireNonNull(constants$944.SCardGetReaderDeviceInstanceIdA$MH,"SCardGetReaderDeviceInstanceIdA");
    }
    public static int SCardGetReaderDeviceInstanceIdA ( long hContext,  Addressable szReaderName,  Addressable szDeviceInstanceId,  Addressable pcchDeviceInstanceId) {
        var mh$ = SCardGetReaderDeviceInstanceIdA$MH();
        try {
            return (int)mh$.invokeExact(hContext, szReaderName, szDeviceInstanceId, pcchDeviceInstanceId);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardGetReaderDeviceInstanceIdW$MH() {
        return RuntimeHelper.requireNonNull(constants$944.SCardGetReaderDeviceInstanceIdW$MH,"SCardGetReaderDeviceInstanceIdW");
    }
    public static int SCardGetReaderDeviceInstanceIdW ( long hContext,  Addressable szReaderName,  Addressable szDeviceInstanceId,  Addressable pcchDeviceInstanceId) {
        var mh$ = SCardGetReaderDeviceInstanceIdW$MH();
        try {
            return (int)mh$.invokeExact(hContext, szReaderName, szDeviceInstanceId, pcchDeviceInstanceId);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardListReadersWithDeviceInstanceIdA$MH() {
        return RuntimeHelper.requireNonNull(constants$944.SCardListReadersWithDeviceInstanceIdA$MH,"SCardListReadersWithDeviceInstanceIdA");
    }
    public static int SCardListReadersWithDeviceInstanceIdA ( long hContext,  Addressable szDeviceInstanceId,  Addressable mszReaders,  Addressable pcchReaders) {
        var mh$ = SCardListReadersWithDeviceInstanceIdA$MH();
        try {
            return (int)mh$.invokeExact(hContext, szDeviceInstanceId, mszReaders, pcchReaders);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardListReadersWithDeviceInstanceIdW$MH() {
        return RuntimeHelper.requireNonNull(constants$944.SCardListReadersWithDeviceInstanceIdW$MH,"SCardListReadersWithDeviceInstanceIdW");
    }
    public static int SCardListReadersWithDeviceInstanceIdW ( long hContext,  Addressable szDeviceInstanceId,  Addressable mszReaders,  Addressable pcchReaders) {
        var mh$ = SCardListReadersWithDeviceInstanceIdW$MH();
        try {
            return (int)mh$.invokeExact(hContext, szDeviceInstanceId, mszReaders, pcchReaders);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardAudit$MH() {
        return RuntimeHelper.requireNonNull(constants$944.SCardAudit$MH,"SCardAudit");
    }
    public static int SCardAudit ( long hContext,  int dwEvent) {
        var mh$ = SCardAudit$MH();
        try {
            return (int)mh$.invokeExact(hContext, dwEvent);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress HPROPSHEETPAGE = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PROPSHEETPAGE_RESOURCE = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPROPSHEETPAGEA_V1 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPCPROPSHEETPAGEA_V1 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPROPSHEETPAGEA_V2 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPCPROPSHEETPAGEA_V2 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPROPSHEETPAGEA_V3 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPCPROPSHEETPAGEA_V3 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPROPSHEETPAGEA_V4 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPCPROPSHEETPAGEA_V4 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPROPSHEETPAGEW_V1 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPCPROPSHEETPAGEW_V1 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPROPSHEETPAGEW_V2 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPCPROPSHEETPAGEW_V2 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPROPSHEETPAGEW_V3 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPCPROPSHEETPAGEW_V3 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPROPSHEETPAGEW_V4 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPCPROPSHEETPAGEW_V4 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPROPSHEETPAGEA_LATEST = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPROPSHEETPAGEW_LATEST = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPCPROPSHEETPAGEA_LATEST = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPCPROPSHEETPAGEW_LATEST = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPROPSHEETPAGEA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPROPSHEETPAGEW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPCPROPSHEETPAGEA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPCPROPSHEETPAGEW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPROPSHEETHEADERA_V1 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPCPROPSHEETHEADERA_V1 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPROPSHEETHEADERA_V2 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPCPROPSHEETHEADERA_V2 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPROPSHEETHEADERW_V1 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPCPROPSHEETHEADERW_V1 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPROPSHEETHEADERW_V2 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPCPROPSHEETHEADERW_V2 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPROPSHEETHEADERA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPROPSHEETHEADERW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPCPROPSHEETHEADERA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPCPROPSHEETHEADERW = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle CreatePropertySheetPageA$MH() {
        return RuntimeHelper.requireNonNull(constants$946.CreatePropertySheetPageA$MH,"CreatePropertySheetPageA");
    }
    public static MemoryAddress CreatePropertySheetPageA ( Addressable constPropSheetPagePointer) {
        var mh$ = CreatePropertySheetPageA$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(constPropSheetPagePointer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CreatePropertySheetPageW$MH() {
        return RuntimeHelper.requireNonNull(constants$946.CreatePropertySheetPageW$MH,"CreatePropertySheetPageW");
    }
    public static MemoryAddress CreatePropertySheetPageW ( Addressable constPropSheetPagePointer) {
        var mh$ = CreatePropertySheetPageW$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(constPropSheetPagePointer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DestroyPropertySheetPage$MH() {
        return RuntimeHelper.requireNonNull(constants$946.DestroyPropertySheetPage$MH,"DestroyPropertySheetPage");
    }
    public static int DestroyPropertySheetPage ( Addressable x0) {
        var mh$ = DestroyPropertySheetPage$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PropertySheetA$MH() {
        return RuntimeHelper.requireNonNull(constants$946.PropertySheetA$MH,"PropertySheetA");
    }
    public static long PropertySheetA ( Addressable x0) {
        var mh$ = PropertySheetA$MH();
        try {
            return (long)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PropertySheetW$MH() {
        return RuntimeHelper.requireNonNull(constants$946.PropertySheetW$MH,"PropertySheetW");
    }
    public static long PropertySheetW ( Addressable x0) {
        var mh$ = PropertySheetW$MH();
        try {
            return (long)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress LPPSHNOTIFY = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPRINTER_INFO_1A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPRINTER_INFO_1A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPRINTER_INFO_1W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPRINTER_INFO_1W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPRINTER_INFO_1 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPRINTER_INFO_1 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPRINTER_INFO_2A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPRINTER_INFO_2A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPRINTER_INFO_2W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPRINTER_INFO_2W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPRINTER_INFO_2 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPRINTER_INFO_2 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPRINTER_INFO_3 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPRINTER_INFO_3 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPRINTER_INFO_4A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPRINTER_INFO_4A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPRINTER_INFO_4W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPRINTER_INFO_4W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPRINTER_INFO_4 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPRINTER_INFO_4 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPRINTER_INFO_5A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPRINTER_INFO_5A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPRINTER_INFO_5W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPRINTER_INFO_5W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPRINTER_INFO_5 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPRINTER_INFO_5 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPRINTER_INFO_6 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPRINTER_INFO_6 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPRINTER_INFO_7A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPRINTER_INFO_7A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPRINTER_INFO_7W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPRINTER_INFO_7W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPRINTER_INFO_7 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPRINTER_INFO_7 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPRINTER_INFO_8A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPRINTER_INFO_8A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPRINTER_INFO_8W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPRINTER_INFO_8W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPRINTER_INFO_8 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPRINTER_INFO_8 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPRINTER_INFO_9A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPRINTER_INFO_9A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPRINTER_INFO_9W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPRINTER_INFO_9W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPRINTER_INFO_9 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPRINTER_INFO_9 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PJOB_INFO_1A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPJOB_INFO_1A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PJOB_INFO_1W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPJOB_INFO_1W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PJOB_INFO_1 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPJOB_INFO_1 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PJOB_INFO_2A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPJOB_INFO_2A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PJOB_INFO_2W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPJOB_INFO_2W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PJOB_INFO_2 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPJOB_INFO_2 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PJOB_INFO_3 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPJOB_INFO_3 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PJOB_INFO_4A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPJOB_INFO_4A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PJOB_INFO_4W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPJOB_INFO_4W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PJOB_INFO_4 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPJOB_INFO_4 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PADDJOB_INFO_1A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPADDJOB_INFO_1A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PADDJOB_INFO_1W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPADDJOB_INFO_1W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PADDJOB_INFO_1 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPADDJOB_INFO_1 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PDRIVER_INFO_1A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPDRIVER_INFO_1A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PDRIVER_INFO_1W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPDRIVER_INFO_1W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PDRIVER_INFO_1 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPDRIVER_INFO_1 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PDRIVER_INFO_2A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPDRIVER_INFO_2A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PDRIVER_INFO_2W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPDRIVER_INFO_2W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PDRIVER_INFO_2 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPDRIVER_INFO_2 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PDRIVER_INFO_3A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPDRIVER_INFO_3A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PDRIVER_INFO_3W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPDRIVER_INFO_3W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PDRIVER_INFO_3 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPDRIVER_INFO_3 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PDRIVER_INFO_4A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPDRIVER_INFO_4A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PDRIVER_INFO_4W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPDRIVER_INFO_4W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PDRIVER_INFO_4 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPDRIVER_INFO_4 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PDRIVER_INFO_5A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPDRIVER_INFO_5A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PDRIVER_INFO_5W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPDRIVER_INFO_5W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PDRIVER_INFO_5 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPDRIVER_INFO_5 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PDRIVER_INFO_6A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPDRIVER_INFO_6A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PDRIVER_INFO_6W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPDRIVER_INFO_6W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PDRIVER_INFO_6 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPDRIVER_INFO_6 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PDRIVER_INFO_8A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPDRIVER_INFO_8A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PDRIVER_INFO_8W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPDRIVER_INFO_8W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PDRIVER_INFO_8 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPDRIVER_INFO_8 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PDOC_INFO_1A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPDOC_INFO_1A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PDOC_INFO_1W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPDOC_INFO_1W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PDOC_INFO_1 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPDOC_INFO_1 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PFORM_INFO_1A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPFORM_INFO_1A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PFORM_INFO_1W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPFORM_INFO_1W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PFORM_INFO_1 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPFORM_INFO_1 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PFORM_INFO_2A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPFORM_INFO_2A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PFORM_INFO_2W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPFORM_INFO_2W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PFORM_INFO_2 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPFORM_INFO_2 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PDOC_INFO_2A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPDOC_INFO_2A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PDOC_INFO_2W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPDOC_INFO_2W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PDOC_INFO_2 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPDOC_INFO_2 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PDOC_INFO_3A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPDOC_INFO_3A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PDOC_INFO_3W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPDOC_INFO_3W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PDOC_INFO_3 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPDOC_INFO_3 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPRINTPROCESSOR_INFO_1A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPRINTPROCESSOR_INFO_1A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPRINTPROCESSOR_INFO_1W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPRINTPROCESSOR_INFO_1W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPRINTPROCESSOR_INFO_1 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPRINTPROCESSOR_INFO_1 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPRINTPROCESSOR_CAPS_1 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPRINTPROCESSOR_CAPS_2 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPORT_INFO_1A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPORT_INFO_1A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPORT_INFO_1W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPORT_INFO_1W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPORT_INFO_1 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPORT_INFO_1 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPORT_INFO_2A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPORT_INFO_2A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPORT_INFO_2W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPORT_INFO_2W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPORT_INFO_2 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPORT_INFO_2 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPORT_INFO_3A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPORT_INFO_3A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPORT_INFO_3W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPORT_INFO_3W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPORT_INFO_3 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPORT_INFO_3 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMONITOR_INFO_1A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMONITOR_INFO_1A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMONITOR_INFO_1W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMONITOR_INFO_1W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMONITOR_INFO_1 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMONITOR_INFO_1 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMONITOR_INFO_2A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMONITOR_INFO_2A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMONITOR_INFO_2W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMONITOR_INFO_2W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMONITOR_INFO_2 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMONITOR_INFO_2 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PDATATYPES_INFO_1A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPDATATYPES_INFO_1A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PDATATYPES_INFO_1W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPDATATYPES_INFO_1W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PDATATYPES_INFO_1 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPDATATYPES_INFO_1 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPRINTER_DEFAULTSA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPRINTER_DEFAULTSA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPRINTER_DEFAULTSW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPRINTER_DEFAULTSW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPRINTER_DEFAULTS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPRINTER_DEFAULTS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPRINTER_ENUM_VALUESA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPRINTER_ENUM_VALUESA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPRINTER_ENUM_VALUESW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPRINTER_ENUM_VALUESW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPRINTER_ENUM_VALUES = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPRINTER_ENUM_VALUES = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle EnumPrintersA$MH() {
        return RuntimeHelper.requireNonNull(constants$947.EnumPrintersA$MH,"EnumPrintersA");
    }
    public static int EnumPrintersA ( int Flags,  Addressable Name,  int Level,  Addressable pPrinterEnum,  int cbBuf,  Addressable pcbNeeded,  Addressable pcReturned) {
        var mh$ = EnumPrintersA$MH();
        try {
            return (int)mh$.invokeExact(Flags, Name, Level, pPrinterEnum, cbBuf, pcbNeeded, pcReturned);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumPrintersW$MH() {
        return RuntimeHelper.requireNonNull(constants$947.EnumPrintersW$MH,"EnumPrintersW");
    }
    public static int EnumPrintersW ( int Flags,  Addressable Name,  int Level,  Addressable pPrinterEnum,  int cbBuf,  Addressable pcbNeeded,  Addressable pcReturned) {
        var mh$ = EnumPrintersW$MH();
        try {
            return (int)mh$.invokeExact(Flags, Name, Level, pPrinterEnum, cbBuf, pcbNeeded, pcReturned);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetSpoolFileHandle$MH() {
        return RuntimeHelper.requireNonNull(constants$947.GetSpoolFileHandle$MH,"GetSpoolFileHandle");
    }
    public static MemoryAddress GetSpoolFileHandle ( Addressable hPrinter) {
        var mh$ = GetSpoolFileHandle$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(hPrinter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CommitSpoolData$MH() {
        return RuntimeHelper.requireNonNull(constants$948.CommitSpoolData$MH,"CommitSpoolData");
    }
    public static MemoryAddress CommitSpoolData ( Addressable hPrinter,  Addressable hSpoolFile,  int cbCommit) {
        var mh$ = CommitSpoolData$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(hPrinter, hSpoolFile, cbCommit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CloseSpoolFileHandle$MH() {
        return RuntimeHelper.requireNonNull(constants$948.CloseSpoolFileHandle$MH,"CloseSpoolFileHandle");
    }
    public static int CloseSpoolFileHandle ( Addressable hPrinter,  Addressable hSpoolFile) {
        var mh$ = CloseSpoolFileHandle$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, hSpoolFile);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OpenPrinterA$MH() {
        return RuntimeHelper.requireNonNull(constants$948.OpenPrinterA$MH,"OpenPrinterA");
    }
    public static int OpenPrinterA ( Addressable pPrinterName,  Addressable phPrinter,  Addressable pDefault) {
        var mh$ = OpenPrinterA$MH();
        try {
            return (int)mh$.invokeExact(pPrinterName, phPrinter, pDefault);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OpenPrinterW$MH() {
        return RuntimeHelper.requireNonNull(constants$948.OpenPrinterW$MH,"OpenPrinterW");
    }
    public static int OpenPrinterW ( Addressable pPrinterName,  Addressable phPrinter,  Addressable pDefault) {
        var mh$ = OpenPrinterW$MH();
        try {
            return (int)mh$.invokeExact(pPrinterName, phPrinter, pDefault);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ResetPrinterA$MH() {
        return RuntimeHelper.requireNonNull(constants$948.ResetPrinterA$MH,"ResetPrinterA");
    }
    public static int ResetPrinterA ( Addressable hPrinter,  Addressable pDefault) {
        var mh$ = ResetPrinterA$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pDefault);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ResetPrinterW$MH() {
        return RuntimeHelper.requireNonNull(constants$948.ResetPrinterW$MH,"ResetPrinterW");
    }
    public static int ResetPrinterW ( Addressable hPrinter,  Addressable pDefault) {
        var mh$ = ResetPrinterW$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pDefault);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetJobA$MH() {
        return RuntimeHelper.requireNonNull(constants$949.SetJobA$MH,"SetJobA");
    }
    public static int SetJobA ( Addressable hPrinter,  int JobId,  int Level,  Addressable pJob,  int Command) {
        var mh$ = SetJobA$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, JobId, Level, pJob, Command);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetJobW$MH() {
        return RuntimeHelper.requireNonNull(constants$949.SetJobW$MH,"SetJobW");
    }
    public static int SetJobW ( Addressable hPrinter,  int JobId,  int Level,  Addressable pJob,  int Command) {
        var mh$ = SetJobW$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, JobId, Level, pJob, Command);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetJobA$MH() {
        return RuntimeHelper.requireNonNull(constants$949.GetJobA$MH,"GetJobA");
    }
    public static int GetJobA ( Addressable hPrinter,  int JobId,  int Level,  Addressable pJob,  int cbBuf,  Addressable pcbNeeded) {
        var mh$ = GetJobA$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, JobId, Level, pJob, cbBuf, pcbNeeded);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetJobW$MH() {
        return RuntimeHelper.requireNonNull(constants$949.GetJobW$MH,"GetJobW");
    }
    public static int GetJobW ( Addressable hPrinter,  int JobId,  int Level,  Addressable pJob,  int cbBuf,  Addressable pcbNeeded) {
        var mh$ = GetJobW$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, JobId, Level, pJob, cbBuf, pcbNeeded);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumJobsA$MH() {
        return RuntimeHelper.requireNonNull(constants$949.EnumJobsA$MH,"EnumJobsA");
    }
    public static int EnumJobsA ( Addressable hPrinter,  int FirstJob,  int NoJobs,  int Level,  Addressable pJob,  int cbBuf,  Addressable pcbNeeded,  Addressable pcReturned) {
        var mh$ = EnumJobsA$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, FirstJob, NoJobs, Level, pJob, cbBuf, pcbNeeded, pcReturned);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumJobsW$MH() {
        return RuntimeHelper.requireNonNull(constants$949.EnumJobsW$MH,"EnumJobsW");
    }
    public static int EnumJobsW ( Addressable hPrinter,  int FirstJob,  int NoJobs,  int Level,  Addressable pJob,  int cbBuf,  Addressable pcbNeeded,  Addressable pcReturned) {
        var mh$ = EnumJobsW$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, FirstJob, NoJobs, Level, pJob, cbBuf, pcbNeeded, pcReturned);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddPrinterA$MH() {
        return RuntimeHelper.requireNonNull(constants$950.AddPrinterA$MH,"AddPrinterA");
    }
    public static MemoryAddress AddPrinterA ( Addressable pName,  int Level,  Addressable pPrinter) {
        var mh$ = AddPrinterA$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(pName, Level, pPrinter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddPrinterW$MH() {
        return RuntimeHelper.requireNonNull(constants$950.AddPrinterW$MH,"AddPrinterW");
    }
    public static MemoryAddress AddPrinterW ( Addressable pName,  int Level,  Addressable pPrinter) {
        var mh$ = AddPrinterW$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(pName, Level, pPrinter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePrinter$MH() {
        return RuntimeHelper.requireNonNull(constants$950.DeletePrinter$MH,"DeletePrinter");
    }
    public static int DeletePrinter ( Addressable hPrinter) {
        var mh$ = DeletePrinter$MH();
        try {
            return (int)mh$.invokeExact(hPrinter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetPrinterA$MH() {
        return RuntimeHelper.requireNonNull(constants$950.SetPrinterA$MH,"SetPrinterA");
    }
    public static int SetPrinterA ( Addressable hPrinter,  int Level,  Addressable pPrinter,  int Command) {
        var mh$ = SetPrinterA$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, Level, pPrinter, Command);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetPrinterW$MH() {
        return RuntimeHelper.requireNonNull(constants$950.SetPrinterW$MH,"SetPrinterW");
    }
    public static int SetPrinterW ( Addressable hPrinter,  int Level,  Addressable pPrinter,  int Command) {
        var mh$ = SetPrinterW$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, Level, pPrinter, Command);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetPrinterA$MH() {
        return RuntimeHelper.requireNonNull(constants$950.GetPrinterA$MH,"GetPrinterA");
    }
    public static int GetPrinterA ( Addressable hPrinter,  int Level,  Addressable pPrinter,  int cbBuf,  Addressable pcbNeeded) {
        var mh$ = GetPrinterA$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, Level, pPrinter, cbBuf, pcbNeeded);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetPrinterW$MH() {
        return RuntimeHelper.requireNonNull(constants$951.GetPrinterW$MH,"GetPrinterW");
    }
    public static int GetPrinterW ( Addressable hPrinter,  int Level,  Addressable pPrinter,  int cbBuf,  Addressable pcbNeeded) {
        var mh$ = GetPrinterW$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, Level, pPrinter, cbBuf, pcbNeeded);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddPrinterDriverA$MH() {
        return RuntimeHelper.requireNonNull(constants$951.AddPrinterDriverA$MH,"AddPrinterDriverA");
    }
    public static int AddPrinterDriverA ( Addressable pName,  int Level,  Addressable pDriverInfo) {
        var mh$ = AddPrinterDriverA$MH();
        try {
            return (int)mh$.invokeExact(pName, Level, pDriverInfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddPrinterDriverW$MH() {
        return RuntimeHelper.requireNonNull(constants$951.AddPrinterDriverW$MH,"AddPrinterDriverW");
    }
    public static int AddPrinterDriverW ( Addressable pName,  int Level,  Addressable pDriverInfo) {
        var mh$ = AddPrinterDriverW$MH();
        try {
            return (int)mh$.invokeExact(pName, Level, pDriverInfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddPrinterDriverExA$MH() {
        return RuntimeHelper.requireNonNull(constants$951.AddPrinterDriverExA$MH,"AddPrinterDriverExA");
    }
    public static int AddPrinterDriverExA ( Addressable pName,  int Level,  Addressable lpbDriverInfo,  int dwFileCopyFlags) {
        var mh$ = AddPrinterDriverExA$MH();
        try {
            return (int)mh$.invokeExact(pName, Level, lpbDriverInfo, dwFileCopyFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddPrinterDriverExW$MH() {
        return RuntimeHelper.requireNonNull(constants$951.AddPrinterDriverExW$MH,"AddPrinterDriverExW");
    }
    public static int AddPrinterDriverExW ( Addressable pName,  int Level,  Addressable lpbDriverInfo,  int dwFileCopyFlags) {
        var mh$ = AddPrinterDriverExW$MH();
        try {
            return (int)mh$.invokeExact(pName, Level, lpbDriverInfo, dwFileCopyFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumPrinterDriversA$MH() {
        return RuntimeHelper.requireNonNull(constants$951.EnumPrinterDriversA$MH,"EnumPrinterDriversA");
    }
    public static int EnumPrinterDriversA ( Addressable pName,  Addressable pEnvironment,  int Level,  Addressable pDriverInfo,  int cbBuf,  Addressable pcbNeeded,  Addressable pcReturned) {
        var mh$ = EnumPrinterDriversA$MH();
        try {
            return (int)mh$.invokeExact(pName, pEnvironment, Level, pDriverInfo, cbBuf, pcbNeeded, pcReturned);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumPrinterDriversW$MH() {
        return RuntimeHelper.requireNonNull(constants$952.EnumPrinterDriversW$MH,"EnumPrinterDriversW");
    }
    public static int EnumPrinterDriversW ( Addressable pName,  Addressable pEnvironment,  int Level,  Addressable pDriverInfo,  int cbBuf,  Addressable pcbNeeded,  Addressable pcReturned) {
        var mh$ = EnumPrinterDriversW$MH();
        try {
            return (int)mh$.invokeExact(pName, pEnvironment, Level, pDriverInfo, cbBuf, pcbNeeded, pcReturned);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetPrinterDriverA$MH() {
        return RuntimeHelper.requireNonNull(constants$952.GetPrinterDriverA$MH,"GetPrinterDriverA");
    }
    public static int GetPrinterDriverA ( Addressable hPrinter,  Addressable pEnvironment,  int Level,  Addressable pDriverInfo,  int cbBuf,  Addressable pcbNeeded) {
        var mh$ = GetPrinterDriverA$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pEnvironment, Level, pDriverInfo, cbBuf, pcbNeeded);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetPrinterDriverW$MH() {
        return RuntimeHelper.requireNonNull(constants$952.GetPrinterDriverW$MH,"GetPrinterDriverW");
    }
    public static int GetPrinterDriverW ( Addressable hPrinter,  Addressable pEnvironment,  int Level,  Addressable pDriverInfo,  int cbBuf,  Addressable pcbNeeded) {
        var mh$ = GetPrinterDriverW$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pEnvironment, Level, pDriverInfo, cbBuf, pcbNeeded);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetPrinterDriverDirectoryA$MH() {
        return RuntimeHelper.requireNonNull(constants$952.GetPrinterDriverDirectoryA$MH,"GetPrinterDriverDirectoryA");
    }
    public static int GetPrinterDriverDirectoryA ( Addressable pName,  Addressable pEnvironment,  int Level,  Addressable pDriverDirectory,  int cbBuf,  Addressable pcbNeeded) {
        var mh$ = GetPrinterDriverDirectoryA$MH();
        try {
            return (int)mh$.invokeExact(pName, pEnvironment, Level, pDriverDirectory, cbBuf, pcbNeeded);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetPrinterDriverDirectoryW$MH() {
        return RuntimeHelper.requireNonNull(constants$952.GetPrinterDriverDirectoryW$MH,"GetPrinterDriverDirectoryW");
    }
    public static int GetPrinterDriverDirectoryW ( Addressable pName,  Addressable pEnvironment,  int Level,  Addressable pDriverDirectory,  int cbBuf,  Addressable pcbNeeded) {
        var mh$ = GetPrinterDriverDirectoryW$MH();
        try {
            return (int)mh$.invokeExact(pName, pEnvironment, Level, pDriverDirectory, cbBuf, pcbNeeded);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePrinterDriverA$MH() {
        return RuntimeHelper.requireNonNull(constants$952.DeletePrinterDriverA$MH,"DeletePrinterDriverA");
    }
    public static int DeletePrinterDriverA ( Addressable pName,  Addressable pEnvironment,  Addressable pDriverName) {
        var mh$ = DeletePrinterDriverA$MH();
        try {
            return (int)mh$.invokeExact(pName, pEnvironment, pDriverName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePrinterDriverW$MH() {
        return RuntimeHelper.requireNonNull(constants$953.DeletePrinterDriverW$MH,"DeletePrinterDriverW");
    }
    public static int DeletePrinterDriverW ( Addressable pName,  Addressable pEnvironment,  Addressable pDriverName) {
        var mh$ = DeletePrinterDriverW$MH();
        try {
            return (int)mh$.invokeExact(pName, pEnvironment, pDriverName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePrinterDriverExA$MH() {
        return RuntimeHelper.requireNonNull(constants$953.DeletePrinterDriverExA$MH,"DeletePrinterDriverExA");
    }
    public static int DeletePrinterDriverExA ( Addressable pName,  Addressable pEnvironment,  Addressable pDriverName,  int dwDeleteFlag,  int dwVersionFlag) {
        var mh$ = DeletePrinterDriverExA$MH();
        try {
            return (int)mh$.invokeExact(pName, pEnvironment, pDriverName, dwDeleteFlag, dwVersionFlag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePrinterDriverExW$MH() {
        return RuntimeHelper.requireNonNull(constants$953.DeletePrinterDriverExW$MH,"DeletePrinterDriverExW");
    }
    public static int DeletePrinterDriverExW ( Addressable pName,  Addressable pEnvironment,  Addressable pDriverName,  int dwDeleteFlag,  int dwVersionFlag) {
        var mh$ = DeletePrinterDriverExW$MH();
        try {
            return (int)mh$.invokeExact(pName, pEnvironment, pDriverName, dwDeleteFlag, dwVersionFlag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddPrintProcessorA$MH() {
        return RuntimeHelper.requireNonNull(constants$953.AddPrintProcessorA$MH,"AddPrintProcessorA");
    }
    public static int AddPrintProcessorA ( Addressable pName,  Addressable pEnvironment,  Addressable pPathName,  Addressable pPrintProcessorName) {
        var mh$ = AddPrintProcessorA$MH();
        try {
            return (int)mh$.invokeExact(pName, pEnvironment, pPathName, pPrintProcessorName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddPrintProcessorW$MH() {
        return RuntimeHelper.requireNonNull(constants$953.AddPrintProcessorW$MH,"AddPrintProcessorW");
    }
    public static int AddPrintProcessorW ( Addressable pName,  Addressable pEnvironment,  Addressable pPathName,  Addressable pPrintProcessorName) {
        var mh$ = AddPrintProcessorW$MH();
        try {
            return (int)mh$.invokeExact(pName, pEnvironment, pPathName, pPrintProcessorName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumPrintProcessorsA$MH() {
        return RuntimeHelper.requireNonNull(constants$953.EnumPrintProcessorsA$MH,"EnumPrintProcessorsA");
    }
    public static int EnumPrintProcessorsA ( Addressable pName,  Addressable pEnvironment,  int Level,  Addressable pPrintProcessorInfo,  int cbBuf,  Addressable pcbNeeded,  Addressable pcReturned) {
        var mh$ = EnumPrintProcessorsA$MH();
        try {
            return (int)mh$.invokeExact(pName, pEnvironment, Level, pPrintProcessorInfo, cbBuf, pcbNeeded, pcReturned);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumPrintProcessorsW$MH() {
        return RuntimeHelper.requireNonNull(constants$954.EnumPrintProcessorsW$MH,"EnumPrintProcessorsW");
    }
    public static int EnumPrintProcessorsW ( Addressable pName,  Addressable pEnvironment,  int Level,  Addressable pPrintProcessorInfo,  int cbBuf,  Addressable pcbNeeded,  Addressable pcReturned) {
        var mh$ = EnumPrintProcessorsW$MH();
        try {
            return (int)mh$.invokeExact(pName, pEnvironment, Level, pPrintProcessorInfo, cbBuf, pcbNeeded, pcReturned);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetPrintProcessorDirectoryA$MH() {
        return RuntimeHelper.requireNonNull(constants$954.GetPrintProcessorDirectoryA$MH,"GetPrintProcessorDirectoryA");
    }
    public static int GetPrintProcessorDirectoryA ( Addressable pName,  Addressable pEnvironment,  int Level,  Addressable pPrintProcessorInfo,  int cbBuf,  Addressable pcbNeeded) {
        var mh$ = GetPrintProcessorDirectoryA$MH();
        try {
            return (int)mh$.invokeExact(pName, pEnvironment, Level, pPrintProcessorInfo, cbBuf, pcbNeeded);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetPrintProcessorDirectoryW$MH() {
        return RuntimeHelper.requireNonNull(constants$954.GetPrintProcessorDirectoryW$MH,"GetPrintProcessorDirectoryW");
    }
    public static int GetPrintProcessorDirectoryW ( Addressable pName,  Addressable pEnvironment,  int Level,  Addressable pPrintProcessorInfo,  int cbBuf,  Addressable pcbNeeded) {
        var mh$ = GetPrintProcessorDirectoryW$MH();
        try {
            return (int)mh$.invokeExact(pName, pEnvironment, Level, pPrintProcessorInfo, cbBuf, pcbNeeded);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumPrintProcessorDatatypesA$MH() {
        return RuntimeHelper.requireNonNull(constants$954.EnumPrintProcessorDatatypesA$MH,"EnumPrintProcessorDatatypesA");
    }
    public static int EnumPrintProcessorDatatypesA ( Addressable pName,  Addressable pPrintProcessorName,  int Level,  Addressable pDatatypes,  int cbBuf,  Addressable pcbNeeded,  Addressable pcReturned) {
        var mh$ = EnumPrintProcessorDatatypesA$MH();
        try {
            return (int)mh$.invokeExact(pName, pPrintProcessorName, Level, pDatatypes, cbBuf, pcbNeeded, pcReturned);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumPrintProcessorDatatypesW$MH() {
        return RuntimeHelper.requireNonNull(constants$954.EnumPrintProcessorDatatypesW$MH,"EnumPrintProcessorDatatypesW");
    }
    public static int EnumPrintProcessorDatatypesW ( Addressable pName,  Addressable pPrintProcessorName,  int Level,  Addressable pDatatypes,  int cbBuf,  Addressable pcbNeeded,  Addressable pcReturned) {
        var mh$ = EnumPrintProcessorDatatypesW$MH();
        try {
            return (int)mh$.invokeExact(pName, pPrintProcessorName, Level, pDatatypes, cbBuf, pcbNeeded, pcReturned);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePrintProcessorA$MH() {
        return RuntimeHelper.requireNonNull(constants$954.DeletePrintProcessorA$MH,"DeletePrintProcessorA");
    }
    public static int DeletePrintProcessorA ( Addressable pName,  Addressable pEnvironment,  Addressable pPrintProcessorName) {
        var mh$ = DeletePrintProcessorA$MH();
        try {
            return (int)mh$.invokeExact(pName, pEnvironment, pPrintProcessorName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePrintProcessorW$MH() {
        return RuntimeHelper.requireNonNull(constants$955.DeletePrintProcessorW$MH,"DeletePrintProcessorW");
    }
    public static int DeletePrintProcessorW ( Addressable pName,  Addressable pEnvironment,  Addressable pPrintProcessorName) {
        var mh$ = DeletePrintProcessorW$MH();
        try {
            return (int)mh$.invokeExact(pName, pEnvironment, pPrintProcessorName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle StartDocPrinterA$MH() {
        return RuntimeHelper.requireNonNull(constants$955.StartDocPrinterA$MH,"StartDocPrinterA");
    }
    public static int StartDocPrinterA ( Addressable hPrinter,  int Level,  Addressable pDocInfo) {
        var mh$ = StartDocPrinterA$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, Level, pDocInfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle StartDocPrinterW$MH() {
        return RuntimeHelper.requireNonNull(constants$955.StartDocPrinterW$MH,"StartDocPrinterW");
    }
    public static int StartDocPrinterW ( Addressable hPrinter,  int Level,  Addressable pDocInfo) {
        var mh$ = StartDocPrinterW$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, Level, pDocInfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle StartPagePrinter$MH() {
        return RuntimeHelper.requireNonNull(constants$955.StartPagePrinter$MH,"StartPagePrinter");
    }
    public static int StartPagePrinter ( Addressable hPrinter) {
        var mh$ = StartPagePrinter$MH();
        try {
            return (int)mh$.invokeExact(hPrinter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WritePrinter$MH() {
        return RuntimeHelper.requireNonNull(constants$955.WritePrinter$MH,"WritePrinter");
    }
    public static int WritePrinter ( Addressable hPrinter,  Addressable pBuf,  int cbBuf,  Addressable pcWritten) {
        var mh$ = WritePrinter$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pBuf, cbBuf, pcWritten);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle FlushPrinter$MH() {
        return RuntimeHelper.requireNonNull(constants$955.FlushPrinter$MH,"FlushPrinter");
    }
    public static int FlushPrinter ( Addressable hPrinter,  Addressable pBuf,  int cbBuf,  Addressable pcWritten,  int cSleep) {
        var mh$ = FlushPrinter$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pBuf, cbBuf, pcWritten, cSleep);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EndPagePrinter$MH() {
        return RuntimeHelper.requireNonNull(constants$956.EndPagePrinter$MH,"EndPagePrinter");
    }
    public static int EndPagePrinter ( Addressable hPrinter) {
        var mh$ = EndPagePrinter$MH();
        try {
            return (int)mh$.invokeExact(hPrinter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AbortPrinter$MH() {
        return RuntimeHelper.requireNonNull(constants$956.AbortPrinter$MH,"AbortPrinter");
    }
    public static int AbortPrinter ( Addressable hPrinter) {
        var mh$ = AbortPrinter$MH();
        try {
            return (int)mh$.invokeExact(hPrinter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ReadPrinter$MH() {
        return RuntimeHelper.requireNonNull(constants$956.ReadPrinter$MH,"ReadPrinter");
    }
    public static int ReadPrinter ( Addressable hPrinter,  Addressable pBuf,  int cbBuf,  Addressable pNoBytesRead) {
        var mh$ = ReadPrinter$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pBuf, cbBuf, pNoBytesRead);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EndDocPrinter$MH() {
        return RuntimeHelper.requireNonNull(constants$956.EndDocPrinter$MH,"EndDocPrinter");
    }
    public static int EndDocPrinter ( Addressable hPrinter) {
        var mh$ = EndDocPrinter$MH();
        try {
            return (int)mh$.invokeExact(hPrinter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddJobA$MH() {
        return RuntimeHelper.requireNonNull(constants$956.AddJobA$MH,"AddJobA");
    }
    public static int AddJobA ( Addressable hPrinter,  int Level,  Addressable pData,  int cbBuf,  Addressable pcbNeeded) {
        var mh$ = AddJobA$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, Level, pData, cbBuf, pcbNeeded);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddJobW$MH() {
        return RuntimeHelper.requireNonNull(constants$956.AddJobW$MH,"AddJobW");
    }
    public static int AddJobW ( Addressable hPrinter,  int Level,  Addressable pData,  int cbBuf,  Addressable pcbNeeded) {
        var mh$ = AddJobW$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, Level, pData, cbBuf, pcbNeeded);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ScheduleJob$MH() {
        return RuntimeHelper.requireNonNull(constants$957.ScheduleJob$MH,"ScheduleJob");
    }
    public static int ScheduleJob ( Addressable hPrinter,  int JobId) {
        var mh$ = ScheduleJob$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, JobId);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PrinterProperties$MH() {
        return RuntimeHelper.requireNonNull(constants$957.PrinterProperties$MH,"PrinterProperties");
    }
    public static int PrinterProperties ( Addressable hWnd,  Addressable hPrinter) {
        var mh$ = PrinterProperties$MH();
        try {
            return (int)mh$.invokeExact(hWnd, hPrinter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DocumentPropertiesA$MH() {
        return RuntimeHelper.requireNonNull(constants$957.DocumentPropertiesA$MH,"DocumentPropertiesA");
    }
    public static int DocumentPropertiesA ( Addressable hWnd,  Addressable hPrinter,  Addressable pDeviceName,  Addressable pDevModeOutput,  Addressable pDevModeInput,  int fMode) {
        var mh$ = DocumentPropertiesA$MH();
        try {
            return (int)mh$.invokeExact(hWnd, hPrinter, pDeviceName, pDevModeOutput, pDevModeInput, fMode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DocumentPropertiesW$MH() {
        return RuntimeHelper.requireNonNull(constants$957.DocumentPropertiesW$MH,"DocumentPropertiesW");
    }
    public static int DocumentPropertiesW ( Addressable hWnd,  Addressable hPrinter,  Addressable pDeviceName,  Addressable pDevModeOutput,  Addressable pDevModeInput,  int fMode) {
        var mh$ = DocumentPropertiesW$MH();
        try {
            return (int)mh$.invokeExact(hWnd, hPrinter, pDeviceName, pDevModeOutput, pDevModeInput, fMode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AdvancedDocumentPropertiesA$MH() {
        return RuntimeHelper.requireNonNull(constants$957.AdvancedDocumentPropertiesA$MH,"AdvancedDocumentPropertiesA");
    }
    public static int AdvancedDocumentPropertiesA ( Addressable hWnd,  Addressable hPrinter,  Addressable pDeviceName,  Addressable pDevModeOutput,  Addressable pDevModeInput) {
        var mh$ = AdvancedDocumentPropertiesA$MH();
        try {
            return (int)mh$.invokeExact(hWnd, hPrinter, pDeviceName, pDevModeOutput, pDevModeInput);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AdvancedDocumentPropertiesW$MH() {
        return RuntimeHelper.requireNonNull(constants$957.AdvancedDocumentPropertiesW$MH,"AdvancedDocumentPropertiesW");
    }
    public static int AdvancedDocumentPropertiesW ( Addressable hWnd,  Addressable hPrinter,  Addressable pDeviceName,  Addressable pDevModeOutput,  Addressable pDevModeInput) {
        var mh$ = AdvancedDocumentPropertiesW$MH();
        try {
            return (int)mh$.invokeExact(hWnd, hPrinter, pDeviceName, pDevModeOutput, pDevModeInput);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ExtDeviceMode$MH() {
        return RuntimeHelper.requireNonNull(constants$958.ExtDeviceMode$MH,"ExtDeviceMode");
    }
    public static int ExtDeviceMode ( Addressable hWnd,  Addressable hInst,  Addressable pDevModeOutput,  Addressable pDeviceName,  Addressable pPort,  Addressable pDevModeInput,  Addressable pProfile,  int fMode) {
        var mh$ = ExtDeviceMode$MH();
        try {
            return (int)mh$.invokeExact(hWnd, hInst, pDevModeOutput, pDeviceName, pPort, pDevModeInput, pProfile, fMode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetPrinterDataA$MH() {
        return RuntimeHelper.requireNonNull(constants$958.GetPrinterDataA$MH,"GetPrinterDataA");
    }
    public static int GetPrinterDataA ( Addressable hPrinter,  Addressable pValueName,  Addressable pType,  Addressable pData,  int nSize,  Addressable pcbNeeded) {
        var mh$ = GetPrinterDataA$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pValueName, pType, pData, nSize, pcbNeeded);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetPrinterDataW$MH() {
        return RuntimeHelper.requireNonNull(constants$958.GetPrinterDataW$MH,"GetPrinterDataW");
    }
    public static int GetPrinterDataW ( Addressable hPrinter,  Addressable pValueName,  Addressable pType,  Addressable pData,  int nSize,  Addressable pcbNeeded) {
        var mh$ = GetPrinterDataW$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pValueName, pType, pData, nSize, pcbNeeded);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetPrinterDataExA$MH() {
        return RuntimeHelper.requireNonNull(constants$958.GetPrinterDataExA$MH,"GetPrinterDataExA");
    }
    public static int GetPrinterDataExA ( Addressable hPrinter,  Addressable pKeyName,  Addressable pValueName,  Addressable pType,  Addressable pData,  int nSize,  Addressable pcbNeeded) {
        var mh$ = GetPrinterDataExA$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pKeyName, pValueName, pType, pData, nSize, pcbNeeded);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetPrinterDataExW$MH() {
        return RuntimeHelper.requireNonNull(constants$958.GetPrinterDataExW$MH,"GetPrinterDataExW");
    }
    public static int GetPrinterDataExW ( Addressable hPrinter,  Addressable pKeyName,  Addressable pValueName,  Addressable pType,  Addressable pData,  int nSize,  Addressable pcbNeeded) {
        var mh$ = GetPrinterDataExW$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pKeyName, pValueName, pType, pData, nSize, pcbNeeded);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumPrinterDataA$MH() {
        return RuntimeHelper.requireNonNull(constants$958.EnumPrinterDataA$MH,"EnumPrinterDataA");
    }
    public static int EnumPrinterDataA ( Addressable hPrinter,  int dwIndex,  Addressable pValueName,  int cbValueName,  Addressable pcbValueName,  Addressable pType,  Addressable pData,  int cbData,  Addressable pcbData) {
        var mh$ = EnumPrinterDataA$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, dwIndex, pValueName, cbValueName, pcbValueName, pType, pData, cbData, pcbData);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumPrinterDataW$MH() {
        return RuntimeHelper.requireNonNull(constants$959.EnumPrinterDataW$MH,"EnumPrinterDataW");
    }
    public static int EnumPrinterDataW ( Addressable hPrinter,  int dwIndex,  Addressable pValueName,  int cbValueName,  Addressable pcbValueName,  Addressable pType,  Addressable pData,  int cbData,  Addressable pcbData) {
        var mh$ = EnumPrinterDataW$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, dwIndex, pValueName, cbValueName, pcbValueName, pType, pData, cbData, pcbData);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumPrinterDataExA$MH() {
        return RuntimeHelper.requireNonNull(constants$959.EnumPrinterDataExA$MH,"EnumPrinterDataExA");
    }
    public static int EnumPrinterDataExA ( Addressable hPrinter,  Addressable pKeyName,  Addressable pEnumValues,  int cbEnumValues,  Addressable pcbEnumValues,  Addressable pnEnumValues) {
        var mh$ = EnumPrinterDataExA$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pKeyName, pEnumValues, cbEnumValues, pcbEnumValues, pnEnumValues);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumPrinterDataExW$MH() {
        return RuntimeHelper.requireNonNull(constants$959.EnumPrinterDataExW$MH,"EnumPrinterDataExW");
    }
    public static int EnumPrinterDataExW ( Addressable hPrinter,  Addressable pKeyName,  Addressable pEnumValues,  int cbEnumValues,  Addressable pcbEnumValues,  Addressable pnEnumValues) {
        var mh$ = EnumPrinterDataExW$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pKeyName, pEnumValues, cbEnumValues, pcbEnumValues, pnEnumValues);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumPrinterKeyA$MH() {
        return RuntimeHelper.requireNonNull(constants$959.EnumPrinterKeyA$MH,"EnumPrinterKeyA");
    }
    public static int EnumPrinterKeyA ( Addressable hPrinter,  Addressable pKeyName,  Addressable pSubkey,  int cbSubkey,  Addressable pcbSubkey) {
        var mh$ = EnumPrinterKeyA$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pKeyName, pSubkey, cbSubkey, pcbSubkey);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumPrinterKeyW$MH() {
        return RuntimeHelper.requireNonNull(constants$959.EnumPrinterKeyW$MH,"EnumPrinterKeyW");
    }
    public static int EnumPrinterKeyW ( Addressable hPrinter,  Addressable pKeyName,  Addressable pSubkey,  int cbSubkey,  Addressable pcbSubkey) {
        var mh$ = EnumPrinterKeyW$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pKeyName, pSubkey, cbSubkey, pcbSubkey);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetPrinterDataA$MH() {
        return RuntimeHelper.requireNonNull(constants$959.SetPrinterDataA$MH,"SetPrinterDataA");
    }
    public static int SetPrinterDataA ( Addressable hPrinter,  Addressable pValueName,  int Type,  Addressable pData,  int cbData) {
        var mh$ = SetPrinterDataA$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pValueName, Type, pData, cbData);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetPrinterDataW$MH() {
        return RuntimeHelper.requireNonNull(constants$960.SetPrinterDataW$MH,"SetPrinterDataW");
    }
    public static int SetPrinterDataW ( Addressable hPrinter,  Addressable pValueName,  int Type,  Addressable pData,  int cbData) {
        var mh$ = SetPrinterDataW$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pValueName, Type, pData, cbData);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetPrinterDataExA$MH() {
        return RuntimeHelper.requireNonNull(constants$960.SetPrinterDataExA$MH,"SetPrinterDataExA");
    }
    public static int SetPrinterDataExA ( Addressable hPrinter,  Addressable pKeyName,  Addressable pValueName,  int Type,  Addressable pData,  int cbData) {
        var mh$ = SetPrinterDataExA$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pKeyName, pValueName, Type, pData, cbData);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetPrinterDataExW$MH() {
        return RuntimeHelper.requireNonNull(constants$960.SetPrinterDataExW$MH,"SetPrinterDataExW");
    }
    public static int SetPrinterDataExW ( Addressable hPrinter,  Addressable pKeyName,  Addressable pValueName,  int Type,  Addressable pData,  int cbData) {
        var mh$ = SetPrinterDataExW$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pKeyName, pValueName, Type, pData, cbData);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePrinterDataA$MH() {
        return RuntimeHelper.requireNonNull(constants$960.DeletePrinterDataA$MH,"DeletePrinterDataA");
    }
    public static int DeletePrinterDataA ( Addressable hPrinter,  Addressable pValueName) {
        var mh$ = DeletePrinterDataA$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pValueName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePrinterDataW$MH() {
        return RuntimeHelper.requireNonNull(constants$960.DeletePrinterDataW$MH,"DeletePrinterDataW");
    }
    public static int DeletePrinterDataW ( Addressable hPrinter,  Addressable pValueName) {
        var mh$ = DeletePrinterDataW$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pValueName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePrinterDataExA$MH() {
        return RuntimeHelper.requireNonNull(constants$960.DeletePrinterDataExA$MH,"DeletePrinterDataExA");
    }
    public static int DeletePrinterDataExA ( Addressable hPrinter,  Addressable pKeyName,  Addressable pValueName) {
        var mh$ = DeletePrinterDataExA$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pKeyName, pValueName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePrinterDataExW$MH() {
        return RuntimeHelper.requireNonNull(constants$961.DeletePrinterDataExW$MH,"DeletePrinterDataExW");
    }
    public static int DeletePrinterDataExW ( Addressable hPrinter,  Addressable pKeyName,  Addressable pValueName) {
        var mh$ = DeletePrinterDataExW$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pKeyName, pValueName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePrinterKeyA$MH() {
        return RuntimeHelper.requireNonNull(constants$961.DeletePrinterKeyA$MH,"DeletePrinterKeyA");
    }
    public static int DeletePrinterKeyA ( Addressable hPrinter,  Addressable pKeyName) {
        var mh$ = DeletePrinterKeyA$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pKeyName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePrinterKeyW$MH() {
        return RuntimeHelper.requireNonNull(constants$961.DeletePrinterKeyW$MH,"DeletePrinterKeyW");
    }
    public static int DeletePrinterKeyW ( Addressable hPrinter,  Addressable pKeyName) {
        var mh$ = DeletePrinterKeyW$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pKeyName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress PPRINTER_NOTIFY_OPTIONS_TYPE = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPRINTER_NOTIFY_OPTIONS_TYPE = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPRINTER_NOTIFY_OPTIONS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPRINTER_NOTIFY_OPTIONS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPRINTER_NOTIFY_INFO_DATA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPRINTER_NOTIFY_INFO_DATA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPRINTER_NOTIFY_INFO = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPRINTER_NOTIFY_INFO = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PBINARY_CONTAINER = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PBIDI_DATA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPBIDI_DATA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PBIDI_REQUEST_DATA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPBIDI_REQUEST_DATA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PBIDI_REQUEST_CONTAINER = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPBIDI_REQUEST_CONTAINER = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PBIDI_RESPONSE_DATA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPBIDI_RESPONSE_DATA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PBIDI_RESPONSE_CONTAINER = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPBIDI_RESPONSE_CONTAINER = Constants$root.C_POINTER$LAYOUT;
    public static int BIDI_NULL() {
        return (int)0L;
    }
    public static int BIDI_INT() {
        return (int)1L;
    }
    public static int BIDI_FLOAT() {
        return (int)2L;
    }
    public static int BIDI_BOOL() {
        return (int)3L;
    }
    public static int BIDI_STRING() {
        return (int)4L;
    }
    public static int BIDI_TEXT() {
        return (int)5L;
    }
    public static int BIDI_ENUM() {
        return (int)6L;
    }
    public static int BIDI_BLOB() {
        return (int)7L;
    }
    public static MethodHandle WaitForPrinterChange$MH() {
        return RuntimeHelper.requireNonNull(constants$961.WaitForPrinterChange$MH,"WaitForPrinterChange");
    }
    public static int WaitForPrinterChange ( Addressable hPrinter,  int Flags) {
        var mh$ = WaitForPrinterChange$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, Flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle FindFirstPrinterChangeNotification$MH() {
        return RuntimeHelper.requireNonNull(constants$961.FindFirstPrinterChangeNotification$MH,"FindFirstPrinterChangeNotification");
    }
    public static MemoryAddress FindFirstPrinterChangeNotification ( Addressable hPrinter,  int fdwFilter,  int fdwOptions,  Addressable pPrinterNotifyOptions) {
        var mh$ = FindFirstPrinterChangeNotification$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(hPrinter, fdwFilter, fdwOptions, pPrinterNotifyOptions);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle FindNextPrinterChangeNotification$MH() {
        return RuntimeHelper.requireNonNull(constants$961.FindNextPrinterChangeNotification$MH,"FindNextPrinterChangeNotification");
    }
    public static int FindNextPrinterChangeNotification ( Addressable hChange,  Addressable pdwChange,  Addressable pvReserved,  Addressable ppPrinterNotifyInfo) {
        var mh$ = FindNextPrinterChangeNotification$MH();
        try {
            return (int)mh$.invokeExact(hChange, pdwChange, pvReserved, ppPrinterNotifyInfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle FreePrinterNotifyInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$962.FreePrinterNotifyInfo$MH,"FreePrinterNotifyInfo");
    }
    public static int FreePrinterNotifyInfo ( Addressable pPrinterNotifyInfo) {
        var mh$ = FreePrinterNotifyInfo$MH();
        try {
            return (int)mh$.invokeExact(pPrinterNotifyInfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle FindClosePrinterChangeNotification$MH() {
        return RuntimeHelper.requireNonNull(constants$962.FindClosePrinterChangeNotification$MH,"FindClosePrinterChangeNotification");
    }
    public static int FindClosePrinterChangeNotification ( Addressable hChange) {
        var mh$ = FindClosePrinterChangeNotification$MH();
        try {
            return (int)mh$.invokeExact(hChange);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PrinterMessageBoxA$MH() {
        return RuntimeHelper.requireNonNull(constants$962.PrinterMessageBoxA$MH,"PrinterMessageBoxA");
    }
    public static int PrinterMessageBoxA ( Addressable hPrinter,  int Error,  Addressable hWnd,  Addressable pText,  Addressable pCaption,  int dwType) {
        var mh$ = PrinterMessageBoxA$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, Error, hWnd, pText, pCaption, dwType);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PrinterMessageBoxW$MH() {
        return RuntimeHelper.requireNonNull(constants$962.PrinterMessageBoxW$MH,"PrinterMessageBoxW");
    }
    public static int PrinterMessageBoxW ( Addressable hPrinter,  int Error,  Addressable hWnd,  Addressable pText,  Addressable pCaption,  int dwType) {
        var mh$ = PrinterMessageBoxW$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, Error, hWnd, pText, pCaption, dwType);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ClosePrinter$MH() {
        return RuntimeHelper.requireNonNull(constants$962.ClosePrinter$MH,"ClosePrinter");
    }
    public static int ClosePrinter ( Addressable hPrinter) {
        var mh$ = ClosePrinter$MH();
        try {
            return (int)mh$.invokeExact(hPrinter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddFormA$MH() {
        return RuntimeHelper.requireNonNull(constants$962.AddFormA$MH,"AddFormA");
    }
    public static int AddFormA ( Addressable hPrinter,  int Level,  Addressable pForm) {
        var mh$ = AddFormA$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, Level, pForm);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddFormW$MH() {
        return RuntimeHelper.requireNonNull(constants$963.AddFormW$MH,"AddFormW");
    }
    public static int AddFormW ( Addressable hPrinter,  int Level,  Addressable pForm) {
        var mh$ = AddFormW$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, Level, pForm);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeleteFormA$MH() {
        return RuntimeHelper.requireNonNull(constants$963.DeleteFormA$MH,"DeleteFormA");
    }
    public static int DeleteFormA ( Addressable hPrinter,  Addressable pFormName) {
        var mh$ = DeleteFormA$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pFormName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeleteFormW$MH() {
        return RuntimeHelper.requireNonNull(constants$963.DeleteFormW$MH,"DeleteFormW");
    }
    public static int DeleteFormW ( Addressable hPrinter,  Addressable pFormName) {
        var mh$ = DeleteFormW$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pFormName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetFormA$MH() {
        return RuntimeHelper.requireNonNull(constants$963.GetFormA$MH,"GetFormA");
    }
    public static int GetFormA ( Addressable hPrinter,  Addressable pFormName,  int Level,  Addressable pForm,  int cbBuf,  Addressable pcbNeeded) {
        var mh$ = GetFormA$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pFormName, Level, pForm, cbBuf, pcbNeeded);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetFormW$MH() {
        return RuntimeHelper.requireNonNull(constants$963.GetFormW$MH,"GetFormW");
    }
    public static int GetFormW ( Addressable hPrinter,  Addressable pFormName,  int Level,  Addressable pForm,  int cbBuf,  Addressable pcbNeeded) {
        var mh$ = GetFormW$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pFormName, Level, pForm, cbBuf, pcbNeeded);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetFormA$MH() {
        return RuntimeHelper.requireNonNull(constants$963.SetFormA$MH,"SetFormA");
    }
    public static int SetFormA ( Addressable hPrinter,  Addressable pFormName,  int Level,  Addressable pForm) {
        var mh$ = SetFormA$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pFormName, Level, pForm);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetFormW$MH() {
        return RuntimeHelper.requireNonNull(constants$964.SetFormW$MH,"SetFormW");
    }
    public static int SetFormW ( Addressable hPrinter,  Addressable pFormName,  int Level,  Addressable pForm) {
        var mh$ = SetFormW$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pFormName, Level, pForm);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumFormsA$MH() {
        return RuntimeHelper.requireNonNull(constants$964.EnumFormsA$MH,"EnumFormsA");
    }
    public static int EnumFormsA ( Addressable hPrinter,  int Level,  Addressable pForm,  int cbBuf,  Addressable pcbNeeded,  Addressable pcReturned) {
        var mh$ = EnumFormsA$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, Level, pForm, cbBuf, pcbNeeded, pcReturned);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumFormsW$MH() {
        return RuntimeHelper.requireNonNull(constants$964.EnumFormsW$MH,"EnumFormsW");
    }
    public static int EnumFormsW ( Addressable hPrinter,  int Level,  Addressable pForm,  int cbBuf,  Addressable pcbNeeded,  Addressable pcReturned) {
        var mh$ = EnumFormsW$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, Level, pForm, cbBuf, pcbNeeded, pcReturned);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumMonitorsA$MH() {
        return RuntimeHelper.requireNonNull(constants$964.EnumMonitorsA$MH,"EnumMonitorsA");
    }
    public static int EnumMonitorsA ( Addressable pName,  int Level,  Addressable pMonitor,  int cbBuf,  Addressable pcbNeeded,  Addressable pcReturned) {
        var mh$ = EnumMonitorsA$MH();
        try {
            return (int)mh$.invokeExact(pName, Level, pMonitor, cbBuf, pcbNeeded, pcReturned);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumMonitorsW$MH() {
        return RuntimeHelper.requireNonNull(constants$964.EnumMonitorsW$MH,"EnumMonitorsW");
    }
    public static int EnumMonitorsW ( Addressable pName,  int Level,  Addressable pMonitor,  int cbBuf,  Addressable pcbNeeded,  Addressable pcReturned) {
        var mh$ = EnumMonitorsW$MH();
        try {
            return (int)mh$.invokeExact(pName, Level, pMonitor, cbBuf, pcbNeeded, pcReturned);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddMonitorA$MH() {
        return RuntimeHelper.requireNonNull(constants$964.AddMonitorA$MH,"AddMonitorA");
    }
    public static int AddMonitorA ( Addressable pName,  int Level,  Addressable pMonitors) {
        var mh$ = AddMonitorA$MH();
        try {
            return (int)mh$.invokeExact(pName, Level, pMonitors);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddMonitorW$MH() {
        return RuntimeHelper.requireNonNull(constants$965.AddMonitorW$MH,"AddMonitorW");
    }
    public static int AddMonitorW ( Addressable pName,  int Level,  Addressable pMonitors) {
        var mh$ = AddMonitorW$MH();
        try {
            return (int)mh$.invokeExact(pName, Level, pMonitors);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeleteMonitorA$MH() {
        return RuntimeHelper.requireNonNull(constants$965.DeleteMonitorA$MH,"DeleteMonitorA");
    }
    public static int DeleteMonitorA ( Addressable pName,  Addressable pEnvironment,  Addressable pMonitorName) {
        var mh$ = DeleteMonitorA$MH();
        try {
            return (int)mh$.invokeExact(pName, pEnvironment, pMonitorName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeleteMonitorW$MH() {
        return RuntimeHelper.requireNonNull(constants$965.DeleteMonitorW$MH,"DeleteMonitorW");
    }
    public static int DeleteMonitorW ( Addressable pName,  Addressable pEnvironment,  Addressable pMonitorName) {
        var mh$ = DeleteMonitorW$MH();
        try {
            return (int)mh$.invokeExact(pName, pEnvironment, pMonitorName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumPortsA$MH() {
        return RuntimeHelper.requireNonNull(constants$965.EnumPortsA$MH,"EnumPortsA");
    }
    public static int EnumPortsA ( Addressable pName,  int Level,  Addressable pPort,  int cbBuf,  Addressable pcbNeeded,  Addressable pcReturned) {
        var mh$ = EnumPortsA$MH();
        try {
            return (int)mh$.invokeExact(pName, Level, pPort, cbBuf, pcbNeeded, pcReturned);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumPortsW$MH() {
        return RuntimeHelper.requireNonNull(constants$965.EnumPortsW$MH,"EnumPortsW");
    }
    public static int EnumPortsW ( Addressable pName,  int Level,  Addressable pPort,  int cbBuf,  Addressable pcbNeeded,  Addressable pcReturned) {
        var mh$ = EnumPortsW$MH();
        try {
            return (int)mh$.invokeExact(pName, Level, pPort, cbBuf, pcbNeeded, pcReturned);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddPortA$MH() {
        return RuntimeHelper.requireNonNull(constants$965.AddPortA$MH,"AddPortA");
    }
    public static int AddPortA ( Addressable pName,  Addressable hWnd,  Addressable pMonitorName) {
        var mh$ = AddPortA$MH();
        try {
            return (int)mh$.invokeExact(pName, hWnd, pMonitorName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddPortW$MH() {
        return RuntimeHelper.requireNonNull(constants$966.AddPortW$MH,"AddPortW");
    }
    public static int AddPortW ( Addressable pName,  Addressable hWnd,  Addressable pMonitorName) {
        var mh$ = AddPortW$MH();
        try {
            return (int)mh$.invokeExact(pName, hWnd, pMonitorName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ConfigurePortA$MH() {
        return RuntimeHelper.requireNonNull(constants$966.ConfigurePortA$MH,"ConfigurePortA");
    }
    public static int ConfigurePortA ( Addressable pName,  Addressable hWnd,  Addressable pPortName) {
        var mh$ = ConfigurePortA$MH();
        try {
            return (int)mh$.invokeExact(pName, hWnd, pPortName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ConfigurePortW$MH() {
        return RuntimeHelper.requireNonNull(constants$966.ConfigurePortW$MH,"ConfigurePortW");
    }
    public static int ConfigurePortW ( Addressable pName,  Addressable hWnd,  Addressable pPortName) {
        var mh$ = ConfigurePortW$MH();
        try {
            return (int)mh$.invokeExact(pName, hWnd, pPortName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePortA$MH() {
        return RuntimeHelper.requireNonNull(constants$966.DeletePortA$MH,"DeletePortA");
    }
    public static int DeletePortA ( Addressable pName,  Addressable hWnd,  Addressable pPortName) {
        var mh$ = DeletePortA$MH();
        try {
            return (int)mh$.invokeExact(pName, hWnd, pPortName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePortW$MH() {
        return RuntimeHelper.requireNonNull(constants$966.DeletePortW$MH,"DeletePortW");
    }
    public static int DeletePortW ( Addressable pName,  Addressable hWnd,  Addressable pPortName) {
        var mh$ = DeletePortW$MH();
        try {
            return (int)mh$.invokeExact(pName, hWnd, pPortName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle XcvDataW$MH() {
        return RuntimeHelper.requireNonNull(constants$966.XcvDataW$MH,"XcvDataW");
    }
    public static int XcvDataW ( Addressable hXcv,  Addressable pszDataName,  Addressable pInputData,  int cbInputData,  Addressable pOutputData,  int cbOutputData,  Addressable pcbOutputNeeded,  Addressable pdwStatus) {
        var mh$ = XcvDataW$MH();
        try {
            return (int)mh$.invokeExact(hXcv, pszDataName, pInputData, cbInputData, pOutputData, cbOutputData, pcbOutputNeeded, pdwStatus);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetDefaultPrinterA$MH() {
        return RuntimeHelper.requireNonNull(constants$967.GetDefaultPrinterA$MH,"GetDefaultPrinterA");
    }
    public static int GetDefaultPrinterA ( Addressable pszBuffer,  Addressable pcchBuffer) {
        var mh$ = GetDefaultPrinterA$MH();
        try {
            return (int)mh$.invokeExact(pszBuffer, pcchBuffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetDefaultPrinterW$MH() {
        return RuntimeHelper.requireNonNull(constants$967.GetDefaultPrinterW$MH,"GetDefaultPrinterW");
    }
    public static int GetDefaultPrinterW ( Addressable pszBuffer,  Addressable pcchBuffer) {
        var mh$ = GetDefaultPrinterW$MH();
        try {
            return (int)mh$.invokeExact(pszBuffer, pcchBuffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetDefaultPrinterA$MH() {
        return RuntimeHelper.requireNonNull(constants$967.SetDefaultPrinterA$MH,"SetDefaultPrinterA");
    }
    public static int SetDefaultPrinterA ( Addressable pszPrinter) {
        var mh$ = SetDefaultPrinterA$MH();
        try {
            return (int)mh$.invokeExact(pszPrinter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetDefaultPrinterW$MH() {
        return RuntimeHelper.requireNonNull(constants$967.SetDefaultPrinterW$MH,"SetDefaultPrinterW");
    }
    public static int SetDefaultPrinterW ( Addressable pszPrinter) {
        var mh$ = SetDefaultPrinterW$MH();
        try {
            return (int)mh$.invokeExact(pszPrinter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetPortA$MH() {
        return RuntimeHelper.requireNonNull(constants$967.SetPortA$MH,"SetPortA");
    }
    public static int SetPortA ( Addressable pName,  Addressable pPortName,  int dwLevel,  Addressable pPortInfo) {
        var mh$ = SetPortA$MH();
        try {
            return (int)mh$.invokeExact(pName, pPortName, dwLevel, pPortInfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetPortW$MH() {
        return RuntimeHelper.requireNonNull(constants$967.SetPortW$MH,"SetPortW");
    }
    public static int SetPortW ( Addressable pName,  Addressable pPortName,  int dwLevel,  Addressable pPortInfo) {
        var mh$ = SetPortW$MH();
        try {
            return (int)mh$.invokeExact(pName, pPortName, dwLevel, pPortInfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddPrinterConnectionA$MH() {
        return RuntimeHelper.requireNonNull(constants$968.AddPrinterConnectionA$MH,"AddPrinterConnectionA");
    }
    public static int AddPrinterConnectionA ( Addressable pName) {
        var mh$ = AddPrinterConnectionA$MH();
        try {
            return (int)mh$.invokeExact(pName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddPrinterConnectionW$MH() {
        return RuntimeHelper.requireNonNull(constants$968.AddPrinterConnectionW$MH,"AddPrinterConnectionW");
    }
    public static int AddPrinterConnectionW ( Addressable pName) {
        var mh$ = AddPrinterConnectionW$MH();
        try {
            return (int)mh$.invokeExact(pName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePrinterConnectionA$MH() {
        return RuntimeHelper.requireNonNull(constants$968.DeletePrinterConnectionA$MH,"DeletePrinterConnectionA");
    }
    public static int DeletePrinterConnectionA ( Addressable pName) {
        var mh$ = DeletePrinterConnectionA$MH();
        try {
            return (int)mh$.invokeExact(pName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePrinterConnectionW$MH() {
        return RuntimeHelper.requireNonNull(constants$968.DeletePrinterConnectionW$MH,"DeletePrinterConnectionW");
    }
    public static int DeletePrinterConnectionW ( Addressable pName) {
        var mh$ = DeletePrinterConnectionW$MH();
        try {
            return (int)mh$.invokeExact(pName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ConnectToPrinterDlg$MH() {
        return RuntimeHelper.requireNonNull(constants$968.ConnectToPrinterDlg$MH,"ConnectToPrinterDlg");
    }
    public static MemoryAddress ConnectToPrinterDlg ( Addressable hwnd,  int Flags) {
        var mh$ = ConnectToPrinterDlg$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(hwnd, Flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress PPROVIDOR_INFO_1A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPROVIDOR_INFO_1A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPROVIDOR_INFO_1W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPROVIDOR_INFO_1W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPROVIDOR_INFO_1 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPROVIDOR_INFO_1 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPROVIDOR_INFO_2A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPROVIDOR_INFO_2A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPROVIDOR_INFO_2W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPROVIDOR_INFO_2W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPROVIDOR_INFO_2 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPROVIDOR_INFO_2 = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle AddPrintProvidorA$MH() {
        return RuntimeHelper.requireNonNull(constants$968.AddPrintProvidorA$MH,"AddPrintProvidorA");
    }
    public static int AddPrintProvidorA ( Addressable pName,  int Level,  Addressable pProvidorInfo) {
        var mh$ = AddPrintProvidorA$MH();
        try {
            return (int)mh$.invokeExact(pName, Level, pProvidorInfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddPrintProvidorW$MH() {
        return RuntimeHelper.requireNonNull(constants$969.AddPrintProvidorW$MH,"AddPrintProvidorW");
    }
    public static int AddPrintProvidorW ( Addressable pName,  int Level,  Addressable pProvidorInfo) {
        var mh$ = AddPrintProvidorW$MH();
        try {
            return (int)mh$.invokeExact(pName, Level, pProvidorInfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePrintProvidorA$MH() {
        return RuntimeHelper.requireNonNull(constants$969.DeletePrintProvidorA$MH,"DeletePrintProvidorA");
    }
    public static int DeletePrintProvidorA ( Addressable pName,  Addressable pEnvironment,  Addressable pPrintProvidorName) {
        var mh$ = DeletePrintProvidorA$MH();
        try {
            return (int)mh$.invokeExact(pName, pEnvironment, pPrintProvidorName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePrintProvidorW$MH() {
        return RuntimeHelper.requireNonNull(constants$969.DeletePrintProvidorW$MH,"DeletePrintProvidorW");
    }
    public static int DeletePrintProvidorW ( Addressable pName,  Addressable pEnvironment,  Addressable pPrintProvidorName) {
        var mh$ = DeletePrintProvidorW$MH();
        try {
            return (int)mh$.invokeExact(pName, pEnvironment, pPrintProvidorName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IsValidDevmodeA$MH() {
        return RuntimeHelper.requireNonNull(constants$969.IsValidDevmodeA$MH,"IsValidDevmodeA");
    }
    public static int IsValidDevmodeA ( Addressable pDevmode,  long DevmodeSize) {
        var mh$ = IsValidDevmodeA$MH();
        try {
            return (int)mh$.invokeExact(pDevmode, DevmodeSize);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IsValidDevmodeW$MH() {
        return RuntimeHelper.requireNonNull(constants$969.IsValidDevmodeW$MH,"IsValidDevmodeW");
    }
    public static int IsValidDevmodeW ( Addressable pDevmode,  long DevmodeSize) {
        var mh$ = IsValidDevmodeW$MH();
        try {
            return (int)mh$.invokeExact(pDevmode, DevmodeSize);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int PRINTER_OPTION_NO_CACHE() {
        return (int)1L;
    }
    public static int PRINTER_OPTION_CACHE() {
        return (int)2L;
    }
    public static int PRINTER_OPTION_CLIENT_CHANGE() {
        return (int)4L;
    }
    public static int PRINTER_OPTION_NO_CLIENT_DATA() {
        return (int)8L;
    }
    public static OfAddress PPRINTER_OPTIONSA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPRINTER_OPTIONSA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPRINTER_OPTIONSW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPRINTER_OPTIONSW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPRINTER_OPTIONS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPRINTER_OPTIONS = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle OpenPrinter2A$MH() {
        return RuntimeHelper.requireNonNull(constants$969.OpenPrinter2A$MH,"OpenPrinter2A");
    }
    public static int OpenPrinter2A ( Addressable pPrinterName,  Addressable phPrinter,  Addressable pDefault,  Addressable pOptions) {
        var mh$ = OpenPrinter2A$MH();
        try {
            return (int)mh$.invokeExact(pPrinterName, phPrinter, pDefault, pOptions);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OpenPrinter2W$MH() {
        return RuntimeHelper.requireNonNull(constants$970.OpenPrinter2W$MH,"OpenPrinter2W");
    }
    public static int OpenPrinter2W ( Addressable pPrinterName,  Addressable phPrinter,  Addressable pDefault,  Addressable pOptions) {
        var mh$ = OpenPrinter2W$MH();
        try {
            return (int)mh$.invokeExact(pPrinterName, phPrinter, pDefault, pOptions);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress PPRINTER_CONNECTION_INFO_1A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPRINTER_CONNECTION_INFO_1W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPRINTER_CONNECTION_INFO_1 = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle AddPrinterConnection2A$MH() {
        return RuntimeHelper.requireNonNull(constants$970.AddPrinterConnection2A$MH,"AddPrinterConnection2A");
    }
    public static int AddPrinterConnection2A ( Addressable hWnd,  Addressable pszName,  int dwLevel,  Addressable pConnectionInfo) {
        var mh$ = AddPrinterConnection2A$MH();
        try {
            return (int)mh$.invokeExact(hWnd, pszName, dwLevel, pConnectionInfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddPrinterConnection2W$MH() {
        return RuntimeHelper.requireNonNull(constants$970.AddPrinterConnection2W$MH,"AddPrinterConnection2W");
    }
    public static int AddPrinterConnection2W ( Addressable hWnd,  Addressable pszName,  int dwLevel,  Addressable pConnectionInfo) {
        var mh$ = AddPrinterConnection2W$MH();
        try {
            return (int)mh$.invokeExact(hWnd, pszName, dwLevel, pConnectionInfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle InstallPrinterDriverFromPackageA$MH() {
        return RuntimeHelper.requireNonNull(constants$970.InstallPrinterDriverFromPackageA$MH,"InstallPrinterDriverFromPackageA");
    }
    public static int InstallPrinterDriverFromPackageA ( Addressable pszServer,  Addressable pszInfPath,  Addressable pszDriverName,  Addressable pszEnvironment,  int dwFlags) {
        var mh$ = InstallPrinterDriverFromPackageA$MH();
        try {
            return (int)mh$.invokeExact(pszServer, pszInfPath, pszDriverName, pszEnvironment, dwFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle InstallPrinterDriverFromPackageW$MH() {
        return RuntimeHelper.requireNonNull(constants$970.InstallPrinterDriverFromPackageW$MH,"InstallPrinterDriverFromPackageW");
    }
    public static int InstallPrinterDriverFromPackageW ( Addressable pszServer,  Addressable pszInfPath,  Addressable pszDriverName,  Addressable pszEnvironment,  int dwFlags) {
        var mh$ = InstallPrinterDriverFromPackageW$MH();
        try {
            return (int)mh$.invokeExact(pszServer, pszInfPath, pszDriverName, pszEnvironment, dwFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle UploadPrinterDriverPackageA$MH() {
        return RuntimeHelper.requireNonNull(constants$970.UploadPrinterDriverPackageA$MH,"UploadPrinterDriverPackageA");
    }
    public static int UploadPrinterDriverPackageA ( Addressable pszServer,  Addressable pszInfPath,  Addressable pszEnvironment,  int dwFlags,  Addressable hwnd,  Addressable pszDestInfPath,  Addressable pcchDestInfPath) {
        var mh$ = UploadPrinterDriverPackageA$MH();
        try {
            return (int)mh$.invokeExact(pszServer, pszInfPath, pszEnvironment, dwFlags, hwnd, pszDestInfPath, pcchDestInfPath);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle UploadPrinterDriverPackageW$MH() {
        return RuntimeHelper.requireNonNull(constants$971.UploadPrinterDriverPackageW$MH,"UploadPrinterDriverPackageW");
    }
    public static int UploadPrinterDriverPackageW ( Addressable pszServer,  Addressable pszInfPath,  Addressable pszEnvironment,  int dwFlags,  Addressable hwnd,  Addressable pszDestInfPath,  Addressable pcchDestInfPath) {
        var mh$ = UploadPrinterDriverPackageW$MH();
        try {
            return (int)mh$.invokeExact(pszServer, pszInfPath, pszEnvironment, dwFlags, hwnd, pszDestInfPath, pcchDestInfPath);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress PCORE_PRINTER_DRIVERA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PCORE_PRINTER_DRIVERW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PCORE_PRINTER_DRIVER = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle GetCorePrinterDriversA$MH() {
        return RuntimeHelper.requireNonNull(constants$971.GetCorePrinterDriversA$MH,"GetCorePrinterDriversA");
    }
    public static int GetCorePrinterDriversA ( Addressable pszServer,  Addressable pszEnvironment,  Addressable pszzCoreDriverDependencies,  int cCorePrinterDrivers,  Addressable pCorePrinterDrivers) {
        var mh$ = GetCorePrinterDriversA$MH();
        try {
            return (int)mh$.invokeExact(pszServer, pszEnvironment, pszzCoreDriverDependencies, cCorePrinterDrivers, pCorePrinterDrivers);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetCorePrinterDriversW$MH() {
        return RuntimeHelper.requireNonNull(constants$971.GetCorePrinterDriversW$MH,"GetCorePrinterDriversW");
    }
    public static int GetCorePrinterDriversW ( Addressable pszServer,  Addressable pszEnvironment,  Addressable pszzCoreDriverDependencies,  int cCorePrinterDrivers,  Addressable pCorePrinterDrivers) {
        var mh$ = GetCorePrinterDriversW$MH();
        try {
            return (int)mh$.invokeExact(pszServer, pszEnvironment, pszzCoreDriverDependencies, cCorePrinterDrivers, pCorePrinterDrivers);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CorePrinterDriverInstalledA$MH() {
        return RuntimeHelper.requireNonNull(constants$971.CorePrinterDriverInstalledA$MH,"CorePrinterDriverInstalledA");
    }
    public static int CorePrinterDriverInstalledA ( Addressable pszServer,  Addressable pszEnvironment,  MemorySegment CoreDriverGUID,  MemorySegment ftDriverDate,  long dwlDriverVersion,  Addressable pbDriverInstalled) {
        var mh$ = CorePrinterDriverInstalledA$MH();
        try {
            return (int)mh$.invokeExact(pszServer, pszEnvironment, CoreDriverGUID, ftDriverDate, dwlDriverVersion, pbDriverInstalled);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CorePrinterDriverInstalledW$MH() {
        return RuntimeHelper.requireNonNull(constants$971.CorePrinterDriverInstalledW$MH,"CorePrinterDriverInstalledW");
    }
    public static int CorePrinterDriverInstalledW ( Addressable pszServer,  Addressable pszEnvironment,  MemorySegment CoreDriverGUID,  MemorySegment ftDriverDate,  long dwlDriverVersion,  Addressable pbDriverInstalled) {
        var mh$ = CorePrinterDriverInstalledW$MH();
        try {
            return (int)mh$.invokeExact(pszServer, pszEnvironment, CoreDriverGUID, ftDriverDate, dwlDriverVersion, pbDriverInstalled);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetPrinterDriverPackagePathA$MH() {
        return RuntimeHelper.requireNonNull(constants$971.GetPrinterDriverPackagePathA$MH,"GetPrinterDriverPackagePathA");
    }
    public static int GetPrinterDriverPackagePathA ( Addressable pszServer,  Addressable pszEnvironment,  Addressable pszLanguage,  Addressable pszPackageID,  Addressable pszDriverPackageCab,  int cchDriverPackageCab,  Addressable pcchRequiredSize) {
        var mh$ = GetPrinterDriverPackagePathA$MH();
        try {
            return (int)mh$.invokeExact(pszServer, pszEnvironment, pszLanguage, pszPackageID, pszDriverPackageCab, cchDriverPackageCab, pcchRequiredSize);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetPrinterDriverPackagePathW$MH() {
        return RuntimeHelper.requireNonNull(constants$972.GetPrinterDriverPackagePathW$MH,"GetPrinterDriverPackagePathW");
    }
    public static int GetPrinterDriverPackagePathW ( Addressable pszServer,  Addressable pszEnvironment,  Addressable pszLanguage,  Addressable pszPackageID,  Addressable pszDriverPackageCab,  int cchDriverPackageCab,  Addressable pcchRequiredSize) {
        var mh$ = GetPrinterDriverPackagePathW$MH();
        try {
            return (int)mh$.invokeExact(pszServer, pszEnvironment, pszLanguage, pszPackageID, pszDriverPackageCab, cchDriverPackageCab, pcchRequiredSize);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePrinterDriverPackageA$MH() {
        return RuntimeHelper.requireNonNull(constants$972.DeletePrinterDriverPackageA$MH,"DeletePrinterDriverPackageA");
    }
    public static int DeletePrinterDriverPackageA ( Addressable pszServer,  Addressable pszInfPath,  Addressable pszEnvironment) {
        var mh$ = DeletePrinterDriverPackageA$MH();
        try {
            return (int)mh$.invokeExact(pszServer, pszInfPath, pszEnvironment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePrinterDriverPackageW$MH() {
        return RuntimeHelper.requireNonNull(constants$972.DeletePrinterDriverPackageW$MH,"DeletePrinterDriverPackageW");
    }
    public static int DeletePrinterDriverPackageW ( Addressable pszServer,  Addressable pszInfPath,  Addressable pszEnvironment) {
        var mh$ = DeletePrinterDriverPackageW$MH();
        try {
            return (int)mh$.invokeExact(pszServer, pszInfPath, pszEnvironment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int kPropertyTypeString() {
        return (int)1L;
    }
    public static int kPropertyTypeInt32() {
        return (int)2L;
    }
    public static int kPropertyTypeInt64() {
        return (int)3L;
    }
    public static int kPropertyTypeByte() {
        return (int)4L;
    }
    public static int kPropertyTypeTime() {
        return (int)5L;
    }
    public static int kPropertyTypeDevMode() {
        return (int)6L;
    }
    public static int kPropertyTypeSD() {
        return (int)7L;
    }
    public static int kPropertyTypeNotificationReply() {
        return (int)8L;
    }
    public static int kPropertyTypeNotificationOptions() {
        return (int)9L;
    }
    public static int kPropertyTypeBuffer() {
        return (int)10L;
    }
    public static int kAddingDocumentSequence() {
        return (int)0L;
    }
    public static int kDocumentSequenceAdded() {
        return (int)1L;
    }
    public static int kAddingFixedDocument() {
        return (int)2L;
    }
    public static int kFixedDocumentAdded() {
        return (int)3L;
    }
    public static int kAddingFixedPage() {
        return (int)4L;
    }
    public static int kFixedPageAdded() {
        return (int)5L;
    }
    public static int kResourceAdded() {
        return (int)6L;
    }
    public static int kFontAdded() {
        return (int)7L;
    }
    public static int kImageAdded() {
        return (int)8L;
    }
    public static int kXpsDocumentCommitted() {
        return (int)9L;
    }
    public static int kJobProduction() {
        return (int)1L;
    }
    public static int kJobConsumption() {
        return (int)2L;
    }
    public static MethodHandle ReportJobProcessingProgress$MH() {
        return RuntimeHelper.requireNonNull(constants$972.ReportJobProcessingProgress$MH,"ReportJobProcessingProgress");
    }
    public static int ReportJobProcessingProgress ( Addressable printerHandle,  int jobId,  int jobOperation,  int jobProgress) {
        var mh$ = ReportJobProcessingProgress$MH();
        try {
            return (int)mh$.invokeExact(printerHandle, jobId, jobOperation, jobProgress);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetPrinterDriver2A$MH() {
        return RuntimeHelper.requireNonNull(constants$972.GetPrinterDriver2A$MH,"GetPrinterDriver2A");
    }
    public static int GetPrinterDriver2A ( Addressable hWnd,  Addressable hPrinter,  Addressable pEnvironment,  int Level,  Addressable pDriverInfo,  int cbBuf,  Addressable pcbNeeded) {
        var mh$ = GetPrinterDriver2A$MH();
        try {
            return (int)mh$.invokeExact(hWnd, hPrinter, pEnvironment, Level, pDriverInfo, cbBuf, pcbNeeded);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetPrinterDriver2W$MH() {
        return RuntimeHelper.requireNonNull(constants$972.GetPrinterDriver2W$MH,"GetPrinterDriver2W");
    }
    public static int GetPrinterDriver2W ( Addressable hWnd,  Addressable hPrinter,  Addressable pEnvironment,  int Level,  Addressable pDriverInfo,  int cbBuf,  Addressable pcbNeeded) {
        var mh$ = GetPrinterDriver2W$MH();
        try {
            return (int)mh$.invokeExact(hWnd, hPrinter, pEnvironment, Level, pDriverInfo, cbBuf, pcbNeeded);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int PRINT_EXECUTION_CONTEXT_APPLICATION() {
        return (int)0L;
    }
    public static int PRINT_EXECUTION_CONTEXT_SPOOLER_SERVICE() {
        return (int)1L;
    }
    public static int PRINT_EXECUTION_CONTEXT_SPOOLER_ISOLATION_HOST() {
        return (int)2L;
    }
    public static int PRINT_EXECUTION_CONTEXT_FILTER_PIPELINE() {
        return (int)3L;
    }
    public static int PRINT_EXECUTION_CONTEXT_WOW64() {
        return (int)4L;
    }
    public static MethodHandle GetPrintExecutionData$MH() {
        return RuntimeHelper.requireNonNull(constants$973.GetPrintExecutionData$MH,"GetPrintExecutionData");
    }
    public static int GetPrintExecutionData ( Addressable pData) {
        var mh$ = GetPrintExecutionData$MH();
        try {
            return (int)mh$.invokeExact(pData);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetJobNamedPropertyValue$MH() {
        return RuntimeHelper.requireNonNull(constants$973.GetJobNamedPropertyValue$MH,"GetJobNamedPropertyValue");
    }
    public static int GetJobNamedPropertyValue ( Addressable hPrinter,  int JobId,  Addressable pszName,  Addressable pValue) {
        var mh$ = GetJobNamedPropertyValue$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, JobId, pszName, pValue);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle FreePrintPropertyValue$MH() {
        return RuntimeHelper.requireNonNull(constants$973.FreePrintPropertyValue$MH,"FreePrintPropertyValue");
    }
    public static void FreePrintPropertyValue ( Addressable pValue) {
        var mh$ = FreePrintPropertyValue$MH();
        try {
            mh$.invokeExact(pValue);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle FreePrintNamedPropertyArray$MH() {
        return RuntimeHelper.requireNonNull(constants$973.FreePrintNamedPropertyArray$MH,"FreePrintNamedPropertyArray");
    }
    public static void FreePrintNamedPropertyArray ( int cProperties,  Addressable ppProperties) {
        var mh$ = FreePrintNamedPropertyArray$MH();
        try {
            mh$.invokeExact(cProperties, ppProperties);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetJobNamedProperty$MH() {
        return RuntimeHelper.requireNonNull(constants$973.SetJobNamedProperty$MH,"SetJobNamedProperty");
    }
    public static int SetJobNamedProperty ( Addressable hPrinter,  int JobId,  Addressable pProperty) {
        var mh$ = SetJobNamedProperty$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, JobId, pProperty);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeleteJobNamedProperty$MH() {
        return RuntimeHelper.requireNonNull(constants$973.DeleteJobNamedProperty$MH,"DeleteJobNamedProperty");
    }
    public static int DeleteJobNamedProperty ( Addressable hPrinter,  int JobId,  Addressable pszName) {
        var mh$ = DeleteJobNamedProperty$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, JobId, pszName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumJobNamedProperties$MH() {
        return RuntimeHelper.requireNonNull(constants$974.EnumJobNamedProperties$MH,"EnumJobNamedProperties");
    }
    public static int EnumJobNamedProperties ( Addressable hPrinter,  int JobId,  Addressable pcProperties,  Addressable ppProperties) {
        var mh$ = EnumJobNamedProperties$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, JobId, pcProperties, ppProperties);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetPrintOutputInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$974.GetPrintOutputInfo$MH,"GetPrintOutputInfo");
    }
    public static int GetPrintOutputInfo ( Addressable hWnd,  Addressable pszPrinter,  Addressable phFile,  Addressable ppszOutputFile) {
        var mh$ = GetPrintOutputInfo$MH();
        try {
            return (int)mh$.invokeExact(hWnd, pszPrinter, phFile, ppszOutputFile);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _calloc_base$MH() {
        return RuntimeHelper.requireNonNull(constants$974._calloc_base$MH,"_calloc_base");
    }
    public static MemoryAddress _calloc_base ( long _Count,  long _Size) {
        var mh$ = _calloc_base$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Count, _Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle calloc$MH() {
        return RuntimeHelper.requireNonNull(constants$974.calloc$MH,"calloc");
    }
    public static MemoryAddress calloc ( long _Count,  long _Size) {
        var mh$ = calloc$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Count, _Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _callnewh$MH() {
        return RuntimeHelper.requireNonNull(constants$974._callnewh$MH,"_callnewh");
    }
    public static int _callnewh ( long _Size) {
        var mh$ = _callnewh$MH();
        try {
            return (int)mh$.invokeExact(_Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _expand$MH() {
        return RuntimeHelper.requireNonNull(constants$974._expand$MH,"_expand");
    }
    public static MemoryAddress _expand ( Addressable _Block,  long _Size) {
        var mh$ = _expand$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Block, _Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _free_base$MH() {
        return RuntimeHelper.requireNonNull(constants$975._free_base$MH,"_free_base");
    }
    public static void _free_base ( Addressable _Block) {
        var mh$ = _free_base$MH();
        try {
            mh$.invokeExact(_Block);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle free$MH() {
        return RuntimeHelper.requireNonNull(constants$975.free$MH,"free");
    }
    public static void free ( Addressable _Block) {
        var mh$ = free$MH();
        try {
            mh$.invokeExact(_Block);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _malloc_base$MH() {
        return RuntimeHelper.requireNonNull(constants$975._malloc_base$MH,"_malloc_base");
    }
    public static MemoryAddress _malloc_base ( long _Size) {
        var mh$ = _malloc_base$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle malloc$MH() {
        return RuntimeHelper.requireNonNull(constants$975.malloc$MH,"malloc");
    }
    public static MemoryAddress malloc ( long _Size) {
        var mh$ = malloc$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _msize_base$MH() {
        return RuntimeHelper.requireNonNull(constants$975._msize_base$MH,"_msize_base");
    }
    public static long _msize_base ( Addressable _Block) {
        var mh$ = _msize_base$MH();
        try {
            return (long)mh$.invokeExact(_Block);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _msize$MH() {
        return RuntimeHelper.requireNonNull(constants$975._msize$MH,"_msize");
    }
    public static long _msize ( Addressable _Block) {
        var mh$ = _msize$MH();
        try {
            return (long)mh$.invokeExact(_Block);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _realloc_base$MH() {
        return RuntimeHelper.requireNonNull(constants$976._realloc_base$MH,"_realloc_base");
    }
    public static MemoryAddress _realloc_base ( Addressable _Block,  long _Size) {
        var mh$ = _realloc_base$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Block, _Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle realloc$MH() {
        return RuntimeHelper.requireNonNull(constants$976.realloc$MH,"realloc");
    }
    public static MemoryAddress realloc ( Addressable _Block,  long _Size) {
        var mh$ = realloc$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Block, _Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _recalloc_base$MH() {
        return RuntimeHelper.requireNonNull(constants$976._recalloc_base$MH,"_recalloc_base");
    }
    public static MemoryAddress _recalloc_base ( Addressable _Block,  long _Count,  long _Size) {
        var mh$ = _recalloc_base$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Block, _Count, _Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _recalloc$MH() {
        return RuntimeHelper.requireNonNull(constants$976._recalloc$MH,"_recalloc");
    }
    public static MemoryAddress _recalloc ( Addressable _Block,  long _Count,  long _Size) {
        var mh$ = _recalloc$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Block, _Count, _Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _aligned_free$MH() {
        return RuntimeHelper.requireNonNull(constants$976._aligned_free$MH,"_aligned_free");
    }
    public static void _aligned_free ( Addressable _Block) {
        var mh$ = _aligned_free$MH();
        try {
            mh$.invokeExact(_Block);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _aligned_malloc$MH() {
        return RuntimeHelper.requireNonNull(constants$976._aligned_malloc$MH,"_aligned_malloc");
    }
    public static MemoryAddress _aligned_malloc ( long _Size,  long _Alignment) {
        var mh$ = _aligned_malloc$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Size, _Alignment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _aligned_offset_malloc$MH() {
        return RuntimeHelper.requireNonNull(constants$977._aligned_offset_malloc$MH,"_aligned_offset_malloc");
    }
    public static MemoryAddress _aligned_offset_malloc ( long _Size,  long _Alignment,  long _Offset) {
        var mh$ = _aligned_offset_malloc$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Size, _Alignment, _Offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _aligned_msize$MH() {
        return RuntimeHelper.requireNonNull(constants$977._aligned_msize$MH,"_aligned_msize");
    }
    public static long _aligned_msize ( Addressable _Block,  long _Alignment,  long _Offset) {
        var mh$ = _aligned_msize$MH();
        try {
            return (long)mh$.invokeExact(_Block, _Alignment, _Offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _aligned_offset_realloc$MH() {
        return RuntimeHelper.requireNonNull(constants$977._aligned_offset_realloc$MH,"_aligned_offset_realloc");
    }
    public static MemoryAddress _aligned_offset_realloc ( Addressable _Block,  long _Size,  long _Alignment,  long _Offset) {
        var mh$ = _aligned_offset_realloc$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Block, _Size, _Alignment, _Offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _aligned_offset_recalloc$MH() {
        return RuntimeHelper.requireNonNull(constants$977._aligned_offset_recalloc$MH,"_aligned_offset_recalloc");
    }
    public static MemoryAddress _aligned_offset_recalloc ( Addressable _Block,  long _Count,  long _Size,  long _Alignment,  long _Offset) {
        var mh$ = _aligned_offset_recalloc$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Block, _Count, _Size, _Alignment, _Offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _aligned_realloc$MH() {
        return RuntimeHelper.requireNonNull(constants$977._aligned_realloc$MH,"_aligned_realloc");
    }
    public static MemoryAddress _aligned_realloc ( Addressable _Block,  long _Size,  long _Alignment) {
        var mh$ = _aligned_realloc$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Block, _Size, _Alignment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _aligned_recalloc$MH() {
        return RuntimeHelper.requireNonNull(constants$977._aligned_recalloc$MH,"_aligned_recalloc");
    }
    public static MemoryAddress _aligned_recalloc ( Addressable _Block,  long _Count,  long _Size,  long _Alignment) {
        var mh$ = _aligned_recalloc$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Block, _Count, _Size, _Alignment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfLong ptrdiff_t = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfDouble max_align_t = Constants$root.C_DOUBLE$LAYOUT;
    public static MethodHandle bsearch_s$MH() {
        return RuntimeHelper.requireNonNull(constants$978.bsearch_s$MH,"bsearch_s");
    }
    public static MemoryAddress bsearch_s ( Addressable _Key,  Addressable _Base,  long _NumOfElements,  long _SizeOfElements,  Addressable _CompareFunction,  Addressable _Context) {
        var mh$ = bsearch_s$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Key, _Base, _NumOfElements, _SizeOfElements, _CompareFunction, _Context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle qsort_s$MH() {
        return RuntimeHelper.requireNonNull(constants$978.qsort_s$MH,"qsort_s");
    }
    public static void qsort_s ( Addressable _Base,  long _NumOfElements,  long _SizeOfElements,  Addressable _CompareFunction,  Addressable _Context) {
        var mh$ = qsort_s$MH();
        try {
            mh$.invokeExact(_Base, _NumOfElements, _SizeOfElements, _CompareFunction, _Context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle bsearch$MH() {
        return RuntimeHelper.requireNonNull(constants$979.bsearch$MH,"bsearch");
    }
    public static MemoryAddress bsearch ( Addressable _Key,  Addressable _Base,  long _NumOfElements,  long _SizeOfElements,  Addressable _CompareFunction) {
        var mh$ = bsearch$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Key, _Base, _NumOfElements, _SizeOfElements, _CompareFunction);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle qsort$MH() {
        return RuntimeHelper.requireNonNull(constants$979.qsort$MH,"qsort");
    }
    public static void qsort ( Addressable _Base,  long _NumOfElements,  long _SizeOfElements,  Addressable _CompareFunction) {
        var mh$ = qsort$MH();
        try {
            mh$.invokeExact(_Base, _NumOfElements, _SizeOfElements, _CompareFunction);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _lfind_s$MH() {
        return RuntimeHelper.requireNonNull(constants$979._lfind_s$MH,"_lfind_s");
    }
    public static MemoryAddress _lfind_s ( Addressable _Key,  Addressable _Base,  Addressable _NumOfElements,  long _SizeOfElements,  Addressable _CompareFunction,  Addressable _Context) {
        var mh$ = _lfind_s$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Key, _Base, _NumOfElements, _SizeOfElements, _CompareFunction, _Context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _lfind$MH() {
        return RuntimeHelper.requireNonNull(constants$979._lfind$MH,"_lfind");
    }
    public static MemoryAddress _lfind ( Addressable _Key,  Addressable _Base,  Addressable _NumOfElements,  int _SizeOfElements,  Addressable _CompareFunction) {
        var mh$ = _lfind$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Key, _Base, _NumOfElements, _SizeOfElements, _CompareFunction);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _lsearch_s$MH() {
        return RuntimeHelper.requireNonNull(constants$979._lsearch_s$MH,"_lsearch_s");
    }
    public static MemoryAddress _lsearch_s ( Addressable _Key,  Addressable _Base,  Addressable _NumOfElements,  long _SizeOfElements,  Addressable _CompareFunction,  Addressable _Context) {
        var mh$ = _lsearch_s$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Key, _Base, _NumOfElements, _SizeOfElements, _CompareFunction, _Context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _lsearch$MH() {
        return RuntimeHelper.requireNonNull(constants$979._lsearch$MH,"_lsearch");
    }
    public static MemoryAddress _lsearch ( Addressable _Key,  Addressable _Base,  Addressable _NumOfElements,  int _SizeOfElements,  Addressable _CompareFunction) {
        var mh$ = _lsearch$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Key, _Base, _NumOfElements, _SizeOfElements, _CompareFunction);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle lfind$MH() {
        return RuntimeHelper.requireNonNull(constants$980.lfind$MH,"lfind");
    }
    public static MemoryAddress lfind ( Addressable _Key,  Addressable _Base,  Addressable _NumOfElements,  int _SizeOfElements,  Addressable _CompareFunction) {
        var mh$ = lfind$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Key, _Base, _NumOfElements, _SizeOfElements, _CompareFunction);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle lsearch$MH() {
        return RuntimeHelper.requireNonNull(constants$980.lsearch$MH,"lsearch");
    }
    public static MemoryAddress lsearch ( Addressable _Key,  Addressable _Base,  Addressable _NumOfElements,  int _SizeOfElements,  Addressable _CompareFunction) {
        var mh$ = lsearch$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Key, _Base, _NumOfElements, _SizeOfElements, _CompareFunction);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _itow_s$MH() {
        return RuntimeHelper.requireNonNull(constants$980._itow_s$MH,"_itow_s");
    }
    public static int _itow_s ( int _Value,  Addressable _Buffer,  long _BufferCount,  int _Radix) {
        var mh$ = _itow_s$MH();
        try {
            return (int)mh$.invokeExact(_Value, _Buffer, _BufferCount, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _itow$MH() {
        return RuntimeHelper.requireNonNull(constants$980._itow$MH,"_itow");
    }
    public static MemoryAddress _itow ( int _Value,  Addressable _Buffer,  int _Radix) {
        var mh$ = _itow$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Value, _Buffer, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _ltow_s$MH() {
        return RuntimeHelper.requireNonNull(constants$980._ltow_s$MH,"_ltow_s");
    }
    public static int _ltow_s ( int _Value,  Addressable _Buffer,  long _BufferCount,  int _Radix) {
        var mh$ = _ltow_s$MH();
        try {
            return (int)mh$.invokeExact(_Value, _Buffer, _BufferCount, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _ltow$MH() {
        return RuntimeHelper.requireNonNull(constants$980._ltow$MH,"_ltow");
    }
    public static MemoryAddress _ltow ( int _Value,  Addressable _Buffer,  int _Radix) {
        var mh$ = _ltow$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Value, _Buffer, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _ultow_s$MH() {
        return RuntimeHelper.requireNonNull(constants$981._ultow_s$MH,"_ultow_s");
    }
    public static int _ultow_s ( int _Value,  Addressable _Buffer,  long _BufferCount,  int _Radix) {
        var mh$ = _ultow_s$MH();
        try {
            return (int)mh$.invokeExact(_Value, _Buffer, _BufferCount, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _ultow$MH() {
        return RuntimeHelper.requireNonNull(constants$981._ultow$MH,"_ultow");
    }
    public static MemoryAddress _ultow ( int _Value,  Addressable _Buffer,  int _Radix) {
        var mh$ = _ultow$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Value, _Buffer, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcstod$MH() {
        return RuntimeHelper.requireNonNull(constants$981.wcstod$MH,"wcstod");
    }
    public static double wcstod ( Addressable _String,  Addressable _EndPtr) {
        var mh$ = wcstod$MH();
        try {
            return (double)mh$.invokeExact(_String, _EndPtr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcstod_l$MH() {
        return RuntimeHelper.requireNonNull(constants$981._wcstod_l$MH,"_wcstod_l");
    }
    public static double _wcstod_l ( Addressable _String,  Addressable _EndPtr,  Addressable _Locale) {
        var mh$ = _wcstod_l$MH();
        try {
            return (double)mh$.invokeExact(_String, _EndPtr, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcstol$MH() {
        return RuntimeHelper.requireNonNull(constants$981.wcstol$MH,"wcstol");
    }
    public static int wcstol ( Addressable _String,  Addressable _EndPtr,  int _Radix) {
        var mh$ = wcstol$MH();
        try {
            return (int)mh$.invokeExact(_String, _EndPtr, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcstol_l$MH() {
        return RuntimeHelper.requireNonNull(constants$981._wcstol_l$MH,"_wcstol_l");
    }
    public static int _wcstol_l ( Addressable _String,  Addressable _EndPtr,  int _Radix,  Addressable _Locale) {
        var mh$ = _wcstol_l$MH();
        try {
            return (int)mh$.invokeExact(_String, _EndPtr, _Radix, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcstoll$MH() {
        return RuntimeHelper.requireNonNull(constants$982.wcstoll$MH,"wcstoll");
    }
    public static long wcstoll ( Addressable _String,  Addressable _EndPtr,  int _Radix) {
        var mh$ = wcstoll$MH();
        try {
            return (long)mh$.invokeExact(_String, _EndPtr, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcstoll_l$MH() {
        return RuntimeHelper.requireNonNull(constants$982._wcstoll_l$MH,"_wcstoll_l");
    }
    public static long _wcstoll_l ( Addressable _String,  Addressable _EndPtr,  int _Radix,  Addressable _Locale) {
        var mh$ = _wcstoll_l$MH();
        try {
            return (long)mh$.invokeExact(_String, _EndPtr, _Radix, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcstoul$MH() {
        return RuntimeHelper.requireNonNull(constants$982.wcstoul$MH,"wcstoul");
    }
    public static int wcstoul ( Addressable _String,  Addressable _EndPtr,  int _Radix) {
        var mh$ = wcstoul$MH();
        try {
            return (int)mh$.invokeExact(_String, _EndPtr, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcstoul_l$MH() {
        return RuntimeHelper.requireNonNull(constants$982._wcstoul_l$MH,"_wcstoul_l");
    }
    public static int _wcstoul_l ( Addressable _String,  Addressable _EndPtr,  int _Radix,  Addressable _Locale) {
        var mh$ = _wcstoul_l$MH();
        try {
            return (int)mh$.invokeExact(_String, _EndPtr, _Radix, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcstoull$MH() {
        return RuntimeHelper.requireNonNull(constants$982.wcstoull$MH,"wcstoull");
    }
    public static long wcstoull ( Addressable _String,  Addressable _EndPtr,  int _Radix) {
        var mh$ = wcstoull$MH();
        try {
            return (long)mh$.invokeExact(_String, _EndPtr, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcstoull_l$MH() {
        return RuntimeHelper.requireNonNull(constants$982._wcstoull_l$MH,"_wcstoull_l");
    }
    public static long _wcstoull_l ( Addressable _String,  Addressable _EndPtr,  int _Radix,  Addressable _Locale) {
        var mh$ = _wcstoull_l$MH();
        try {
            return (long)mh$.invokeExact(_String, _EndPtr, _Radix, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcstof$MH() {
        return RuntimeHelper.requireNonNull(constants$983.wcstof$MH,"wcstof");
    }
    public static float wcstof ( Addressable _String,  Addressable _EndPtr) {
        var mh$ = wcstof$MH();
        try {
            return (float)mh$.invokeExact(_String, _EndPtr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcstof_l$MH() {
        return RuntimeHelper.requireNonNull(constants$983._wcstof_l$MH,"_wcstof_l");
    }
    public static float _wcstof_l ( Addressable _String,  Addressable _EndPtr,  Addressable _Locale) {
        var mh$ = _wcstof_l$MH();
        try {
            return (float)mh$.invokeExact(_String, _EndPtr, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wtof$MH() {
        return RuntimeHelper.requireNonNull(constants$983._wtof$MH,"_wtof");
    }
    public static double _wtof ( Addressable _String) {
        var mh$ = _wtof$MH();
        try {
            return (double)mh$.invokeExact(_String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wtof_l$MH() {
        return RuntimeHelper.requireNonNull(constants$983._wtof_l$MH,"_wtof_l");
    }
    public static double _wtof_l ( Addressable _String,  Addressable _Locale) {
        var mh$ = _wtof_l$MH();
        try {
            return (double)mh$.invokeExact(_String, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wtoi$MH() {
        return RuntimeHelper.requireNonNull(constants$983._wtoi$MH,"_wtoi");
    }
    public static int _wtoi ( Addressable _String) {
        var mh$ = _wtoi$MH();
        try {
            return (int)mh$.invokeExact(_String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wtoi_l$MH() {
        return RuntimeHelper.requireNonNull(constants$983._wtoi_l$MH,"_wtoi_l");
    }
    public static int _wtoi_l ( Addressable _String,  Addressable _Locale) {
        var mh$ = _wtoi_l$MH();
        try {
            return (int)mh$.invokeExact(_String, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wtol$MH() {
        return RuntimeHelper.requireNonNull(constants$984._wtol$MH,"_wtol");
    }
    public static int _wtol ( Addressable _String) {
        var mh$ = _wtol$MH();
        try {
            return (int)mh$.invokeExact(_String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wtol_l$MH() {
        return RuntimeHelper.requireNonNull(constants$984._wtol_l$MH,"_wtol_l");
    }
    public static int _wtol_l ( Addressable _String,  Addressable _Locale) {
        var mh$ = _wtol_l$MH();
        try {
            return (int)mh$.invokeExact(_String, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wtoll$MH() {
        return RuntimeHelper.requireNonNull(constants$984._wtoll$MH,"_wtoll");
    }
    public static long _wtoll ( Addressable _String) {
        var mh$ = _wtoll$MH();
        try {
            return (long)mh$.invokeExact(_String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wtoll_l$MH() {
        return RuntimeHelper.requireNonNull(constants$984._wtoll_l$MH,"_wtoll_l");
    }
    public static long _wtoll_l ( Addressable _String,  Addressable _Locale) {
        var mh$ = _wtoll_l$MH();
        try {
            return (long)mh$.invokeExact(_String, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _i64tow_s$MH() {
        return RuntimeHelper.requireNonNull(constants$984._i64tow_s$MH,"_i64tow_s");
    }
    public static int _i64tow_s ( long _Value,  Addressable _Buffer,  long _BufferCount,  int _Radix) {
        var mh$ = _i64tow_s$MH();
        try {
            return (int)mh$.invokeExact(_Value, _Buffer, _BufferCount, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _i64tow$MH() {
        return RuntimeHelper.requireNonNull(constants$984._i64tow$MH,"_i64tow");
    }
    public static MemoryAddress _i64tow ( long _Value,  Addressable _Buffer,  int _Radix) {
        var mh$ = _i64tow$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Value, _Buffer, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _ui64tow_s$MH() {
        return RuntimeHelper.requireNonNull(constants$985._ui64tow_s$MH,"_ui64tow_s");
    }
    public static int _ui64tow_s ( long _Value,  Addressable _Buffer,  long _BufferCount,  int _Radix) {
        var mh$ = _ui64tow_s$MH();
        try {
            return (int)mh$.invokeExact(_Value, _Buffer, _BufferCount, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _ui64tow$MH() {
        return RuntimeHelper.requireNonNull(constants$985._ui64tow$MH,"_ui64tow");
    }
    public static MemoryAddress _ui64tow ( long _Value,  Addressable _Buffer,  int _Radix) {
        var mh$ = _ui64tow$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Value, _Buffer, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wtoi64$MH() {
        return RuntimeHelper.requireNonNull(constants$985._wtoi64$MH,"_wtoi64");
    }
    public static long _wtoi64 ( Addressable _String) {
        var mh$ = _wtoi64$MH();
        try {
            return (long)mh$.invokeExact(_String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wtoi64_l$MH() {
        return RuntimeHelper.requireNonNull(constants$985._wtoi64_l$MH,"_wtoi64_l");
    }
    public static long _wtoi64_l ( Addressable _String,  Addressable _Locale) {
        var mh$ = _wtoi64_l$MH();
        try {
            return (long)mh$.invokeExact(_String, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcstoi64$MH() {
        return RuntimeHelper.requireNonNull(constants$985._wcstoi64$MH,"_wcstoi64");
    }
    public static long _wcstoi64 ( Addressable _String,  Addressable _EndPtr,  int _Radix) {
        var mh$ = _wcstoi64$MH();
        try {
            return (long)mh$.invokeExact(_String, _EndPtr, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcstoi64_l$MH() {
        return RuntimeHelper.requireNonNull(constants$985._wcstoi64_l$MH,"_wcstoi64_l");
    }
    public static long _wcstoi64_l ( Addressable _String,  Addressable _EndPtr,  int _Radix,  Addressable _Locale) {
        var mh$ = _wcstoi64_l$MH();
        try {
            return (long)mh$.invokeExact(_String, _EndPtr, _Radix, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcstoui64$MH() {
        return RuntimeHelper.requireNonNull(constants$986._wcstoui64$MH,"_wcstoui64");
    }
    public static long _wcstoui64 ( Addressable _String,  Addressable _EndPtr,  int _Radix) {
        var mh$ = _wcstoui64$MH();
        try {
            return (long)mh$.invokeExact(_String, _EndPtr, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcstoui64_l$MH() {
        return RuntimeHelper.requireNonNull(constants$986._wcstoui64_l$MH,"_wcstoui64_l");
    }
    public static long _wcstoui64_l ( Addressable _String,  Addressable _EndPtr,  int _Radix,  Addressable _Locale) {
        var mh$ = _wcstoui64_l$MH();
        try {
            return (long)mh$.invokeExact(_String, _EndPtr, _Radix, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wfullpath$MH() {
        return RuntimeHelper.requireNonNull(constants$986._wfullpath$MH,"_wfullpath");
    }
    public static MemoryAddress _wfullpath ( Addressable _Buffer,  Addressable _Path,  long _BufferCount) {
        var mh$ = _wfullpath$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Buffer, _Path, _BufferCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wmakepath_s$MH() {
        return RuntimeHelper.requireNonNull(constants$986._wmakepath_s$MH,"_wmakepath_s");
    }
    public static int _wmakepath_s ( Addressable _Buffer,  long _BufferCount,  Addressable _Drive,  Addressable _Dir,  Addressable _Filename,  Addressable _Ext) {
        var mh$ = _wmakepath_s$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Drive, _Dir, _Filename, _Ext);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wmakepath$MH() {
        return RuntimeHelper.requireNonNull(constants$986._wmakepath$MH,"_wmakepath");
    }
    public static void _wmakepath ( Addressable _Buffer,  Addressable _Drive,  Addressable _Dir,  Addressable _Filename,  Addressable _Ext) {
        var mh$ = _wmakepath$MH();
        try {
            mh$.invokeExact(_Buffer, _Drive, _Dir, _Filename, _Ext);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wsplitpath$MH() {
        return RuntimeHelper.requireNonNull(constants$986._wsplitpath$MH,"_wsplitpath");
    }
    public static void _wsplitpath ( Addressable _FullPath,  Addressable _Drive,  Addressable _Dir,  Addressable _Filename,  Addressable _Ext) {
        var mh$ = _wsplitpath$MH();
        try {
            mh$.invokeExact(_FullPath, _Drive, _Dir, _Filename, _Ext);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wsplitpath_s$MH() {
        return RuntimeHelper.requireNonNull(constants$987._wsplitpath_s$MH,"_wsplitpath_s");
    }
    public static int _wsplitpath_s ( Addressable _FullPath,  Addressable _Drive,  long _DriveCount,  Addressable _Dir,  long _DirCount,  Addressable _Filename,  long _FilenameCount,  Addressable _Ext,  long _ExtCount) {
        var mh$ = _wsplitpath_s$MH();
        try {
            return (int)mh$.invokeExact(_FullPath, _Drive, _DriveCount, _Dir, _DirCount, _Filename, _FilenameCount, _Ext, _ExtCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wdupenv_s$MH() {
        return RuntimeHelper.requireNonNull(constants$987._wdupenv_s$MH,"_wdupenv_s");
    }
    public static int _wdupenv_s ( Addressable _Buffer,  Addressable _BufferCount,  Addressable _VarName) {
        var mh$ = _wdupenv_s$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _VarName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wgetenv$MH() {
        return RuntimeHelper.requireNonNull(constants$987._wgetenv$MH,"_wgetenv");
    }
    public static MemoryAddress _wgetenv ( Addressable _VarName) {
        var mh$ = _wgetenv$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_VarName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wgetenv_s$MH() {
        return RuntimeHelper.requireNonNull(constants$987._wgetenv_s$MH,"_wgetenv_s");
    }
    public static int _wgetenv_s ( Addressable _RequiredCount,  Addressable _Buffer,  long _BufferCount,  Addressable _VarName) {
        var mh$ = _wgetenv_s$MH();
        try {
            return (int)mh$.invokeExact(_RequiredCount, _Buffer, _BufferCount, _VarName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wputenv$MH() {
        return RuntimeHelper.requireNonNull(constants$987._wputenv$MH,"_wputenv");
    }
    public static int _wputenv ( Addressable _EnvString) {
        var mh$ = _wputenv$MH();
        try {
            return (int)mh$.invokeExact(_EnvString);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wputenv_s$MH() {
        return RuntimeHelper.requireNonNull(constants$987._wputenv_s$MH,"_wputenv_s");
    }
    public static int _wputenv_s ( Addressable _Name,  Addressable _Value) {
        var mh$ = _wputenv_s$MH();
        try {
            return (int)mh$.invokeExact(_Name, _Value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wsearchenv_s$MH() {
        return RuntimeHelper.requireNonNull(constants$988._wsearchenv_s$MH,"_wsearchenv_s");
    }
    public static int _wsearchenv_s ( Addressable _Filename,  Addressable _VarName,  Addressable _Buffer,  long _BufferCount) {
        var mh$ = _wsearchenv_s$MH();
        try {
            return (int)mh$.invokeExact(_Filename, _VarName, _Buffer, _BufferCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wsearchenv$MH() {
        return RuntimeHelper.requireNonNull(constants$988._wsearchenv$MH,"_wsearchenv");
    }
    public static void _wsearchenv ( Addressable _Filename,  Addressable _VarName,  Addressable _ResultPath) {
        var mh$ = _wsearchenv$MH();
        try {
            mh$.invokeExact(_Filename, _VarName, _ResultPath);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wsystem$MH() {
        return RuntimeHelper.requireNonNull(constants$988._wsystem$MH,"_wsystem");
    }
    public static int _wsystem ( Addressable _Command) {
        var mh$ = _wsystem$MH();
        try {
            return (int)mh$.invokeExact(_Command);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _swab$MH() {
        return RuntimeHelper.requireNonNull(constants$988._swab$MH,"_swab");
    }
    public static void _swab ( Addressable _Buf1,  Addressable _Buf2,  int _SizeInBytes) {
        var mh$ = _swab$MH();
        try {
            mh$.invokeExact(_Buf1, _Buf2, _SizeInBytes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle exit$MH() {
        return RuntimeHelper.requireNonNull(constants$988.exit$MH,"exit");
    }
    public static void exit ( int _Code) {
        var mh$ = exit$MH();
        try {
            mh$.invokeExact(_Code);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _exit$MH() {
        return RuntimeHelper.requireNonNull(constants$988._exit$MH,"_exit");
    }
    public static void _exit ( int _Code) {
        var mh$ = _exit$MH();
        try {
            mh$.invokeExact(_Code);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _Exit$MH() {
        return RuntimeHelper.requireNonNull(constants$989._Exit$MH,"_Exit");
    }
    public static void _Exit ( int _Code) {
        var mh$ = _Exit$MH();
        try {
            mh$.invokeExact(_Code);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle quick_exit$MH() {
        return RuntimeHelper.requireNonNull(constants$989.quick_exit$MH,"quick_exit");
    }
    public static void quick_exit ( int _Code) {
        var mh$ = quick_exit$MH();
        try {
            mh$.invokeExact(_Code);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle abort$MH() {
        return RuntimeHelper.requireNonNull(constants$989.abort$MH,"abort");
    }
    public static void abort () {
        var mh$ = abort$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _set_abort_behavior$MH() {
        return RuntimeHelper.requireNonNull(constants$989._set_abort_behavior$MH,"_set_abort_behavior");
    }
    public static int _set_abort_behavior ( int _Flags,  int _Mask) {
        var mh$ = _set_abort_behavior$MH();
        try {
            return (int)mh$.invokeExact(_Flags, _Mask);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atexit$MH() {
        return RuntimeHelper.requireNonNull(constants$990.atexit$MH,"atexit");
    }
    public static int atexit ( Addressable x0) {
        var mh$ = atexit$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _onexit$MH() {
        return RuntimeHelper.requireNonNull(constants$990._onexit$MH,"_onexit");
    }
    public static MemoryAddress _onexit ( Addressable _Func) {
        var mh$ = _onexit$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle at_quick_exit$MH() {
        return RuntimeHelper.requireNonNull(constants$991.at_quick_exit$MH,"at_quick_exit");
    }
    public static int at_quick_exit ( Addressable x0) {
        var mh$ = at_quick_exit$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _set_purecall_handler$MH() {
        return RuntimeHelper.requireNonNull(constants$991._set_purecall_handler$MH,"_set_purecall_handler");
    }
    public static MemoryAddress _set_purecall_handler ( Addressable _Handler) {
        var mh$ = _set_purecall_handler$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Handler);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _get_purecall_handler$MH() {
        return RuntimeHelper.requireNonNull(constants$992._get_purecall_handler$MH,"_get_purecall_handler");
    }
    public static MemoryAddress _get_purecall_handler () {
        var mh$ = _get_purecall_handler$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _set_invalid_parameter_handler$MH() {
        return RuntimeHelper.requireNonNull(constants$992._set_invalid_parameter_handler$MH,"_set_invalid_parameter_handler");
    }
    public static MemoryAddress _set_invalid_parameter_handler ( Addressable _Handler) {
        var mh$ = _set_invalid_parameter_handler$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Handler);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _get_invalid_parameter_handler$MH() {
        return RuntimeHelper.requireNonNull(constants$992._get_invalid_parameter_handler$MH,"_get_invalid_parameter_handler");
    }
    public static MemoryAddress _get_invalid_parameter_handler () {
        var mh$ = _get_invalid_parameter_handler$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _set_thread_local_invalid_parameter_handler$MH() {
        return RuntimeHelper.requireNonNull(constants$992._set_thread_local_invalid_parameter_handler$MH,"_set_thread_local_invalid_parameter_handler");
    }
    public static MemoryAddress _set_thread_local_invalid_parameter_handler ( Addressable _Handler) {
        var mh$ = _set_thread_local_invalid_parameter_handler$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Handler);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _get_thread_local_invalid_parameter_handler$MH() {
        return RuntimeHelper.requireNonNull(constants$992._get_thread_local_invalid_parameter_handler$MH,"_get_thread_local_invalid_parameter_handler");
    }
    public static MemoryAddress _get_thread_local_invalid_parameter_handler () {
        var mh$ = _get_thread_local_invalid_parameter_handler$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _set_error_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$992._set_error_mode$MH,"_set_error_mode");
    }
    public static int _set_error_mode ( int _Mode) {
        var mh$ = _set_error_mode$MH();
        try {
            return (int)mh$.invokeExact(_Mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __sys_errlist$MH() {
        return RuntimeHelper.requireNonNull(constants$993.__sys_errlist$MH,"__sys_errlist");
    }
    public static MemoryAddress __sys_errlist () {
        var mh$ = __sys_errlist$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __sys_nerr$MH() {
        return RuntimeHelper.requireNonNull(constants$993.__sys_nerr$MH,"__sys_nerr");
    }
    public static MemoryAddress __sys_nerr () {
        var mh$ = __sys_nerr$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __p__pgmptr$MH() {
        return RuntimeHelper.requireNonNull(constants$993.__p__pgmptr$MH,"__p__pgmptr");
    }
    public static MemoryAddress __p__pgmptr () {
        var mh$ = __p__pgmptr$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __p__wpgmptr$MH() {
        return RuntimeHelper.requireNonNull(constants$993.__p__wpgmptr$MH,"__p__wpgmptr");
    }
    public static MemoryAddress __p__wpgmptr () {
        var mh$ = __p__wpgmptr$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __p__fmode$MH() {
        return RuntimeHelper.requireNonNull(constants$993.__p__fmode$MH,"__p__fmode");
    }
    public static MemoryAddress __p__fmode () {
        var mh$ = __p__fmode$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _get_pgmptr$MH() {
        return RuntimeHelper.requireNonNull(constants$993._get_pgmptr$MH,"_get_pgmptr");
    }
    public static int _get_pgmptr ( Addressable _Value) {
        var mh$ = _get_pgmptr$MH();
        try {
            return (int)mh$.invokeExact(_Value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _get_wpgmptr$MH() {
        return RuntimeHelper.requireNonNull(constants$994._get_wpgmptr$MH,"_get_wpgmptr");
    }
    public static int _get_wpgmptr ( Addressable _Value) {
        var mh$ = _get_wpgmptr$MH();
        try {
            return (int)mh$.invokeExact(_Value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _set_fmode$MH() {
        return RuntimeHelper.requireNonNull(constants$994._set_fmode$MH,"_set_fmode");
    }
    public static int _set_fmode ( int _Mode) {
        var mh$ = _set_fmode$MH();
        try {
            return (int)mh$.invokeExact(_Mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _get_fmode$MH() {
        return RuntimeHelper.requireNonNull(constants$994._get_fmode$MH,"_get_fmode");
    }
    public static int _get_fmode ( Addressable _PMode) {
        var mh$ = _get_fmode$MH();
        try {
            return (int)mh$.invokeExact(_PMode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle abs$MH() {
        return RuntimeHelper.requireNonNull(constants$994.abs$MH,"abs");
    }
    public static int abs ( int _Number) {
        var mh$ = abs$MH();
        try {
            return (int)mh$.invokeExact(_Number);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle labs$MH() {
        return RuntimeHelper.requireNonNull(constants$994.labs$MH,"labs");
    }
    public static int labs ( int _Number) {
        var mh$ = labs$MH();
        try {
            return (int)mh$.invokeExact(_Number);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle llabs$MH() {
        return RuntimeHelper.requireNonNull(constants$994.llabs$MH,"llabs");
    }
    public static long llabs ( long _Number) {
        var mh$ = llabs$MH();
        try {
            return (long)mh$.invokeExact(_Number);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _abs64$MH() {
        return RuntimeHelper.requireNonNull(constants$995._abs64$MH,"_abs64");
    }
    public static long _abs64 ( long _Number) {
        var mh$ = _abs64$MH();
        try {
            return (long)mh$.invokeExact(_Number);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _byteswap_ushort$MH() {
        return RuntimeHelper.requireNonNull(constants$995._byteswap_ushort$MH,"_byteswap_ushort");
    }
    public static short _byteswap_ushort ( short _Number) {
        var mh$ = _byteswap_ushort$MH();
        try {
            return (short)mh$.invokeExact(_Number);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _byteswap_ulong$MH() {
        return RuntimeHelper.requireNonNull(constants$995._byteswap_ulong$MH,"_byteswap_ulong");
    }
    public static int _byteswap_ulong ( int _Number) {
        var mh$ = _byteswap_ulong$MH();
        try {
            return (int)mh$.invokeExact(_Number);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _byteswap_uint64$MH() {
        return RuntimeHelper.requireNonNull(constants$995._byteswap_uint64$MH,"_byteswap_uint64");
    }
    public static long _byteswap_uint64 ( long _Number) {
        var mh$ = _byteswap_uint64$MH();
        try {
            return (long)mh$.invokeExact(_Number);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle div$MH() {
        return RuntimeHelper.requireNonNull(constants$995.div$MH,"div");
    }
    public static MemorySegment div ( SegmentAllocator allocator,  int _Numerator,  int _Denominator) {
        var mh$ = div$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(allocator, _Numerator, _Denominator);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ldiv$MH() {
        return RuntimeHelper.requireNonNull(constants$995.ldiv$MH,"ldiv");
    }
    public static MemorySegment ldiv ( SegmentAllocator allocator,  int _Numerator,  int _Denominator) {
        var mh$ = ldiv$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(allocator, _Numerator, _Denominator);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle lldiv$MH() {
        return RuntimeHelper.requireNonNull(constants$996.lldiv$MH,"lldiv");
    }
    public static MemorySegment lldiv ( SegmentAllocator allocator,  long _Numerator,  long _Denominator) {
        var mh$ = lldiv$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(allocator, _Numerator, _Denominator);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _lrotl$MH() {
        return RuntimeHelper.requireNonNull(constants$996._lrotl$MH,"_lrotl");
    }
    public static int _lrotl ( int _Value,  int _Shift) {
        var mh$ = _lrotl$MH();
        try {
            return (int)mh$.invokeExact(_Value, _Shift);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _lrotr$MH() {
        return RuntimeHelper.requireNonNull(constants$996._lrotr$MH,"_lrotr");
    }
    public static int _lrotr ( int _Value,  int _Shift) {
        var mh$ = _lrotr$MH();
        try {
            return (int)mh$.invokeExact(_Value, _Shift);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle srand$MH() {
        return RuntimeHelper.requireNonNull(constants$996.srand$MH,"srand");
    }
    public static void srand ( int _Seed) {
        var mh$ = srand$MH();
        try {
            mh$.invokeExact(_Seed);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rand$MH() {
        return RuntimeHelper.requireNonNull(constants$996.rand$MH,"rand");
    }
    public static int rand () {
        var mh$ = rand$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atof$MH() {
        return RuntimeHelper.requireNonNull(constants$996.atof$MH,"atof");
    }
    public static double atof ( Addressable _String) {
        var mh$ = atof$MH();
        try {
            return (double)mh$.invokeExact(_String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atoi$MH() {
        return RuntimeHelper.requireNonNull(constants$997.atoi$MH,"atoi");
    }
    public static int atoi ( Addressable _String) {
        var mh$ = atoi$MH();
        try {
            return (int)mh$.invokeExact(_String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atol$MH() {
        return RuntimeHelper.requireNonNull(constants$997.atol$MH,"atol");
    }
    public static int atol ( Addressable _String) {
        var mh$ = atol$MH();
        try {
            return (int)mh$.invokeExact(_String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atoll$MH() {
        return RuntimeHelper.requireNonNull(constants$997.atoll$MH,"atoll");
    }
    public static long atoll ( Addressable _String) {
        var mh$ = atoll$MH();
        try {
            return (long)mh$.invokeExact(_String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _atoi64$MH() {
        return RuntimeHelper.requireNonNull(constants$997._atoi64$MH,"_atoi64");
    }
    public static long _atoi64 ( Addressable _String) {
        var mh$ = _atoi64$MH();
        try {
            return (long)mh$.invokeExact(_String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _atof_l$MH() {
        return RuntimeHelper.requireNonNull(constants$997._atof_l$MH,"_atof_l");
    }
    public static double _atof_l ( Addressable _String,  Addressable _Locale) {
        var mh$ = _atof_l$MH();
        try {
            return (double)mh$.invokeExact(_String, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _atoi_l$MH() {
        return RuntimeHelper.requireNonNull(constants$997._atoi_l$MH,"_atoi_l");
    }
    public static int _atoi_l ( Addressable _String,  Addressable _Locale) {
        var mh$ = _atoi_l$MH();
        try {
            return (int)mh$.invokeExact(_String, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _atol_l$MH() {
        return RuntimeHelper.requireNonNull(constants$998._atol_l$MH,"_atol_l");
    }
    public static int _atol_l ( Addressable _String,  Addressable _Locale) {
        var mh$ = _atol_l$MH();
        try {
            return (int)mh$.invokeExact(_String, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _atoll_l$MH() {
        return RuntimeHelper.requireNonNull(constants$998._atoll_l$MH,"_atoll_l");
    }
    public static long _atoll_l ( Addressable _String,  Addressable _Locale) {
        var mh$ = _atoll_l$MH();
        try {
            return (long)mh$.invokeExact(_String, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _atoi64_l$MH() {
        return RuntimeHelper.requireNonNull(constants$998._atoi64_l$MH,"_atoi64_l");
    }
    public static long _atoi64_l ( Addressable _String,  Addressable _Locale) {
        var mh$ = _atoi64_l$MH();
        try {
            return (long)mh$.invokeExact(_String, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _atoflt$MH() {
        return RuntimeHelper.requireNonNull(constants$998._atoflt$MH,"_atoflt");
    }
    public static int _atoflt ( Addressable _Result,  Addressable _String) {
        var mh$ = _atoflt$MH();
        try {
            return (int)mh$.invokeExact(_Result, _String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _atodbl$MH() {
        return RuntimeHelper.requireNonNull(constants$998._atodbl$MH,"_atodbl");
    }
    public static int _atodbl ( Addressable _Result,  Addressable _String) {
        var mh$ = _atodbl$MH();
        try {
            return (int)mh$.invokeExact(_Result, _String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _atoldbl$MH() {
        return RuntimeHelper.requireNonNull(constants$998._atoldbl$MH,"_atoldbl");
    }
    public static int _atoldbl ( Addressable _Result,  Addressable _String) {
        var mh$ = _atoldbl$MH();
        try {
            return (int)mh$.invokeExact(_Result, _String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _atoflt_l$MH() {
        return RuntimeHelper.requireNonNull(constants$999._atoflt_l$MH,"_atoflt_l");
    }
    public static int _atoflt_l ( Addressable _Result,  Addressable _String,  Addressable _Locale) {
        var mh$ = _atoflt_l$MH();
        try {
            return (int)mh$.invokeExact(_Result, _String, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _atodbl_l$MH() {
        return RuntimeHelper.requireNonNull(constants$999._atodbl_l$MH,"_atodbl_l");
    }
    public static int _atodbl_l ( Addressable _Result,  Addressable _String,  Addressable _Locale) {
        var mh$ = _atodbl_l$MH();
        try {
            return (int)mh$.invokeExact(_Result, _String, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _atoldbl_l$MH() {
        return RuntimeHelper.requireNonNull(constants$999._atoldbl_l$MH,"_atoldbl_l");
    }
    public static int _atoldbl_l ( Addressable _Result,  Addressable _String,  Addressable _Locale) {
        var mh$ = _atoldbl_l$MH();
        try {
            return (int)mh$.invokeExact(_Result, _String, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strtof$MH() {
        return RuntimeHelper.requireNonNull(constants$999.strtof$MH,"strtof");
    }
    public static float strtof ( Addressable _String,  Addressable _EndPtr) {
        var mh$ = strtof$MH();
        try {
            return (float)mh$.invokeExact(_String, _EndPtr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strtof_l$MH() {
        return RuntimeHelper.requireNonNull(constants$999._strtof_l$MH,"_strtof_l");
    }
    public static float _strtof_l ( Addressable _String,  Addressable _EndPtr,  Addressable _Locale) {
        var mh$ = _strtof_l$MH();
        try {
            return (float)mh$.invokeExact(_String, _EndPtr, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strtod$MH() {
        return RuntimeHelper.requireNonNull(constants$999.strtod$MH,"strtod");
    }
    public static double strtod ( Addressable _String,  Addressable _EndPtr) {
        var mh$ = strtod$MH();
        try {
            return (double)mh$.invokeExact(_String, _EndPtr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strtod_l$MH() {
        return RuntimeHelper.requireNonNull(constants$1000._strtod_l$MH,"_strtod_l");
    }
    public static double _strtod_l ( Addressable _String,  Addressable _EndPtr,  Addressable _Locale) {
        var mh$ = _strtod_l$MH();
        try {
            return (double)mh$.invokeExact(_String, _EndPtr, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strtol$MH() {
        return RuntimeHelper.requireNonNull(constants$1000.strtol$MH,"strtol");
    }
    public static int strtol ( Addressable _String,  Addressable _EndPtr,  int _Radix) {
        var mh$ = strtol$MH();
        try {
            return (int)mh$.invokeExact(_String, _EndPtr, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strtol_l$MH() {
        return RuntimeHelper.requireNonNull(constants$1000._strtol_l$MH,"_strtol_l");
    }
    public static int _strtol_l ( Addressable _String,  Addressable _EndPtr,  int _Radix,  Addressable _Locale) {
        var mh$ = _strtol_l$MH();
        try {
            return (int)mh$.invokeExact(_String, _EndPtr, _Radix, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strtoll$MH() {
        return RuntimeHelper.requireNonNull(constants$1000.strtoll$MH,"strtoll");
    }
    public static long strtoll ( Addressable _String,  Addressable _EndPtr,  int _Radix) {
        var mh$ = strtoll$MH();
        try {
            return (long)mh$.invokeExact(_String, _EndPtr, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strtoll_l$MH() {
        return RuntimeHelper.requireNonNull(constants$1000._strtoll_l$MH,"_strtoll_l");
    }
    public static long _strtoll_l ( Addressable _String,  Addressable _EndPtr,  int _Radix,  Addressable _Locale) {
        var mh$ = _strtoll_l$MH();
        try {
            return (long)mh$.invokeExact(_String, _EndPtr, _Radix, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strtoul$MH() {
        return RuntimeHelper.requireNonNull(constants$1000.strtoul$MH,"strtoul");
    }
    public static int strtoul ( Addressable _String,  Addressable _EndPtr,  int _Radix) {
        var mh$ = strtoul$MH();
        try {
            return (int)mh$.invokeExact(_String, _EndPtr, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strtoul_l$MH() {
        return RuntimeHelper.requireNonNull(constants$1001._strtoul_l$MH,"_strtoul_l");
    }
    public static int _strtoul_l ( Addressable _String,  Addressable _EndPtr,  int _Radix,  Addressable _Locale) {
        var mh$ = _strtoul_l$MH();
        try {
            return (int)mh$.invokeExact(_String, _EndPtr, _Radix, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strtoull$MH() {
        return RuntimeHelper.requireNonNull(constants$1001.strtoull$MH,"strtoull");
    }
    public static long strtoull ( Addressable _String,  Addressable _EndPtr,  int _Radix) {
        var mh$ = strtoull$MH();
        try {
            return (long)mh$.invokeExact(_String, _EndPtr, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strtoull_l$MH() {
        return RuntimeHelper.requireNonNull(constants$1001._strtoull_l$MH,"_strtoull_l");
    }
    public static long _strtoull_l ( Addressable _String,  Addressable _EndPtr,  int _Radix,  Addressable _Locale) {
        var mh$ = _strtoull_l$MH();
        try {
            return (long)mh$.invokeExact(_String, _EndPtr, _Radix, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strtoi64$MH() {
        return RuntimeHelper.requireNonNull(constants$1001._strtoi64$MH,"_strtoi64");
    }
    public static long _strtoi64 ( Addressable _String,  Addressable _EndPtr,  int _Radix) {
        var mh$ = _strtoi64$MH();
        try {
            return (long)mh$.invokeExact(_String, _EndPtr, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strtoi64_l$MH() {
        return RuntimeHelper.requireNonNull(constants$1001._strtoi64_l$MH,"_strtoi64_l");
    }
    public static long _strtoi64_l ( Addressable _String,  Addressable _EndPtr,  int _Radix,  Addressable _Locale) {
        var mh$ = _strtoi64_l$MH();
        try {
            return (long)mh$.invokeExact(_String, _EndPtr, _Radix, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strtoui64$MH() {
        return RuntimeHelper.requireNonNull(constants$1001._strtoui64$MH,"_strtoui64");
    }
    public static long _strtoui64 ( Addressable _String,  Addressable _EndPtr,  int _Radix) {
        var mh$ = _strtoui64$MH();
        try {
            return (long)mh$.invokeExact(_String, _EndPtr, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strtoui64_l$MH() {
        return RuntimeHelper.requireNonNull(constants$1002._strtoui64_l$MH,"_strtoui64_l");
    }
    public static long _strtoui64_l ( Addressable _String,  Addressable _EndPtr,  int _Radix,  Addressable _Locale) {
        var mh$ = _strtoui64_l$MH();
        try {
            return (long)mh$.invokeExact(_String, _EndPtr, _Radix, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _itoa_s$MH() {
        return RuntimeHelper.requireNonNull(constants$1002._itoa_s$MH,"_itoa_s");
    }
    public static int _itoa_s ( int _Value,  Addressable _Buffer,  long _BufferCount,  int _Radix) {
        var mh$ = _itoa_s$MH();
        try {
            return (int)mh$.invokeExact(_Value, _Buffer, _BufferCount, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _itoa$MH() {
        return RuntimeHelper.requireNonNull(constants$1002._itoa$MH,"_itoa");
    }
    public static MemoryAddress _itoa ( int _Value,  Addressable _Buffer,  int _Radix) {
        var mh$ = _itoa$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Value, _Buffer, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _ltoa_s$MH() {
        return RuntimeHelper.requireNonNull(constants$1002._ltoa_s$MH,"_ltoa_s");
    }
    public static int _ltoa_s ( int _Value,  Addressable _Buffer,  long _BufferCount,  int _Radix) {
        var mh$ = _ltoa_s$MH();
        try {
            return (int)mh$.invokeExact(_Value, _Buffer, _BufferCount, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _ltoa$MH() {
        return RuntimeHelper.requireNonNull(constants$1002._ltoa$MH,"_ltoa");
    }
    public static MemoryAddress _ltoa ( int _Value,  Addressable _Buffer,  int _Radix) {
        var mh$ = _ltoa$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Value, _Buffer, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _ultoa_s$MH() {
        return RuntimeHelper.requireNonNull(constants$1002._ultoa_s$MH,"_ultoa_s");
    }
    public static int _ultoa_s ( int _Value,  Addressable _Buffer,  long _BufferCount,  int _Radix) {
        var mh$ = _ultoa_s$MH();
        try {
            return (int)mh$.invokeExact(_Value, _Buffer, _BufferCount, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _ultoa$MH() {
        return RuntimeHelper.requireNonNull(constants$1003._ultoa$MH,"_ultoa");
    }
    public static MemoryAddress _ultoa ( int _Value,  Addressable _Buffer,  int _Radix) {
        var mh$ = _ultoa$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Value, _Buffer, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _i64toa_s$MH() {
        return RuntimeHelper.requireNonNull(constants$1003._i64toa_s$MH,"_i64toa_s");
    }
    public static int _i64toa_s ( long _Value,  Addressable _Buffer,  long _BufferCount,  int _Radix) {
        var mh$ = _i64toa_s$MH();
        try {
            return (int)mh$.invokeExact(_Value, _Buffer, _BufferCount, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _i64toa$MH() {
        return RuntimeHelper.requireNonNull(constants$1003._i64toa$MH,"_i64toa");
    }
    public static MemoryAddress _i64toa ( long _Value,  Addressable _Buffer,  int _Radix) {
        var mh$ = _i64toa$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Value, _Buffer, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _ui64toa_s$MH() {
        return RuntimeHelper.requireNonNull(constants$1003._ui64toa_s$MH,"_ui64toa_s");
    }
    public static int _ui64toa_s ( long _Value,  Addressable _Buffer,  long _BufferCount,  int _Radix) {
        var mh$ = _ui64toa_s$MH();
        try {
            return (int)mh$.invokeExact(_Value, _Buffer, _BufferCount, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _ui64toa$MH() {
        return RuntimeHelper.requireNonNull(constants$1003._ui64toa$MH,"_ui64toa");
    }
    public static MemoryAddress _ui64toa ( long _Value,  Addressable _Buffer,  int _Radix) {
        var mh$ = _ui64toa$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Value, _Buffer, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _ecvt_s$MH() {
        return RuntimeHelper.requireNonNull(constants$1003._ecvt_s$MH,"_ecvt_s");
    }
    public static int _ecvt_s ( Addressable _Buffer,  long _BufferCount,  double _Value,  int _DigitCount,  Addressable _PtDec,  Addressable _PtSign) {
        var mh$ = _ecvt_s$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Value, _DigitCount, _PtDec, _PtSign);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _ecvt$MH() {
        return RuntimeHelper.requireNonNull(constants$1004._ecvt$MH,"_ecvt");
    }
    public static MemoryAddress _ecvt ( double _Value,  int _DigitCount,  Addressable _PtDec,  Addressable _PtSign) {
        var mh$ = _ecvt$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Value, _DigitCount, _PtDec, _PtSign);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fcvt_s$MH() {
        return RuntimeHelper.requireNonNull(constants$1004._fcvt_s$MH,"_fcvt_s");
    }
    public static int _fcvt_s ( Addressable _Buffer,  long _BufferCount,  double _Value,  int _FractionalDigitCount,  Addressable _PtDec,  Addressable _PtSign) {
        var mh$ = _fcvt_s$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Value, _FractionalDigitCount, _PtDec, _PtSign);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fcvt$MH() {
        return RuntimeHelper.requireNonNull(constants$1004._fcvt$MH,"_fcvt");
    }
    public static MemoryAddress _fcvt ( double _Value,  int _FractionalDigitCount,  Addressable _PtDec,  Addressable _PtSign) {
        var mh$ = _fcvt$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Value, _FractionalDigitCount, _PtDec, _PtSign);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _gcvt_s$MH() {
        return RuntimeHelper.requireNonNull(constants$1004._gcvt_s$MH,"_gcvt_s");
    }
    public static int _gcvt_s ( Addressable _Buffer,  long _BufferCount,  double _Value,  int _DigitCount) {
        var mh$ = _gcvt_s$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Value, _DigitCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _gcvt$MH() {
        return RuntimeHelper.requireNonNull(constants$1004._gcvt$MH,"_gcvt");
    }
    public static MemoryAddress _gcvt ( double _Value,  int _DigitCount,  Addressable _Buffer) {
        var mh$ = _gcvt$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Value, _DigitCount, _Buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mblen$MH() {
        return RuntimeHelper.requireNonNull(constants$1004.mblen$MH,"mblen");
    }
    public static int mblen ( Addressable _Ch,  long _MaxCount) {
        var mh$ = mblen$MH();
        try {
            return (int)mh$.invokeExact(_Ch, _MaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mblen_l$MH() {
        return RuntimeHelper.requireNonNull(constants$1005._mblen_l$MH,"_mblen_l");
    }
    public static int _mblen_l ( Addressable _Ch,  long _MaxCount,  Addressable _Locale) {
        var mh$ = _mblen_l$MH();
        try {
            return (int)mh$.invokeExact(_Ch, _MaxCount, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mbstrlen$MH() {
        return RuntimeHelper.requireNonNull(constants$1005._mbstrlen$MH,"_mbstrlen");
    }
    public static long _mbstrlen ( Addressable _String) {
        var mh$ = _mbstrlen$MH();
        try {
            return (long)mh$.invokeExact(_String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mbstrlen_l$MH() {
        return RuntimeHelper.requireNonNull(constants$1005._mbstrlen_l$MH,"_mbstrlen_l");
    }
    public static long _mbstrlen_l ( Addressable _String,  Addressable _Locale) {
        var mh$ = _mbstrlen_l$MH();
        try {
            return (long)mh$.invokeExact(_String, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mbstrnlen$MH() {
        return RuntimeHelper.requireNonNull(constants$1005._mbstrnlen$MH,"_mbstrnlen");
    }
    public static long _mbstrnlen ( Addressable _String,  long _MaxCount) {
        var mh$ = _mbstrnlen$MH();
        try {
            return (long)mh$.invokeExact(_String, _MaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mbstrnlen_l$MH() {
        return RuntimeHelper.requireNonNull(constants$1005._mbstrnlen_l$MH,"_mbstrnlen_l");
    }
    public static long _mbstrnlen_l ( Addressable _String,  long _MaxCount,  Addressable _Locale) {
        var mh$ = _mbstrnlen_l$MH();
        try {
            return (long)mh$.invokeExact(_String, _MaxCount, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mbtowc$MH() {
        return RuntimeHelper.requireNonNull(constants$1005.mbtowc$MH,"mbtowc");
    }
    public static int mbtowc ( Addressable _DstCh,  Addressable _SrcCh,  long _SrcSizeInBytes) {
        var mh$ = mbtowc$MH();
        try {
            return (int)mh$.invokeExact(_DstCh, _SrcCh, _SrcSizeInBytes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mbtowc_l$MH() {
        return RuntimeHelper.requireNonNull(constants$1006._mbtowc_l$MH,"_mbtowc_l");
    }
    public static int _mbtowc_l ( Addressable _DstCh,  Addressable _SrcCh,  long _SrcSizeInBytes,  Addressable _Locale) {
        var mh$ = _mbtowc_l$MH();
        try {
            return (int)mh$.invokeExact(_DstCh, _SrcCh, _SrcSizeInBytes, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mbstowcs_s$MH() {
        return RuntimeHelper.requireNonNull(constants$1006.mbstowcs_s$MH,"mbstowcs_s");
    }
    public static int mbstowcs_s ( Addressable _PtNumOfCharConverted,  Addressable _DstBuf,  long _SizeInWords,  Addressable _SrcBuf,  long _MaxCount) {
        var mh$ = mbstowcs_s$MH();
        try {
            return (int)mh$.invokeExact(_PtNumOfCharConverted, _DstBuf, _SizeInWords, _SrcBuf, _MaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mbstowcs$MH() {
        return RuntimeHelper.requireNonNull(constants$1006.mbstowcs$MH,"mbstowcs");
    }
    public static long mbstowcs ( Addressable _Dest,  Addressable _Source,  long _MaxCount) {
        var mh$ = mbstowcs$MH();
        try {
            return (long)mh$.invokeExact(_Dest, _Source, _MaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mbstowcs_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$1006._mbstowcs_s_l$MH,"_mbstowcs_s_l");
    }
    public static int _mbstowcs_s_l ( Addressable _PtNumOfCharConverted,  Addressable _DstBuf,  long _SizeInWords,  Addressable _SrcBuf,  long _MaxCount,  Addressable _Locale) {
        var mh$ = _mbstowcs_s_l$MH();
        try {
            return (int)mh$.invokeExact(_PtNumOfCharConverted, _DstBuf, _SizeInWords, _SrcBuf, _MaxCount, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mbstowcs_l$MH() {
        return RuntimeHelper.requireNonNull(constants$1006._mbstowcs_l$MH,"_mbstowcs_l");
    }
    public static long _mbstowcs_l ( Addressable _Dest,  Addressable _Source,  long _MaxCount,  Addressable _Locale) {
        var mh$ = _mbstowcs_l$MH();
        try {
            return (long)mh$.invokeExact(_Dest, _Source, _MaxCount, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wctomb$MH() {
        return RuntimeHelper.requireNonNull(constants$1006.wctomb$MH,"wctomb");
    }
    public static int wctomb ( Addressable _MbCh,  short _WCh) {
        var mh$ = wctomb$MH();
        try {
            return (int)mh$.invokeExact(_MbCh, _WCh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wctomb_l$MH() {
        return RuntimeHelper.requireNonNull(constants$1007._wctomb_l$MH,"_wctomb_l");
    }
    public static int _wctomb_l ( Addressable _MbCh,  short _WCh,  Addressable _Locale) {
        var mh$ = _wctomb_l$MH();
        try {
            return (int)mh$.invokeExact(_MbCh, _WCh, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wctomb_s$MH() {
        return RuntimeHelper.requireNonNull(constants$1007.wctomb_s$MH,"wctomb_s");
    }
    public static int wctomb_s ( Addressable _SizeConverted,  Addressable _MbCh,  long _SizeInBytes,  short _WCh) {
        var mh$ = wctomb_s$MH();
        try {
            return (int)mh$.invokeExact(_SizeConverted, _MbCh, _SizeInBytes, _WCh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wctomb_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$1007._wctomb_s_l$MH,"_wctomb_s_l");
    }
    public static int _wctomb_s_l ( Addressable _SizeConverted,  Addressable _MbCh,  long _SizeInBytes,  short _WCh,  Addressable _Locale) {
        var mh$ = _wctomb_s_l$MH();
        try {
            return (int)mh$.invokeExact(_SizeConverted, _MbCh, _SizeInBytes, _WCh, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcstombs_s$MH() {
        return RuntimeHelper.requireNonNull(constants$1007.wcstombs_s$MH,"wcstombs_s");
    }
    public static int wcstombs_s ( Addressable _PtNumOfCharConverted,  Addressable _Dst,  long _DstSizeInBytes,  Addressable _Src,  long _MaxCountInBytes) {
        var mh$ = wcstombs_s$MH();
        try {
            return (int)mh$.invokeExact(_PtNumOfCharConverted, _Dst, _DstSizeInBytes, _Src, _MaxCountInBytes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcstombs$MH() {
        return RuntimeHelper.requireNonNull(constants$1007.wcstombs$MH,"wcstombs");
    }
    public static long wcstombs ( Addressable _Dest,  Addressable _Source,  long _MaxCount) {
        var mh$ = wcstombs$MH();
        try {
            return (long)mh$.invokeExact(_Dest, _Source, _MaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcstombs_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$1007._wcstombs_s_l$MH,"_wcstombs_s_l");
    }
    public static int _wcstombs_s_l ( Addressable _PtNumOfCharConverted,  Addressable _Dst,  long _DstSizeInBytes,  Addressable _Src,  long _MaxCountInBytes,  Addressable _Locale) {
        var mh$ = _wcstombs_s_l$MH();
        try {
            return (int)mh$.invokeExact(_PtNumOfCharConverted, _Dst, _DstSizeInBytes, _Src, _MaxCountInBytes, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcstombs_l$MH() {
        return RuntimeHelper.requireNonNull(constants$1008._wcstombs_l$MH,"_wcstombs_l");
    }
    public static long _wcstombs_l ( Addressable _Dest,  Addressable _Source,  long _MaxCount,  Addressable _Locale) {
        var mh$ = _wcstombs_l$MH();
        try {
            return (long)mh$.invokeExact(_Dest, _Source, _MaxCount, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fullpath$MH() {
        return RuntimeHelper.requireNonNull(constants$1008._fullpath$MH,"_fullpath");
    }
    public static MemoryAddress _fullpath ( Addressable _Buffer,  Addressable _Path,  long _BufferCount) {
        var mh$ = _fullpath$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Buffer, _Path, _BufferCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _makepath_s$MH() {
        return RuntimeHelper.requireNonNull(constants$1008._makepath_s$MH,"_makepath_s");
    }
    public static int _makepath_s ( Addressable _Buffer,  long _BufferCount,  Addressable _Drive,  Addressable _Dir,  Addressable _Filename,  Addressable _Ext) {
        var mh$ = _makepath_s$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Drive, _Dir, _Filename, _Ext);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _makepath$MH() {
        return RuntimeHelper.requireNonNull(constants$1008._makepath$MH,"_makepath");
    }
    public static void _makepath ( Addressable _Buffer,  Addressable _Drive,  Addressable _Dir,  Addressable _Filename,  Addressable _Ext) {
        var mh$ = _makepath$MH();
        try {
            mh$.invokeExact(_Buffer, _Drive, _Dir, _Filename, _Ext);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _splitpath$MH() {
        return RuntimeHelper.requireNonNull(constants$1008._splitpath$MH,"_splitpath");
    }
    public static void _splitpath ( Addressable _FullPath,  Addressable _Drive,  Addressable _Dir,  Addressable _Filename,  Addressable _Ext) {
        var mh$ = _splitpath$MH();
        try {
            mh$.invokeExact(_FullPath, _Drive, _Dir, _Filename, _Ext);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _splitpath_s$MH() {
        return RuntimeHelper.requireNonNull(constants$1008._splitpath_s$MH,"_splitpath_s");
    }
    public static int _splitpath_s ( Addressable _FullPath,  Addressable _Drive,  long _DriveCount,  Addressable _Dir,  long _DirCount,  Addressable _Filename,  long _FilenameCount,  Addressable _Ext,  long _ExtCount) {
        var mh$ = _splitpath_s$MH();
        try {
            return (int)mh$.invokeExact(_FullPath, _Drive, _DriveCount, _Dir, _DirCount, _Filename, _FilenameCount, _Ext, _ExtCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getenv_s$MH() {
        return RuntimeHelper.requireNonNull(constants$1009.getenv_s$MH,"getenv_s");
    }
    public static int getenv_s ( Addressable _RequiredCount,  Addressable _Buffer,  long _BufferCount,  Addressable _VarName) {
        var mh$ = getenv_s$MH();
        try {
            return (int)mh$.invokeExact(_RequiredCount, _Buffer, _BufferCount, _VarName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __p___argc$MH() {
        return RuntimeHelper.requireNonNull(constants$1009.__p___argc$MH,"__p___argc");
    }
    public static MemoryAddress __p___argc () {
        var mh$ = __p___argc$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __p___argv$MH() {
        return RuntimeHelper.requireNonNull(constants$1009.__p___argv$MH,"__p___argv");
    }
    public static MemoryAddress __p___argv () {
        var mh$ = __p___argv$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __p___wargv$MH() {
        return RuntimeHelper.requireNonNull(constants$1009.__p___wargv$MH,"__p___wargv");
    }
    public static MemoryAddress __p___wargv () {
        var mh$ = __p___wargv$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __p__environ$MH() {
        return RuntimeHelper.requireNonNull(constants$1009.__p__environ$MH,"__p__environ");
    }
    public static MemoryAddress __p__environ () {
        var mh$ = __p__environ$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __p__wenviron$MH() {
        return RuntimeHelper.requireNonNull(constants$1009.__p__wenviron$MH,"__p__wenviron");
    }
    public static MemoryAddress __p__wenviron () {
        var mh$ = __p__wenviron$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getenv$MH() {
        return RuntimeHelper.requireNonNull(constants$1010.getenv$MH,"getenv");
    }
    public static MemoryAddress getenv ( Addressable _VarName) {
        var mh$ = getenv$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_VarName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _dupenv_s$MH() {
        return RuntimeHelper.requireNonNull(constants$1010._dupenv_s$MH,"_dupenv_s");
    }
    public static int _dupenv_s ( Addressable _Buffer,  Addressable _BufferCount,  Addressable _VarName) {
        var mh$ = _dupenv_s$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _VarName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle system$MH() {
        return RuntimeHelper.requireNonNull(constants$1010.system$MH,"system");
    }
    public static int system ( Addressable _Command) {
        var mh$ = system$MH();
        try {
            return (int)mh$.invokeExact(_Command);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _putenv$MH() {
        return RuntimeHelper.requireNonNull(constants$1010._putenv$MH,"_putenv");
    }
    public static int _putenv ( Addressable _EnvString) {
        var mh$ = _putenv$MH();
        try {
            return (int)mh$.invokeExact(_EnvString);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _putenv_s$MH() {
        return RuntimeHelper.requireNonNull(constants$1010._putenv_s$MH,"_putenv_s");
    }
    public static int _putenv_s ( Addressable _Name,  Addressable _Value) {
        var mh$ = _putenv_s$MH();
        try {
            return (int)mh$.invokeExact(_Name, _Value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _searchenv_s$MH() {
        return RuntimeHelper.requireNonNull(constants$1010._searchenv_s$MH,"_searchenv_s");
    }
    public static int _searchenv_s ( Addressable _Filename,  Addressable _VarName,  Addressable _Buffer,  long _BufferCount) {
        var mh$ = _searchenv_s$MH();
        try {
            return (int)mh$.invokeExact(_Filename, _VarName, _Buffer, _BufferCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _searchenv$MH() {
        return RuntimeHelper.requireNonNull(constants$1011._searchenv$MH,"_searchenv");
    }
    public static void _searchenv ( Addressable _Filename,  Addressable _VarName,  Addressable _Buffer) {
        var mh$ = _searchenv$MH();
        try {
            mh$.invokeExact(_Filename, _VarName, _Buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _seterrormode$MH() {
        return RuntimeHelper.requireNonNull(constants$1011._seterrormode$MH,"_seterrormode");
    }
    public static void _seterrormode ( int _Mode) {
        var mh$ = _seterrormode$MH();
        try {
            mh$.invokeExact(_Mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _beep$MH() {
        return RuntimeHelper.requireNonNull(constants$1011._beep$MH,"_beep");
    }
    public static void _beep ( int _Frequency,  int _Duration) {
        var mh$ = _beep$MH();
        try {
            mh$.invokeExact(_Frequency, _Duration);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _sleep$MH() {
        return RuntimeHelper.requireNonNull(constants$1011._sleep$MH,"_sleep");
    }
    public static void _sleep ( int _Duration) {
        var mh$ = _sleep$MH();
        try {
            mh$.invokeExact(_Duration);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ecvt$MH() {
        return RuntimeHelper.requireNonNull(constants$1011.ecvt$MH,"ecvt");
    }
    public static MemoryAddress ecvt ( double _Value,  int _DigitCount,  Addressable _PtDec,  Addressable _PtSign) {
        var mh$ = ecvt$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Value, _DigitCount, _PtDec, _PtSign);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fcvt$MH() {
        return RuntimeHelper.requireNonNull(constants$1011.fcvt$MH,"fcvt");
    }
    public static MemoryAddress fcvt ( double _Value,  int _FractionalDigitCount,  Addressable _PtDec,  Addressable _PtSign) {
        var mh$ = fcvt$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Value, _FractionalDigitCount, _PtDec, _PtSign);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gcvt$MH() {
        return RuntimeHelper.requireNonNull(constants$1012.gcvt$MH,"gcvt");
    }
    public static MemoryAddress gcvt ( double _Value,  int _DigitCount,  Addressable _DstBuf) {
        var mh$ = gcvt$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Value, _DigitCount, _DstBuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle itoa$MH() {
        return RuntimeHelper.requireNonNull(constants$1012.itoa$MH,"itoa");
    }
    public static MemoryAddress itoa ( int _Value,  Addressable _Buffer,  int _Radix) {
        var mh$ = itoa$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Value, _Buffer, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ltoa$MH() {
        return RuntimeHelper.requireNonNull(constants$1012.ltoa$MH,"ltoa");
    }
    public static MemoryAddress ltoa ( int _Value,  Addressable _Buffer,  int _Radix) {
        var mh$ = ltoa$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Value, _Buffer, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle swab$MH() {
        return RuntimeHelper.requireNonNull(constants$1012.swab$MH,"swab");
    }
    public static void swab ( Addressable _Buf1,  Addressable _Buf2,  int _SizeInBytes) {
        var mh$ = swab$MH();
        try {
            mh$.invokeExact(_Buf1, _Buf2, _SizeInBytes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ultoa$MH() {
        return RuntimeHelper.requireNonNull(constants$1012.ultoa$MH,"ultoa");
    }
    public static MemoryAddress ultoa ( int _Value,  Addressable _Buffer,  int _Radix) {
        var mh$ = ultoa$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Value, _Buffer, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle putenv$MH() {
        return RuntimeHelper.requireNonNull(constants$1012.putenv$MH,"putenv");
    }
    public static int putenv ( Addressable _EnvString) {
        var mh$ = putenv$MH();
        try {
            return (int)mh$.invokeExact(_EnvString);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle onexit$MH() {
        return RuntimeHelper.requireNonNull(constants$1013.onexit$MH,"onexit");
    }
    public static MemoryAddress onexit ( Addressable _Func) {
        var mh$ = onexit$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int REGCLS_SINGLEUSE() {
        return (int)0L;
    }
    public static int REGCLS_MULTIPLEUSE() {
        return (int)1L;
    }
    public static int REGCLS_MULTI_SEPARATE() {
        return (int)2L;
    }
    public static int REGCLS_SUSPENDED() {
        return (int)4L;
    }
    public static int REGCLS_SURROGATE() {
        return (int)8L;
    }
    public static int REGCLS_AGILE() {
        return (int)16L;
    }
    public static int COINITBASE_MULTITHREADED() {
        return (int)0L;
    }
    public static MemoryLayout __MIDL_itf_unknwnbase_0000_0000_v0_0_c_ifspec$LAYOUT() {
        return constants$1013.__MIDL_itf_unknwnbase_0000_0000_v0_0_c_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_unknwnbase_0000_0000_v0_0_c_ifspec$VH() {
        return constants$1013.__MIDL_itf_unknwnbase_0000_0000_v0_0_c_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_unknwnbase_0000_0000_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1013.__MIDL_itf_unknwnbase_0000_0000_v0_0_c_ifspec$SEGMENT,"__MIDL_itf_unknwnbase_0000_0000_v0_0_c_ifspec");
    }
    public static MemoryAddress __MIDL_itf_unknwnbase_0000_0000_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1013.__MIDL_itf_unknwnbase_0000_0000_v0_0_c_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1013.__MIDL_itf_unknwnbase_0000_0000_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_unknwnbase_0000_0000_v0_0_c_ifspec"));
    }
    public static void __MIDL_itf_unknwnbase_0000_0000_v0_0_c_ifspec$set( MemoryAddress x) {
        constants$1013.__MIDL_itf_unknwnbase_0000_0000_v0_0_c_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1013.__MIDL_itf_unknwnbase_0000_0000_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_unknwnbase_0000_0000_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_unknwnbase_0000_0000_v0_0_s_ifspec$LAYOUT() {
        return constants$1013.__MIDL_itf_unknwnbase_0000_0000_v0_0_s_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_unknwnbase_0000_0000_v0_0_s_ifspec$VH() {
        return constants$1013.__MIDL_itf_unknwnbase_0000_0000_v0_0_s_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_unknwnbase_0000_0000_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1013.__MIDL_itf_unknwnbase_0000_0000_v0_0_s_ifspec$SEGMENT,"__MIDL_itf_unknwnbase_0000_0000_v0_0_s_ifspec");
    }
    public static MemoryAddress __MIDL_itf_unknwnbase_0000_0000_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1013.__MIDL_itf_unknwnbase_0000_0000_v0_0_s_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1013.__MIDL_itf_unknwnbase_0000_0000_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_unknwnbase_0000_0000_v0_0_s_ifspec"));
    }
    public static void __MIDL_itf_unknwnbase_0000_0000_v0_0_s_ifspec$set( MemoryAddress x) {
        constants$1013.__MIDL_itf_unknwnbase_0000_0000_v0_0_s_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1013.__MIDL_itf_unknwnbase_0000_0000_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_unknwnbase_0000_0000_v0_0_s_ifspec"), x);
    }
    public static OfAddress LPUNKNOWN = Constants$root.C_POINTER$LAYOUT;
    public static MemorySegment IID_IUnknown$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1013.IID_IUnknown$SEGMENT,"IID_IUnknown");
    }
    public static MethodHandle IUnknown_QueryInterface_Proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$1013.IUnknown_QueryInterface_Proxy$MH,"IUnknown_QueryInterface_Proxy");
    }
    public static int IUnknown_QueryInterface_Proxy ( Addressable This,  Addressable riid,  Addressable ppvObject) {
        var mh$ = IUnknown_QueryInterface_Proxy$MH();
        try {
            return (int)mh$.invokeExact(This, riid, ppvObject);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
}


