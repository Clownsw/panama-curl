// Generated by jextract

package cn.smilex;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$64 {

    static final FunctionDescriptor mktime$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle mktime$MH = RuntimeHelper.downcallHandle(
        "mktime",
        constants$64.mktime$FUNC
    );
    static final FunctionDescriptor time$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle time$MH = RuntimeHelper.downcallHandle(
        "time",
        constants$64.time$FUNC
    );
    static final FunctionDescriptor timespec_get$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle timespec_get$MH = RuntimeHelper.downcallHandle(
        "timespec_get",
        constants$64.timespec_get$FUNC
    );
    static final FunctionDescriptor ctime_s$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle ctime_s$MH = RuntimeHelper.downcallHandle(
        "ctime_s",
        constants$64.ctime_s$FUNC
    );
    static final FunctionDescriptor gmtime_s$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle gmtime_s$MH = RuntimeHelper.downcallHandle(
        "gmtime_s",
        constants$64.gmtime_s$FUNC
    );
    static final FunctionDescriptor localtime_s$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle localtime_s$MH = RuntimeHelper.downcallHandle(
        "localtime_s",
        constants$64.localtime_s$FUNC
    );
}


