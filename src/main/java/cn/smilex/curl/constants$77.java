// Generated by jextract

package cn.smilex;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$77 {

    static final FunctionDescriptor tolower$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle tolower$MH = RuntimeHelper.downcallHandle(
        "tolower",
        constants$77.tolower$FUNC
    );
    static final FunctionDescriptor _tolower$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle _tolower$MH = RuntimeHelper.downcallHandle(
        "_tolower",
        constants$77._tolower$FUNC
    );
    static final FunctionDescriptor _tolower_l$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle _tolower_l$MH = RuntimeHelper.downcallHandle(
        "_tolower_l",
        constants$77._tolower_l$FUNC
    );
    static final FunctionDescriptor _toupper$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle _toupper$MH = RuntimeHelper.downcallHandle(
        "_toupper",
        constants$77._toupper$FUNC
    );
    static final FunctionDescriptor _toupper_l$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle _toupper_l$MH = RuntimeHelper.downcallHandle(
        "_toupper_l",
        constants$77._toupper_l$FUNC
    );
    static final FunctionDescriptor __isascii$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle __isascii$MH = RuntimeHelper.downcallHandle(
        "__isascii",
        constants$77.__isascii$FUNC
    );
}


