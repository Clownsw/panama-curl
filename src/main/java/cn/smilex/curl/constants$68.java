// Generated by jextract

package cn.smilex;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$68 {

    static final FunctionDescriptor iswupper$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_SHORT$LAYOUT
    );
    static final MethodHandle iswupper$MH = RuntimeHelper.downcallHandle(
        "iswupper",
        constants$68.iswupper$FUNC
    );
    static final FunctionDescriptor iswxdigit$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_SHORT$LAYOUT
    );
    static final MethodHandle iswxdigit$MH = RuntimeHelper.downcallHandle(
        "iswxdigit",
        constants$68.iswxdigit$FUNC
    );
    static final FunctionDescriptor __iswcsymf$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_SHORT$LAYOUT
    );
    static final MethodHandle __iswcsymf$MH = RuntimeHelper.downcallHandle(
        "__iswcsymf",
        constants$68.__iswcsymf$FUNC
    );
    static final FunctionDescriptor __iswcsym$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_SHORT$LAYOUT
    );
    static final MethodHandle __iswcsym$MH = RuntimeHelper.downcallHandle(
        "__iswcsym",
        constants$68.__iswcsym$FUNC
    );
    static final FunctionDescriptor _iswalnum_l$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_SHORT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle _iswalnum_l$MH = RuntimeHelper.downcallHandle(
        "_iswalnum_l",
        constants$68._iswalnum_l$FUNC
    );
    static final FunctionDescriptor _iswalpha_l$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_SHORT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle _iswalpha_l$MH = RuntimeHelper.downcallHandle(
        "_iswalpha_l",
        constants$68._iswalpha_l$FUNC
    );
}


