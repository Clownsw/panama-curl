// Generated by jextract

package cn.smilex;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$730 {

    static final FunctionDescriptor RpcServerCompleteSecurityCallback$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle RpcServerCompleteSecurityCallback$MH = RuntimeHelper.downcallHandle(
        "RpcServerCompleteSecurityCallback",
        constants$730.RpcServerCompleteSecurityCallback$FUNC
    );
    static final FunctionDescriptor RpcServerRegisterAuthInfoA$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle RpcServerRegisterAuthInfoA$MH = RuntimeHelper.downcallHandle(
        "RpcServerRegisterAuthInfoA",
        constants$730.RpcServerRegisterAuthInfoA$FUNC
    );
    static final FunctionDescriptor RpcServerRegisterAuthInfoW$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle RpcServerRegisterAuthInfoW$MH = RuntimeHelper.downcallHandle(
        "RpcServerRegisterAuthInfoW",
        constants$730.RpcServerRegisterAuthInfoW$FUNC
    );
    static final FunctionDescriptor RpcBindingServerFromClient$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle RpcBindingServerFromClient$MH = RuntimeHelper.downcallHandle(
        "RpcBindingServerFromClient",
        constants$730.RpcBindingServerFromClient$FUNC
    );
    static final FunctionDescriptor RpcRaiseException$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle RpcRaiseException$MH = RuntimeHelper.downcallHandle(
        "RpcRaiseException",
        constants$730.RpcRaiseException$FUNC
    );
    static final FunctionDescriptor RpcTestCancel$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT);
    static final MethodHandle RpcTestCancel$MH = RuntimeHelper.downcallHandle(
        "RpcTestCancel",
        constants$730.RpcTestCancel$FUNC
    );
}


