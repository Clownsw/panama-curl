// Generated by jextract

package cn.smilex;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$870 {

    static final FunctionDescriptor PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_FREE$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_FREE$MH = RuntimeHelper.downcallHandle(
        constants$870.PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_FREE$FUNC
    );
    static final FunctionDescriptor PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_FREE_IDENTIFIER$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_FREE_IDENTIFIER$MH = RuntimeHelper.downcallHandle(
        constants$870.PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_FREE_IDENTIFIER$FUNC
    );
    static final FunctionDescriptor PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_INITIALIZE$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_INITIALIZE$MH = RuntimeHelper.downcallHandle(
        constants$870.PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_INITIALIZE$FUNC
    );
    static final FunctionDescriptor CertIsWeakHash$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle CertIsWeakHash$MH = RuntimeHelper.downcallHandle(
        "CertIsWeakHash",
        constants$870.CertIsWeakHash$FUNC
    );
}


