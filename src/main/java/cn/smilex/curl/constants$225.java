// Generated by jextract

package cn.smilex;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$225 {

    static final FunctionDescriptor HeapAlloc$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle HeapAlloc$MH = RuntimeHelper.downcallHandle(
        "HeapAlloc",
        constants$225.HeapAlloc$FUNC
    );
    static final FunctionDescriptor HeapReAlloc$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle HeapReAlloc$MH = RuntimeHelper.downcallHandle(
        "HeapReAlloc",
        constants$225.HeapReAlloc$FUNC
    );
    static final FunctionDescriptor HeapFree$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle HeapFree$MH = RuntimeHelper.downcallHandle(
        "HeapFree",
        constants$225.HeapFree$FUNC
    );
    static final FunctionDescriptor HeapSize$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle HeapSize$MH = RuntimeHelper.downcallHandle(
        "HeapSize",
        constants$225.HeapSize$FUNC
    );
    static final FunctionDescriptor GetProcessHeap$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT);
    static final MethodHandle GetProcessHeap$MH = RuntimeHelper.downcallHandle(
        "GetProcessHeap",
        constants$225.GetProcessHeap$FUNC
    );
    static final FunctionDescriptor HeapCompact$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle HeapCompact$MH = RuntimeHelper.downcallHandle(
        "HeapCompact",
        constants$225.HeapCompact$FUNC
    );
}


