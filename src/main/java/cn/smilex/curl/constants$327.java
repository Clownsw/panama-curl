// Generated by jextract

package cn.smilex;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$327 {

    static final FunctionDescriptor GetUmsSystemThreadInformation$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle GetUmsSystemThreadInformation$MH = RuntimeHelper.downcallHandle(
        "GetUmsSystemThreadInformation",
        constants$327.GetUmsSystemThreadInformation$FUNC
    );
    static final FunctionDescriptor SetThreadAffinityMask$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle SetThreadAffinityMask$MH = RuntimeHelper.downcallHandle(
        "SetThreadAffinityMask",
        constants$327.SetThreadAffinityMask$FUNC
    );
    static final FunctionDescriptor SetProcessDEPPolicy$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle SetProcessDEPPolicy$MH = RuntimeHelper.downcallHandle(
        "SetProcessDEPPolicy",
        constants$327.SetProcessDEPPolicy$FUNC
    );
    static final FunctionDescriptor GetProcessDEPPolicy$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle GetProcessDEPPolicy$MH = RuntimeHelper.downcallHandle(
        "GetProcessDEPPolicy",
        constants$327.GetProcessDEPPolicy$FUNC
    );
    static final FunctionDescriptor RequestWakeupLatency$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle RequestWakeupLatency$MH = RuntimeHelper.downcallHandle(
        "RequestWakeupLatency",
        constants$327.RequestWakeupLatency$FUNC
    );
    static final FunctionDescriptor IsSystemResumeAutomatic$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT);
    static final MethodHandle IsSystemResumeAutomatic$MH = RuntimeHelper.downcallHandle(
        "IsSystemResumeAutomatic",
        constants$327.IsSystemResumeAutomatic$FUNC
    );
}


