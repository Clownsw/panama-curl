// Generated by jextract

package cn.smilex;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$108 {

    static final FunctionDescriptor strnicmp$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle strnicmp$MH = RuntimeHelper.downcallHandle(
        "strnicmp",
        constants$108.strnicmp$FUNC
    );
    static final FunctionDescriptor strnset$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle strnset$MH = RuntimeHelper.downcallHandle(
        "strnset",
        constants$108.strnset$FUNC
    );
    static final FunctionDescriptor strrev$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle strrev$MH = RuntimeHelper.downcallHandle(
        "strrev",
        constants$108.strrev$FUNC
    );
    static final FunctionDescriptor strset$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle strset$MH = RuntimeHelper.downcallHandle(
        "strset",
        constants$108.strset$FUNC
    );
    static final FunctionDescriptor strupr$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle strupr$MH = RuntimeHelper.downcallHandle(
        "strupr",
        constants$108.strupr$FUNC
    );
    static final FunctionDescriptor EXCEPTION_ROUTINE$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
}


