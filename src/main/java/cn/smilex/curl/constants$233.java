// Generated by jextract

package cn.smilex;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$233 {

    static final FunctionDescriptor SleepConditionVariableCS$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle SleepConditionVariableCS$MH = RuntimeHelper.downcallHandle(
        "SleepConditionVariableCS",
        constants$233.SleepConditionVariableCS$FUNC
    );
    static final FunctionDescriptor SleepConditionVariableSRW$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle SleepConditionVariableSRW$MH = RuntimeHelper.downcallHandle(
        "SleepConditionVariableSRW",
        constants$233.SleepConditionVariableSRW$FUNC
    );
    static final FunctionDescriptor SetEvent$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle SetEvent$MH = RuntimeHelper.downcallHandle(
        "SetEvent",
        constants$233.SetEvent$FUNC
    );
    static final FunctionDescriptor ResetEvent$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle ResetEvent$MH = RuntimeHelper.downcallHandle(
        "ResetEvent",
        constants$233.ResetEvent$FUNC
    );
    static final FunctionDescriptor ReleaseSemaphore$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle ReleaseSemaphore$MH = RuntimeHelper.downcallHandle(
        "ReleaseSemaphore",
        constants$233.ReleaseSemaphore$FUNC
    );
    static final FunctionDescriptor ReleaseMutex$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle ReleaseMutex$MH = RuntimeHelper.downcallHandle(
        "ReleaseMutex",
        constants$233.ReleaseMutex$FUNC
    );
}


