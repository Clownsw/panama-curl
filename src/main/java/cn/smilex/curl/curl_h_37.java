// Generated by jextract

package cn.smilex;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
 class curl_h_37 extends curl_h_36 {

    public static int MCI_ANIM_PLAY_FAST() {
        return (int)262144L;
    }
    public static int MCI_ANIM_PLAY_SLOW() {
        return (int)524288L;
    }
    public static int MCI_ANIM_PLAY_SCAN() {
        return (int)1048576L;
    }
    public static int MCI_ANIM_STEP_REVERSE() {
        return (int)65536L;
    }
    public static int MCI_ANIM_STEP_FRAMES() {
        return (int)131072L;
    }
    public static int MCI_ANIM_STATUS_SPEED() {
        return (int)16385L;
    }
    public static int MCI_ANIM_STATUS_FORWARD() {
        return (int)16386L;
    }
    public static int MCI_ANIM_STATUS_HWND() {
        return (int)16387L;
    }
    public static int MCI_ANIM_STATUS_HPAL() {
        return (int)16388L;
    }
    public static int MCI_ANIM_STATUS_STRETCH() {
        return (int)16389L;
    }
    public static int MCI_ANIM_INFO_TEXT() {
        return (int)65536L;
    }
    public static int MCI_ANIM_GETDEVCAPS_CAN_REVERSE() {
        return (int)16385L;
    }
    public static int MCI_ANIM_GETDEVCAPS_FAST_RATE() {
        return (int)16386L;
    }
    public static int MCI_ANIM_GETDEVCAPS_SLOW_RATE() {
        return (int)16387L;
    }
    public static int MCI_ANIM_GETDEVCAPS_NORMAL_RATE() {
        return (int)16388L;
    }
    public static int MCI_ANIM_GETDEVCAPS_PALETTES() {
        return (int)16390L;
    }
    public static int MCI_ANIM_GETDEVCAPS_CAN_STRETCH() {
        return (int)16391L;
    }
    public static int MCI_ANIM_GETDEVCAPS_MAX_WINDOWS() {
        return (int)16392L;
    }
    public static int MCI_ANIM_REALIZE_NORM() {
        return (int)65536L;
    }
    public static int MCI_ANIM_REALIZE_BKGD() {
        return (int)131072L;
    }
    public static int MCI_ANIM_WINDOW_HWND() {
        return (int)65536L;
    }
    public static int MCI_ANIM_WINDOW_STATE() {
        return (int)262144L;
    }
    public static int MCI_ANIM_WINDOW_TEXT() {
        return (int)524288L;
    }
    public static int MCI_ANIM_WINDOW_ENABLE_STRETCH() {
        return (int)1048576L;
    }
    public static int MCI_ANIM_WINDOW_DISABLE_STRETCH() {
        return (int)2097152L;
    }
    public static int MCI_ANIM_WINDOW_DEFAULT() {
        return (int)0L;
    }
    public static int MCI_ANIM_RECT() {
        return (int)65536L;
    }
    public static int MCI_ANIM_PUT_SOURCE() {
        return (int)131072L;
    }
    public static int MCI_ANIM_PUT_DESTINATION() {
        return (int)262144L;
    }
    public static int MCI_ANIM_WHERE_SOURCE() {
        return (int)131072L;
    }
    public static int MCI_ANIM_WHERE_DESTINATION() {
        return (int)262144L;
    }
    public static int MCI_ANIM_UPDATE_HDC() {
        return (int)131072L;
    }
    public static int MCI_OVLY_OPEN_WS() {
        return (int)65536L;
    }
    public static int MCI_OVLY_OPEN_PARENT() {
        return (int)131072L;
    }
    public static int MCI_OVLY_STATUS_HWND() {
        return (int)16385L;
    }
    public static int MCI_OVLY_STATUS_STRETCH() {
        return (int)16386L;
    }
    public static int MCI_OVLY_INFO_TEXT() {
        return (int)65536L;
    }
    public static int MCI_OVLY_GETDEVCAPS_CAN_STRETCH() {
        return (int)16385L;
    }
    public static int MCI_OVLY_GETDEVCAPS_CAN_FREEZE() {
        return (int)16386L;
    }
    public static int MCI_OVLY_GETDEVCAPS_MAX_WINDOWS() {
        return (int)16387L;
    }
    public static int MCI_OVLY_WINDOW_HWND() {
        return (int)65536L;
    }
    public static int MCI_OVLY_WINDOW_STATE() {
        return (int)262144L;
    }
    public static int MCI_OVLY_WINDOW_TEXT() {
        return (int)524288L;
    }
    public static int MCI_OVLY_WINDOW_ENABLE_STRETCH() {
        return (int)1048576L;
    }
    public static int MCI_OVLY_WINDOW_DISABLE_STRETCH() {
        return (int)2097152L;
    }
    public static int MCI_OVLY_WINDOW_DEFAULT() {
        return (int)0L;
    }
    public static int MCI_OVLY_RECT() {
        return (int)65536L;
    }
    public static int MCI_OVLY_PUT_SOURCE() {
        return (int)131072L;
    }
    public static int MCI_OVLY_PUT_DESTINATION() {
        return (int)262144L;
    }
    public static int MCI_OVLY_PUT_FRAME() {
        return (int)524288L;
    }
    public static int MCI_OVLY_PUT_VIDEO() {
        return (int)1048576L;
    }
    public static int MCI_OVLY_WHERE_SOURCE() {
        return (int)131072L;
    }
    public static int MCI_OVLY_WHERE_DESTINATION() {
        return (int)262144L;
    }
    public static int MCI_OVLY_WHERE_FRAME() {
        return (int)524288L;
    }
    public static int MCI_OVLY_WHERE_VIDEO() {
        return (int)1048576L;
    }
    public static int DRV_CANCEL() {
        return (int)0L;
    }
    public static int DRV_OK() {
        return (int)1L;
    }
    public static int DRV_RESTART() {
        return (int)2L;
    }
    public static int DRV_MCI_FIRST() {
        return (int)2048L;
    }
    public static int DRV_MCI_LAST() {
        return (int)6143L;
    }
    public static int MMIOERR_FILENOTFOUND() {
        return (int)257L;
    }
    public static int MMIOERR_OUTOFMEMORY() {
        return (int)258L;
    }
    public static int MMIOERR_CANNOTOPEN() {
        return (int)259L;
    }
    public static int MMIOERR_CANNOTCLOSE() {
        return (int)260L;
    }
    public static int MMIOERR_CANNOTREAD() {
        return (int)261L;
    }
    public static int MMIOERR_CANNOTWRITE() {
        return (int)262L;
    }
    public static int MMIOERR_CANNOTSEEK() {
        return (int)263L;
    }
    public static int MMIOERR_CANNOTEXPAND() {
        return (int)264L;
    }
    public static int MMIOERR_CHUNKNOTFOUND() {
        return (int)265L;
    }
    public static int MMIOERR_UNBUFFERED() {
        return (int)266L;
    }
    public static int MMIOERR_PATHNOTFOUND() {
        return (int)267L;
    }
    public static int MMIOERR_ACCESSDENIED() {
        return (int)268L;
    }
    public static int MMIOERR_SHARINGVIOLATION() {
        return (int)269L;
    }
    public static int MMIOERR_NETWORKERROR() {
        return (int)270L;
    }
    public static int MMIOERR_TOOMANYOPENFILES() {
        return (int)271L;
    }
    public static int MMIOERR_INVALIDFILE() {
        return (int)272L;
    }
    public static int CFSEPCHAR() {
        return (int)43L;
    }
    public static int MMIOM_READ() {
        return (int)0L;
    }
    public static int MMIOM_WRITE() {
        return (int)1L;
    }
    public static int FOURCC_RIFF() {
        return (int)1179011410L;
    }
    public static int FOURCC_LIST() {
        return (int)1414744396L;
    }
    public static int FOURCC_DOS() {
        return (int)542330692L;
    }
    public static int FOURCC_MEM() {
        return (int)541934925L;
    }
    public static int SND_NOWAIT() {
        return (int)8192L;
    }
    public static int SND_ALIAS() {
        return (int)65536L;
    }
    public static int SND_ALIAS_ID() {
        return (int)1114112L;
    }
    public static int SND_FILENAME() {
        return (int)131072L;
    }
    public static int SND_RESOURCE() {
        return (int)262148L;
    }
    public static int SND_SENTRY() {
        return (int)524288L;
    }
    public static int SND_RING() {
        return (int)1048576L;
    }
    public static int SND_SYSTEM() {
        return (int)2097152L;
    }
    public static int SND_ALIAS_SYSTEMASTERISK() {
        return (int)10835L;
    }
    public static int SND_ALIAS_SYSTEMQUESTION() {
        return (int)16211L;
    }
    public static int SND_ALIAS_SYSTEMHAND() {
        return (int)18515L;
    }
    public static int SND_ALIAS_SYSTEMEXIT() {
        return (int)17747L;
    }
    public static int SND_ALIAS_SYSTEMSTART() {
        return (int)21331L;
    }
    public static int SND_ALIAS_SYSTEMWELCOME() {
        return (int)22355L;
    }
    public static int SND_ALIAS_SYSTEMEXCLAMATION() {
        return (int)8531L;
    }
    public static int SND_ALIAS_SYSTEMDEFAULT() {
        return (int)17491L;
    }
    public static int WAVERR_BADFORMAT() {
        return (int)32L;
    }
    public static int WAVERR_STILLPLAYING() {
        return (int)33L;
    }
    public static int WAVERR_UNPREPARED() {
        return (int)34L;
    }
    public static int WAVERR_SYNC() {
        return (int)35L;
    }
    public static int WAVERR_LASTERROR() {
        return (int)35L;
    }
    public static int WOM_OPEN() {
        return (int)955L;
    }
    public static int WOM_CLOSE() {
        return (int)956L;
    }
    public static int WOM_DONE() {
        return (int)957L;
    }
    public static int WIM_OPEN() {
        return (int)958L;
    }
    public static int WIM_CLOSE() {
        return (int)959L;
    }
    public static int WIM_DATA() {
        return (int)960L;
    }
    public static int WAVE_MAPPER() {
        return (int)4294967295L;
    }
    public static int WAVE_FORMAT_DIRECT_QUERY() {
        return (int)9L;
    }
    public static int MIDIERR_UNPREPARED() {
        return (int)64L;
    }
    public static int MIDIERR_STILLPLAYING() {
        return (int)65L;
    }
    public static int MIDIERR_NOMAP() {
        return (int)66L;
    }
    public static int MIDIERR_NOTREADY() {
        return (int)67L;
    }
    public static int MIDIERR_NODEVICE() {
        return (int)68L;
    }
    public static int MIDIERR_INVALIDSETUP() {
        return (int)69L;
    }
    public static int MIDIERR_BADOPENMODE() {
        return (int)70L;
    }
    public static int MIDIERR_DONT_CONTINUE() {
        return (int)71L;
    }
    public static int MIDIERR_LASTERROR() {
        return (int)71L;
    }
    public static int MIM_OPEN() {
        return (int)961L;
    }
    public static int MIM_CLOSE() {
        return (int)962L;
    }
    public static int MIM_DATA() {
        return (int)963L;
    }
    public static int MIM_LONGDATA() {
        return (int)964L;
    }
    public static int MIM_ERROR() {
        return (int)965L;
    }
    public static int MIM_LONGERROR() {
        return (int)966L;
    }
    public static int MOM_OPEN() {
        return (int)967L;
    }
    public static int MOM_CLOSE() {
        return (int)968L;
    }
    public static int MOM_DONE() {
        return (int)969L;
    }
    public static int MIM_MOREDATA() {
        return (int)972L;
    }
    public static int MOM_POSITIONCB() {
        return (int)970L;
    }
    public static int MIDIMAPPER() {
        return (int)4294967295L;
    }
    public static int MIDI_MAPPER() {
        return (int)4294967295L;
    }
    public static int MIDI_IO_STATUS() {
        return (int)32L;
    }
    public static int MEVT_F_SHORT() {
        return (int)0L;
    }
    public static int MEVT_F_LONG() {
        return (int)2147483648L;
    }
    public static int MEVT_F_CALLBACK() {
        return (int)1073741824L;
    }
    public static byte MEVT_SHORTMSG() {
        return (byte)0L;
    }
    public static byte MEVT_TEMPO() {
        return (byte)1L;
    }
    public static byte MEVT_NOP() {
        return (byte)2L;
    }
    public static byte MEVT_LONGMSG() {
        return (byte)128L;
    }
    public static byte MEVT_COMMENT() {
        return (byte)130L;
    }
    public static byte MEVT_VERSION() {
        return (byte)132L;
    }
    public static int MIDISTRM_ERROR() {
        return (int)-2L;
    }
    public static int MIDIPROP_SET() {
        return (int)2147483648L;
    }
    public static int MIDIPROP_GET() {
        return (int)1073741824L;
    }
    public static int MIDIPROP_TIMEDIV() {
        return (int)1L;
    }
    public static int MIDIPROP_TEMPO() {
        return (int)2L;
    }
    public static int AUX_MAPPER() {
        return (int)4294967295L;
    }
    public static int MIXERR_INVALLINE() {
        return (int)1024L;
    }
    public static int MIXERR_INVALCONTROL() {
        return (int)1025L;
    }
    public static int MIXERR_INVALVALUE() {
        return (int)1026L;
    }
    public static int MIXERR_LASTERROR() {
        return (int)1026L;
    }
    public static int MIXER_OBJECTF_HANDLE() {
        return (int)2147483648L;
    }
    public static int MIXER_OBJECTF_MIXER() {
        return (int)0L;
    }
    public static int MIXER_OBJECTF_HMIXER() {
        return (int)2147483648L;
    }
    public static int MIXER_OBJECTF_WAVEOUT() {
        return (int)268435456L;
    }
    public static int MIXER_OBJECTF_HWAVEOUT() {
        return (int)2415919104L;
    }
    public static int MIXER_OBJECTF_WAVEIN() {
        return (int)536870912L;
    }
    public static int MIXER_OBJECTF_HWAVEIN() {
        return (int)2684354560L;
    }
    public static int MIXER_OBJECTF_MIDIOUT() {
        return (int)805306368L;
    }
    public static int MIXER_OBJECTF_HMIDIOUT() {
        return (int)2952790016L;
    }
    public static int MIXER_OBJECTF_MIDIIN() {
        return (int)1073741824L;
    }
    public static int MIXER_OBJECTF_HMIDIIN() {
        return (int)3221225472L;
    }
    public static int MIXER_OBJECTF_AUX() {
        return (int)1342177280L;
    }
    public static int MIXERLINE_LINEF_ACTIVE() {
        return (int)1L;
    }
    public static int MIXERLINE_LINEF_DISCONNECTED() {
        return (int)32768L;
    }
    public static int MIXERLINE_LINEF_SOURCE() {
        return (int)2147483648L;
    }
    public static int MIXERLINE_COMPONENTTYPE_DST_FIRST() {
        return (int)0L;
    }
    public static int MIXERLINE_COMPONENTTYPE_DST_UNDEFINED() {
        return (int)0L;
    }
    public static int MIXERLINE_COMPONENTTYPE_DST_DIGITAL() {
        return (int)1L;
    }
    public static int MIXERLINE_COMPONENTTYPE_DST_LINE() {
        return (int)2L;
    }
    public static int MIXERLINE_COMPONENTTYPE_DST_MONITOR() {
        return (int)3L;
    }
    public static int MIXERLINE_COMPONENTTYPE_DST_SPEAKERS() {
        return (int)4L;
    }
    public static int MIXERLINE_COMPONENTTYPE_DST_HEADPHONES() {
        return (int)5L;
    }
    public static int MIXERLINE_COMPONENTTYPE_DST_TELEPHONE() {
        return (int)6L;
    }
    public static int MIXERLINE_COMPONENTTYPE_DST_WAVEIN() {
        return (int)7L;
    }
    public static int MIXERLINE_COMPONENTTYPE_DST_VOICEIN() {
        return (int)8L;
    }
    public static int MIXERLINE_COMPONENTTYPE_DST_LAST() {
        return (int)8L;
    }
    public static int MIXERLINE_COMPONENTTYPE_SRC_FIRST() {
        return (int)4096L;
    }
    public static int MIXERLINE_COMPONENTTYPE_SRC_UNDEFINED() {
        return (int)4096L;
    }
    public static int MIXERLINE_COMPONENTTYPE_SRC_DIGITAL() {
        return (int)4097L;
    }
    public static int MIXERLINE_COMPONENTTYPE_SRC_LINE() {
        return (int)4098L;
    }
    public static int MIXERLINE_COMPONENTTYPE_SRC_MICROPHONE() {
        return (int)4099L;
    }
    public static int MIXERLINE_COMPONENTTYPE_SRC_SYNTHESIZER() {
        return (int)4100L;
    }
    public static int MIXERLINE_COMPONENTTYPE_SRC_COMPACTDISC() {
        return (int)4101L;
    }
    public static int MIXERLINE_COMPONENTTYPE_SRC_TELEPHONE() {
        return (int)4102L;
    }
    public static int MIXERLINE_COMPONENTTYPE_SRC_PCSPEAKER() {
        return (int)4103L;
    }
    public static int MIXERLINE_COMPONENTTYPE_SRC_WAVEOUT() {
        return (int)4104L;
    }
    public static int MIXERLINE_COMPONENTTYPE_SRC_AUXILIARY() {
        return (int)4105L;
    }
    public static int MIXERLINE_COMPONENTTYPE_SRC_ANALOG() {
        return (int)4106L;
    }
    public static int MIXERLINE_COMPONENTTYPE_SRC_LAST() {
        return (int)4106L;
    }
    public static int MIXER_GETLINEINFOF_DESTINATION() {
        return (int)0L;
    }
    public static int MIXER_GETLINEINFOF_SOURCE() {
        return (int)1L;
    }
    public static int MIXER_GETLINEINFOF_LINEID() {
        return (int)2L;
    }
    public static int MIXER_GETLINEINFOF_COMPONENTTYPE() {
        return (int)3L;
    }
    public static int MIXER_GETLINEINFOF_TARGETTYPE() {
        return (int)4L;
    }
    public static int MIXER_GETLINEINFOF_QUERYMASK() {
        return (int)15L;
    }
    public static int MIXERCONTROL_CONTROLF_UNIFORM() {
        return (int)1L;
    }
    public static int MIXERCONTROL_CONTROLF_MULTIPLE() {
        return (int)2L;
    }
    public static int MIXERCONTROL_CONTROLF_DISABLED() {
        return (int)2147483648L;
    }
    public static int MIXERCONTROL_CT_CLASS_MASK() {
        return (int)4026531840L;
    }
    public static int MIXERCONTROL_CT_CLASS_CUSTOM() {
        return (int)0L;
    }
    public static int MIXERCONTROL_CT_CLASS_METER() {
        return (int)268435456L;
    }
    public static int MIXERCONTROL_CT_CLASS_SWITCH() {
        return (int)536870912L;
    }
    public static int MIXERCONTROL_CT_CLASS_NUMBER() {
        return (int)805306368L;
    }
    public static int MIXERCONTROL_CT_CLASS_SLIDER() {
        return (int)1073741824L;
    }
    public static int MIXERCONTROL_CT_CLASS_FADER() {
        return (int)1342177280L;
    }
    public static int MIXERCONTROL_CT_CLASS_TIME() {
        return (int)1610612736L;
    }
    public static int MIXERCONTROL_CT_CLASS_LIST() {
        return (int)1879048192L;
    }
    public static int MIXERCONTROL_CT_SUBCLASS_MASK() {
        return (int)251658240L;
    }
    public static int MIXERCONTROL_CT_SC_SWITCH_BOOLEAN() {
        return (int)0L;
    }
    public static int MIXERCONTROL_CT_SC_SWITCH_BUTTON() {
        return (int)16777216L;
    }
    public static int MIXERCONTROL_CT_SC_METER_POLLED() {
        return (int)0L;
    }
    public static int MIXERCONTROL_CT_SC_TIME_MICROSECS() {
        return (int)0L;
    }
    public static int MIXERCONTROL_CT_SC_TIME_MILLISECS() {
        return (int)16777216L;
    }
    public static int MIXERCONTROL_CT_SC_LIST_SINGLE() {
        return (int)0L;
    }
    public static int MIXERCONTROL_CT_SC_LIST_MULTIPLE() {
        return (int)16777216L;
    }
    public static int MIXERCONTROL_CT_UNITS_MASK() {
        return (int)16711680L;
    }
    public static int MIXERCONTROL_CT_UNITS_CUSTOM() {
        return (int)0L;
    }
    public static int MIXERCONTROL_CT_UNITS_BOOLEAN() {
        return (int)65536L;
    }
    public static int MIXERCONTROL_CT_UNITS_SIGNED() {
        return (int)131072L;
    }
    public static int MIXERCONTROL_CT_UNITS_UNSIGNED() {
        return (int)196608L;
    }
    public static int MIXERCONTROL_CT_UNITS_DECIBELS() {
        return (int)262144L;
    }
    public static int MIXERCONTROL_CT_UNITS_PERCENT() {
        return (int)327680L;
    }
    public static int MIXERCONTROL_CONTROLTYPE_CUSTOM() {
        return (int)0L;
    }
    public static int MIXERCONTROL_CONTROLTYPE_BOOLEANMETER() {
        return (int)268500992L;
    }
    public static int MIXERCONTROL_CONTROLTYPE_SIGNEDMETER() {
        return (int)268566528L;
    }
    public static int MIXERCONTROL_CONTROLTYPE_PEAKMETER() {
        return (int)268566529L;
    }
    public static int MIXERCONTROL_CONTROLTYPE_UNSIGNEDMETER() {
        return (int)268632064L;
    }
    public static int MIXERCONTROL_CONTROLTYPE_BOOLEAN() {
        return (int)536936448L;
    }
    public static int MIXERCONTROL_CONTROLTYPE_ONOFF() {
        return (int)536936449L;
    }
    public static int MIXERCONTROL_CONTROLTYPE_MUTE() {
        return (int)536936450L;
    }
    public static int MIXERCONTROL_CONTROLTYPE_MONO() {
        return (int)536936451L;
    }
    public static int MIXERCONTROL_CONTROLTYPE_LOUDNESS() {
        return (int)536936452L;
    }
    public static int MIXERCONTROL_CONTROLTYPE_STEREOENH() {
        return (int)536936453L;
    }
    public static int MIXERCONTROL_CONTROLTYPE_BASS_BOOST() {
        return (int)536945271L;
    }
    public static int MIXERCONTROL_CONTROLTYPE_BUTTON() {
        return (int)553713664L;
    }
    public static int MIXERCONTROL_CONTROLTYPE_DECIBELS() {
        return (int)805568512L;
    }
    public static int MIXERCONTROL_CONTROLTYPE_SIGNED() {
        return (int)805437440L;
    }
    public static int MIXERCONTROL_CONTROLTYPE_UNSIGNED() {
        return (int)805502976L;
    }
    public static int MIXERCONTROL_CONTROLTYPE_PERCENT() {
        return (int)805634048L;
    }
    public static int MIXERCONTROL_CONTROLTYPE_SLIDER() {
        return (int)1073872896L;
    }
    public static int MIXERCONTROL_CONTROLTYPE_PAN() {
        return (int)1073872897L;
    }
    public static int MIXERCONTROL_CONTROLTYPE_QSOUNDPAN() {
        return (int)1073872898L;
    }
    public static int MIXERCONTROL_CONTROLTYPE_FADER() {
        return (int)1342373888L;
    }
    public static int MIXERCONTROL_CONTROLTYPE_VOLUME() {
        return (int)1342373889L;
    }
    public static int MIXERCONTROL_CONTROLTYPE_BASS() {
        return (int)1342373890L;
    }
    public static int MIXERCONTROL_CONTROLTYPE_TREBLE() {
        return (int)1342373891L;
    }
    public static int MIXERCONTROL_CONTROLTYPE_EQUALIZER() {
        return (int)1342373892L;
    }
    public static int MIXERCONTROL_CONTROLTYPE_SINGLESELECT() {
        return (int)1879113728L;
    }
    public static int MIXERCONTROL_CONTROLTYPE_MUX() {
        return (int)1879113729L;
    }
    public static int MIXERCONTROL_CONTROLTYPE_MULTIPLESELECT() {
        return (int)1895890944L;
    }
    public static int MIXERCONTROL_CONTROLTYPE_MIXER() {
        return (int)1895890945L;
    }
    public static int MIXERCONTROL_CONTROLTYPE_MICROTIME() {
        return (int)1610809344L;
    }
    public static int MIXERCONTROL_CONTROLTYPE_MILLITIME() {
        return (int)1627586560L;
    }
    public static int MIXER_GETLINECONTROLSF_ALL() {
        return (int)0L;
    }
    public static int MIXER_GETLINECONTROLSF_ONEBYID() {
        return (int)1L;
    }
    public static int MIXER_GETLINECONTROLSF_ONEBYTYPE() {
        return (int)2L;
    }
    public static int MIXER_GETLINECONTROLSF_QUERYMASK() {
        return (int)15L;
    }
    public static int MIXER_GETCONTROLDETAILSF_VALUE() {
        return (int)0L;
    }
    public static int MIXER_GETCONTROLDETAILSF_LISTTEXT() {
        return (int)1L;
    }
    public static int MIXER_GETCONTROLDETAILSF_QUERYMASK() {
        return (int)15L;
    }
    public static int MIXER_SETCONTROLDETAILSF_VALUE() {
        return (int)0L;
    }
    public static int MIXER_SETCONTROLDETAILSF_CUSTOM() {
        return (int)1L;
    }
    public static int MIXER_SETCONTROLDETAILSF_QUERYMASK() {
        return (int)15L;
    }
    public static int TIMERR_NOERROR() {
        return (int)0L;
    }
    public static int TIMERR_NOCANDO() {
        return (int)97L;
    }
    public static int TIMERR_STRUCT() {
        return (int)129L;
    }
    public static int JOYERR_NOERROR() {
        return (int)0L;
    }
    public static int JOYERR_PARMS() {
        return (int)165L;
    }
    public static int JOYERR_NOCANDO() {
        return (int)166L;
    }
    public static int JOYERR_UNPLUGGED() {
        return (int)167L;
    }
    public static int JOY_BUTTON5() {
        return (int)16L;
    }
    public static int JOY_BUTTON6() {
        return (int)32L;
    }
    public static int JOY_BUTTON7() {
        return (int)64L;
    }
    public static int JOY_BUTTON8() {
        return (int)128L;
    }
    public static int JOY_BUTTON9() {
        return (int)256L;
    }
    public static int JOY_BUTTON10() {
        return (int)512L;
    }
    public static int JOY_BUTTON11() {
        return (int)1024L;
    }
    public static int JOY_BUTTON12() {
        return (int)2048L;
    }
    public static int JOY_BUTTON13() {
        return (int)4096L;
    }
    public static int JOY_BUTTON14() {
        return (int)8192L;
    }
    public static int JOY_BUTTON15() {
        return (int)16384L;
    }
    public static int JOY_BUTTON16() {
        return (int)32768L;
    }
    public static int JOY_BUTTON17() {
        return (int)65536L;
    }
    public static int JOY_BUTTON18() {
        return (int)131072L;
    }
    public static int JOY_BUTTON19() {
        return (int)262144L;
    }
    public static int JOY_BUTTON20() {
        return (int)524288L;
    }
    public static int JOY_BUTTON21() {
        return (int)1048576L;
    }
    public static int JOY_BUTTON22() {
        return (int)2097152L;
    }
    public static int JOY_BUTTON23() {
        return (int)4194304L;
    }
    public static int JOY_BUTTON24() {
        return (int)8388608L;
    }
    public static int JOY_BUTTON25() {
        return (int)16777216L;
    }
    public static int JOY_BUTTON26() {
        return (int)33554432L;
    }
    public static int JOY_BUTTON27() {
        return (int)67108864L;
    }
    public static int JOY_BUTTON28() {
        return (int)134217728L;
    }
    public static int JOY_BUTTON29() {
        return (int)268435456L;
    }
    public static int JOY_BUTTON30() {
        return (int)536870912L;
    }
    public static int JOY_BUTTON31() {
        return (int)1073741824L;
    }
    public static int JOY_BUTTON32() {
        return (int)2147483648L;
    }
    public static short JOY_POVCENTERED() {
        return (short)65535L;
    }
    public static int JOY_RETURNX() {
        return (int)1L;
    }
    public static int JOY_RETURNY() {
        return (int)2L;
    }
    public static int JOY_RETURNZ() {
        return (int)4L;
    }
    public static int JOY_RETURNR() {
        return (int)8L;
    }
    public static int JOY_RETURNU() {
        return (int)16L;
    }
    public static int JOY_RETURNV() {
        return (int)32L;
    }
    public static int JOY_RETURNPOV() {
        return (int)64L;
    }
    public static int JOY_RETURNBUTTONS() {
        return (int)128L;
    }
    public static int JOY_RETURNRAWDATA() {
        return (int)256L;
    }
    public static int JOY_RETURNPOVCTS() {
        return (int)512L;
    }
    public static int JOY_RETURNCENTERED() {
        return (int)1024L;
    }
    public static int JOY_USEDEADZONE() {
        return (int)2048L;
    }
    public static int JOY_RETURNALL() {
        return (int)255L;
    }
    public static int JOY_CAL_READALWAYS() {
        return (int)65536L;
    }
    public static int JOY_CAL_READXYONLY() {
        return (int)131072L;
    }
    public static int JOY_CAL_READ3() {
        return (int)262144L;
    }
    public static int JOY_CAL_READ4() {
        return (int)524288L;
    }
    public static int JOY_CAL_READXONLY() {
        return (int)1048576L;
    }
    public static int JOY_CAL_READYONLY() {
        return (int)2097152L;
    }
    public static int JOY_CAL_READ5() {
        return (int)4194304L;
    }
    public static int JOY_CAL_READ6() {
        return (int)8388608L;
    }
    public static int JOY_CAL_READZONLY() {
        return (int)16777216L;
    }
    public static int JOY_CAL_READRONLY() {
        return (int)33554432L;
    }
    public static int JOY_CAL_READUONLY() {
        return (int)67108864L;
    }
    public static int JOY_CAL_READVONLY() {
        return (int)134217728L;
    }
    public static MemorySegment ALL_TRANSPORTS() {
        return constants$1437.ALL_TRANSPORTS$SEGMENT;
    }
    public static MemorySegment MS_NBF() {
        return constants$1437.MS_NBF$SEGMENT;
    }
    public static int RPC_C_CANCEL_INFINITE_TIMEOUT() {
        return (int)-1L;
    }
    public static int RPC_C_PROTECT_LEVEL_DEFAULT() {
        return (int)0L;
    }
    public static int RPC_C_PROTECT_LEVEL_NONE() {
        return (int)1L;
    }
    public static int RPC_C_PROTECT_LEVEL_CONNECT() {
        return (int)2L;
    }
    public static int RPC_C_PROTECT_LEVEL_CALL() {
        return (int)3L;
    }
    public static int RPC_C_PROTECT_LEVEL_PKT() {
        return (int)4L;
    }
    public static int RPC_C_PROTECT_LEVEL_PKT_INTEGRITY() {
        return (int)5L;
    }
    public static int RPC_C_PROTECT_LEVEL_PKT_PRIVACY() {
        return (int)6L;
    }
    public static int RPC_C_AUTHN_DEFAULT() {
        return (int)4294967295L;
    }
    public static MemoryAddress RPC_C_NO_CREDENTIALS() {
        return constants$1437.RPC_C_NO_CREDENTIALS$ADDR;
    }
    public static int RPC_C_SECURITY_QOS_VERSION() {
        return (int)1L;
    }
    public static int RPC_C_SECURITY_QOS_VERSION_1() {
        return (int)1L;
    }
    public static int RPC_C_SECURITY_QOS_VERSION_2() {
        return (int)2L;
    }
    public static int RPC_C_SECURITY_QOS_VERSION_3() {
        return (int)3L;
    }
    public static int RPC_C_SECURITY_QOS_VERSION_4() {
        return (int)4L;
    }
    public static int RPC_C_SECURITY_QOS_VERSION_5() {
        return (int)5L;
    }
    public static int RPC_PROTSEQ_TCP() {
        return (int)1L;
    }
    public static int RPC_PROTSEQ_NMP() {
        return (int)2L;
    }
    public static int RPC_PROTSEQ_LRPC() {
        return (int)3L;
    }
    public static int RPC_PROTSEQ_HTTP() {
        return (int)4L;
    }
    public static int RPC_BHT_OBJECT_UUID_VALID() {
        return (int)1L;
    }
    public static int RPC_BHO_NONCAUSAL() {
        return (int)1L;
    }
    public static int RPC_BHO_DONTLINGER() {
        return (int)2L;
    }
    public static int RPC_BHO_EXCLUSIVE_AND_GUARANTEED() {
        return (int)4L;
    }
    public static int RPC_C_AUTHZ_DEFAULT() {
        return (int)4294967295L;
    }
    public static MemoryAddress RPC_CONTEXT_HANDLE_DEFAULT_GUARD() {
        return constants$1437.RPC_CONTEXT_HANDLE_DEFAULT_GUARD$ADDR;
    }
    public static int RPC_CONTEXT_HANDLE_DEFAULT_FLAGS() {
        return (int)0L;
    }
    public static int RPC_CONTEXT_HANDLE_FLAGS() {
        return (int)805306368L;
    }
    public static int RPC_CONTEXT_HANDLE_SERIALIZE() {
        return (int)268435456L;
    }
    public static int RPC_CONTEXT_HANDLE_DONT_SERIALIZE() {
        return (int)536870912L;
    }
    public static int RPC_TYPE_STRICT_CONTEXT_HANDLE() {
        return (int)1073741824L;
    }
    public static int RPC_TYPE_DISCONNECT_EVENT_CONTEXT_HANDLE() {
        return (int)2147483648L;
    }
    public static int RPCFLG_HAS_GUARANTEE() {
        return (int)16L;
    }
    public static int RPCFLG_WINRT_REMOTE_ASYNC() {
        return (int)32L;
    }
    public static int RPCFLG_MESSAGE() {
        return (int)16777216L;
    }
    public static int RPCFLG_AUTO_COMPLETE() {
        return (int)134217728L;
    }
    public static int RPCFLG_LOCAL_CALL() {
        return (int)268435456L;
    }
    public static int RPCFLG_INPUT_SYNCHRONOUS() {
        return (int)536870912L;
    }
    public static int RPCFLG_ASYNCHRONOUS() {
        return (int)1073741824L;
    }
    public static int RPCFLG_NON_NDR() {
        return (int)2147483648L;
    }
    public static int RPCFLG_HAS_MULTI_SYNTAXES() {
        return (int)33554432L;
    }
    public static int RPCFLG_HAS_CALLBACK() {
        return (int)67108864L;
    }
    public static int RPCFLG_ACCESSIBILITY_BIT1() {
        return (int)1048576L;
    }
    public static int RPCFLG_ACCESSIBILITY_BIT2() {
        return (int)2097152L;
    }
    public static int RPCFLG_ACCESS_LOCAL() {
        return (int)4194304L;
    }
    public static int NDR_CUSTOM_OR_DEFAULT_ALLOCATOR() {
        return (int)268435456L;
    }
    public static int NDR_DEFAULT_ALLOCATOR() {
        return (int)536870912L;
    }
    public static int RPCFLG_NDR64_CONTAINS_ARM_LAYOUT() {
        return (int)67108864L;
    }
    public static int RPCFLG_SENDER_WAITING_FOR_REPLY() {
        return (int)8388608L;
    }
    public static int RPC_C_OPT_SESSION_ID() {
        return (int)6L;
    }
    public static int RPC_C_OPT_COOKIE_AUTH() {
        return (int)7L;
    }
    public static int RPC_C_OPT_RESOURCE_TYPE_UUID() {
        return (int)8L;
    }
    public static MemoryAddress I_RRPCUNINITIALIZENDROLE_EXPORT_NAME() {
        return constants$1437.I_RRPCUNINITIALIZENDROLE_EXPORT_NAME$ADDR;
    }
    public static int RPC_C_PROFILE_ALL_ELTS() {
        return (int)1L;
    }
    public static int RPC_C_NS_DEFAULT_EXP_AGE() {
        return (int)-1L;
    }
    public static int RPC_S_OK() {
        return (int)0L;
    }
    public static int RPC_S_INVALID_ARG() {
        return (int)87L;
    }
    public static int RPC_S_OUT_OF_MEMORY() {
        return (int)14L;
    }
    public static int RPC_S_OUT_OF_THREADS() {
        return (int)164L;
    }
    public static int RPC_S_INVALID_LEVEL() {
        return (int)87L;
    }
    public static int RPC_S_BUFFER_TOO_SMALL() {
        return (int)122L;
    }
    public static int RPC_S_INVALID_SECURITY_DESC() {
        return (int)1338L;
    }
    public static int RPC_S_ACCESS_DENIED() {
        return (int)5L;
    }
    public static int RPC_S_SERVER_OUT_OF_MEMORY() {
        return (int)1130L;
    }
    public static int RPC_S_ASYNC_CALL_PENDING() {
        return (int)997L;
    }
    public static int RPC_S_UNKNOWN_PRINCIPAL() {
        return (int)1332L;
    }
    public static int RPC_S_TIMEOUT() {
        return (int)1460L;
    }
    public static int RPC_S_NOT_ENOUGH_QUOTA() {
        return (int)1816L;
    }
    public static int RPC_X_NO_MEMORY() {
        return (int)14L;
    }
    public static int RPC_X_INVALID_BOUND() {
        return (int)1734L;
    }
    public static int RPC_X_INVALID_TAG() {
        return (int)1733L;
    }
    public static int RPC_X_ENUM_VALUE_TOO_LARGE() {
        return (int)1781L;
    }
    public static int RPC_X_SS_CONTEXT_MISMATCH() {
        return (int)6L;
    }
    public static int RPC_X_INVALID_BUFFER() {
        return (int)1784L;
    }
    public static int RPC_X_PIPE_APP_MEMORY() {
        return (int)14L;
    }
    public static int RPC_X_INVALID_PIPE_OPERATION() {
        return (int)1831L;
    }
    public static long RPC_ASYNC_VERSION_1_0() {
        return 112L;
    }
    public static int RPC_C_INFINITE_TIMEOUT() {
        return (int)4294967295L;
    }
    public static int RPC_QUERY_SERVER_PRINCIPAL_NAME() {
        return (int)2L;
    }
    public static int RPC_QUERY_CLIENT_PRINCIPAL_NAME() {
        return (int)4L;
    }
    public static int RPC_QUERY_CALL_LOCAL_ADDRESS() {
        return (int)8L;
    }
    public static int RPC_QUERY_CLIENT_PID() {
        return (int)16L;
    }
    public static int RPC_QUERY_IS_CLIENT_LOCAL() {
        return (int)32L;
    }
    public static int RPC_QUERY_NO_AUTH_REQUIRED() {
        return (int)64L;
    }
    public static int RPC_CALL_ATTRIBUTES_VERSION() {
        return (int)3L;
    }
    public static int RPC_QUERY_CLIENT_ID() {
        return (int)128L;
    }
    public static int RpcNotificationCallStatusChange() {
        return (int)1L;
    }
    public static int FOF_NO_UI() {
        return (int)1556L;
    }
    public static int SEE_MASK_FLAG_DDEWAIT() {
        return (int)256L;
    }
    public static int NOTIFYICONDATAA_V1_SIZE() {
        return (int)104L;
    }
    public static int NOTIFYICONDATAW_V1_SIZE() {
        return (int)168L;
    }
    public static int NOTIFYICONDATA_V1_SIZE() {
        return (int)104L;
    }
    public static int NOTIFYICONDATAA_V2_SIZE() {
        return (int)504L;
    }
    public static int NOTIFYICONDATAW_V2_SIZE() {
        return (int)952L;
    }
    public static int NOTIFYICONDATA_V2_SIZE() {
        return (int)504L;
    }
    public static int NOTIFYICONDATAA_V3_SIZE() {
        return (int)520L;
    }
    public static int NOTIFYICONDATAW_V3_SIZE() {
        return (int)968L;
    }
    public static int NOTIFYICONDATA_V3_SIZE() {
        return (int)520L;
    }
    public static int NIN_SELECT() {
        return (int)1024L;
    }
    public static int NIN_KEYSELECT() {
        return (int)1025L;
    }
    public static int NIN_BALLOONSHOW() {
        return (int)1026L;
    }
    public static int NIN_BALLOONHIDE() {
        return (int)1027L;
    }
    public static int NIN_BALLOONTIMEOUT() {
        return (int)1028L;
    }
    public static int NIN_BALLOONUSERCLICK() {
        return (int)1029L;
    }
    public static int NIN_POPUPOPEN() {
        return (int)1030L;
    }
    public static int NIN_POPUPCLOSE() {
        return (int)1031L;
    }
    public static int SHGSI_ICON() {
        return (int)256L;
    }
    public static int SHGSI_SYSICONINDEX() {
        return (int)16384L;
    }
    public static int SHGSI_LINKOVERLAY() {
        return (int)32768L;
    }
    public static int SHGSI_SELECTED() {
        return (int)65536L;
    }
    public static int SHGSI_LARGEICON() {
        return (int)0L;
    }
    public static int SHGSI_SMALLICON() {
        return (int)1L;
    }
    public static int SHGSI_SHELLICONSIZE() {
        return (int)4L;
    }
    public static int SIID_INVALID() {
        return (int)-1L;
    }
    public static int SHIL_LAST() {
        return (int)4L;
    }
    public static MemorySegment WC_NETADDRESS() {
        return constants$1437.WC_NETADDRESS$SEGMENT;
    }
    public static int NCM_GETADDRESS() {
        return (int)1025L;
    }
    public static int NCM_SETALLOWTYPE() {
        return (int)1026L;
    }
    public static int NCM_GETALLOWTYPE() {
        return (int)1027L;
    }
    public static int NCM_DISPLAYERRORTIP() {
        return (int)1028L;
    }
    public static int PERF_NO_INSTANCES() {
        return (int)-1L;
    }
    public static int PERF_COUNTER_COUNTER() {
        return (int)272696320L;
    }
    public static int PERF_COUNTER_TIMER() {
        return (int)541132032L;
    }
    public static int PERF_COUNTER_QUEUELEN_TYPE() {
        return (int)4523008L;
    }
    public static int PERF_COUNTER_LARGE_QUEUELEN_TYPE() {
        return (int)4523264L;
    }
    public static int PERF_COUNTER_100NS_QUEUELEN_TYPE() {
        return (int)5571840L;
    }
    public static int PERF_COUNTER_OBJ_TIME_QUEUELEN_TYPE() {
        return (int)6620416L;
    }
    public static int PERF_COUNTER_BULK_COUNT() {
        return (int)272696576L;
    }
    public static int PERF_COUNTER_TEXT() {
        return (int)2816L;
    }
    public static int PERF_COUNTER_RAWCOUNT() {
        return (int)65536L;
    }
    public static int PERF_COUNTER_LARGE_RAWCOUNT() {
        return (int)65792L;
    }
    public static int PERF_COUNTER_RAWCOUNT_HEX() {
        return (int)0L;
    }
    public static int PERF_COUNTER_LARGE_RAWCOUNT_HEX() {
        return (int)256L;
    }
    public static int PERF_SAMPLE_FRACTION() {
        return (int)549585920L;
    }
    public static int PERF_SAMPLE_COUNTER() {
        return (int)4260864L;
    }
    public static int PERF_COUNTER_NODATA() {
        return (int)1073742336L;
    }
    public static int PERF_COUNTER_TIMER_INV() {
        return (int)557909248L;
    }
    public static int PERF_SAMPLE_BASE() {
        return (int)1073939457L;
    }
    public static int PERF_AVERAGE_TIMER() {
        return (int)805438464L;
    }
    public static int PERF_AVERAGE_BASE() {
        return (int)1073939458L;
    }
    public static int PERF_AVERAGE_BULK() {
        return (int)1073874176L;
    }
    public static int PERF_OBJ_TIME_TIMER() {
        return (int)543229184L;
    }
    public static int PERF_100NSEC_TIMER() {
        return (int)542180608L;
    }
    public static int PERF_100NSEC_TIMER_INV() {
        return (int)558957824L;
    }
    public static int PERF_COUNTER_MULTI_TIMER() {
        return (int)574686464L;
    }
    public static int PERF_COUNTER_MULTI_TIMER_INV() {
        return (int)591463680L;
    }
    public static int PERF_COUNTER_MULTI_BASE() {
        return (int)1107494144L;
    }
    public static int PERF_100NSEC_MULTI_TIMER() {
        return (int)575735040L;
    }
    public static int PERF_100NSEC_MULTI_TIMER_INV() {
        return (int)592512256L;
    }
    public static int PERF_RAW_FRACTION() {
        return (int)537003008L;
    }
    public static int PERF_LARGE_RAW_FRACTION() {
        return (int)537003264L;
    }
    public static int PERF_RAW_BASE() {
        return (int)1073939459L;
    }
    public static int PERF_LARGE_RAW_BASE() {
        return (int)1073939712L;
    }
    public static int PERF_ELAPSED_TIME() {
        return (int)807666944L;
    }
    public static int PERF_COUNTER_HISTOGRAM_TYPE() {
        return (int)2147483648L;
    }
    public static int PERF_COUNTER_DELTA() {
        return (int)4195328L;
    }
    public static int PERF_COUNTER_LARGE_DELTA() {
        return (int)4195584L;
    }
    public static int PERF_PRECISION_SYSTEM_TIMER() {
        return (int)541525248L;
    }
    public static int PERF_PRECISION_100NS_TIMER() {
        return (int)542573824L;
    }
    public static int PERF_PRECISION_OBJECT_TIMER() {
        return (int)543622400L;
    }
    public static int PERF_PRECISION_TIMESTAMP() {
        return (int)1073939712L;
    }
    public static int PERF_NO_UNIQUE_ID() {
        return (int)-1L;
    }
    public static int PERF_QUERY_OBJECTS() {
        return (int)-2147483648L;
    }
    public static int PERF_QUERY_GLOBAL() {
        return (int)-2147483647L;
    }
    public static int PERF_QUERY_COSTLY() {
        return (int)-2147483646L;
    }
    public static int MAX_PERF_OBJECTS_IN_QUERY_FUNCTION() {
        return (int)64L;
    }
    public static int ALG_CLASS_ANY() {
        return (int)0L;
    }
    public static int ALG_CLASS_SIGNATURE() {
        return (int)8192L;
    }
    public static int ALG_CLASS_MSG_ENCRYPT() {
        return (int)16384L;
    }
    public static int ALG_CLASS_DATA_ENCRYPT() {
        return (int)24576L;
    }
    public static int ALG_CLASS_HASH() {
        return (int)32768L;
    }
    public static int ALG_CLASS_KEY_EXCHANGE() {
        return (int)40960L;
    }
    public static int ALG_CLASS_ALL() {
        return (int)57344L;
    }
    public static int ALG_TYPE_ANY() {
        return (int)0L;
    }
    public static int ALG_TYPE_DSS() {
        return (int)512L;
    }
    public static int ALG_TYPE_RSA() {
        return (int)1024L;
    }
    public static int ALG_TYPE_BLOCK() {
        return (int)1536L;
    }
    public static int ALG_TYPE_STREAM() {
        return (int)2048L;
    }
    public static int ALG_TYPE_DH() {
        return (int)2560L;
    }
    public static int ALG_TYPE_SECURECHANNEL() {
        return (int)3072L;
    }
    public static int ALG_TYPE_ECDH() {
        return (int)3584L;
    }
    public static int ALG_TYPE_THIRDPARTY() {
        return (int)4096L;
    }
    public static int ALG_SID_ANY() {
        return (int)0L;
    }
    public static int ALG_SID_THIRDPARTY_ANY() {
        return (int)0L;
    }
    public static int CALG_MD2() {
        return (int)32769L;
    }
    public static int CALG_MD4() {
        return (int)32770L;
    }
    public static int CALG_MD5() {
        return (int)32771L;
    }
    public static int CALG_SHA() {
        return (int)32772L;
    }
    public static int CALG_SHA1() {
        return (int)32772L;
    }
    public static int CALG_MAC() {
        return (int)32773L;
    }
    public static int CALG_RSA_SIGN() {
        return (int)9216L;
    }
    public static int CALG_DSS_SIGN() {
        return (int)8704L;
    }
    public static int CALG_NO_SIGN() {
        return (int)8192L;
    }
    public static int CALG_RSA_KEYX() {
        return (int)41984L;
    }
    public static int CALG_DES() {
        return (int)26113L;
    }
    public static int CALG_3DES_112() {
        return (int)26121L;
    }
    public static int CALG_3DES() {
        return (int)26115L;
    }
    public static int CALG_DESX() {
        return (int)26116L;
    }
    public static int CALG_RC2() {
        return (int)26114L;
    }
    public static int CALG_RC4() {
        return (int)26625L;
    }
    public static int CALG_SEAL() {
        return (int)26626L;
    }
    public static int CALG_DH_SF() {
        return (int)43521L;
    }
    public static int CALG_DH_EPHEM() {
        return (int)43522L;
    }
    public static int CALG_AGREEDKEY_ANY() {
        return (int)43523L;
    }
    public static int CALG_KEA_KEYX() {
        return (int)43524L;
    }
    public static int CALG_HUGHES_MD5() {
        return (int)40963L;
    }
    public static int CALG_SKIPJACK() {
        return (int)26122L;
    }
    public static int CALG_TEK() {
        return (int)26123L;
    }
    public static int CALG_CYLINK_MEK() {
        return (int)26124L;
    }
    public static int CALG_SSL3_SHAMD5() {
        return (int)32776L;
    }
    public static int CALG_SSL3_MASTER() {
        return (int)19457L;
    }
    public static int CALG_SCHANNEL_MASTER_HASH() {
        return (int)19458L;
    }
    public static int CALG_SCHANNEL_MAC_KEY() {
        return (int)19459L;
    }
    public static int CALG_SCHANNEL_ENC_KEY() {
        return (int)19463L;
    }
    public static int CALG_PCT1_MASTER() {
        return (int)19460L;
    }
    public static int CALG_SSL2_MASTER() {
        return (int)19461L;
    }
    public static int CALG_TLS1_MASTER() {
        return (int)19462L;
    }
    public static int CALG_RC5() {
        return (int)26125L;
    }
    public static int CALG_HMAC() {
        return (int)32777L;
    }
    public static int CALG_TLS1PRF() {
        return (int)32778L;
    }
    public static int CALG_HASH_REPLACE_OWF() {
        return (int)32779L;
    }
    public static int CALG_AES_128() {
        return (int)26126L;
    }
    public static int CALG_AES_192() {
        return (int)26127L;
    }
    public static int CALG_AES_256() {
        return (int)26128L;
    }
    public static int CALG_AES() {
        return (int)26129L;
    }
    public static int CALG_SHA_256() {
        return (int)32780L;
    }
    public static int CALG_SHA_384() {
        return (int)32781L;
    }
    public static int CALG_SHA_512() {
        return (int)32782L;
    }
    public static int CALG_ECDH() {
        return (int)43525L;
    }
    public static int CALG_ECDH_EPHEM() {
        return (int)44550L;
    }
    public static int CALG_ECMQV() {
        return (int)40961L;
    }
    public static int CALG_ECDSA() {
        return (int)8707L;
    }
    public static int CALG_NULLCIPHER() {
        return (int)24576L;
    }
    public static int CALG_THIRDPARTY_KEY_EXCHANGE() {
        return (int)45056L;
    }
    public static int CALG_THIRDPARTY_SIGNATURE() {
        return (int)12288L;
    }
    public static int CALG_THIRDPARTY_CIPHER() {
        return (int)28672L;
    }
    public static int CALG_THIRDPARTY_HASH() {
        return (int)36864L;
    }
    public static int CRYPT_VERIFYCONTEXT() {
        return (int)4026531840L;
    }
    public static int KEY_LENGTH_MASK() {
        return (int)4294901760L;
    }
    public static int CRYPT_FAILED() {
        return (int)0L;
    }
    public static int CRYPT_SUCCEED() {
        return (int)1L;
    }
    public static MemorySegment MS_DEF_PROV_A() {
        return constants$1438.MS_DEF_PROV_A$SEGMENT;
    }
    public static MemorySegment MS_DEF_PROV_W() {
        return constants$1438.MS_DEF_PROV_W$SEGMENT;
    }
    public static MemorySegment MS_DEF_PROV() {
        return constants$1438.MS_DEF_PROV$SEGMENT;
    }
    public static MemorySegment MS_ENHANCED_PROV_A() {
        return constants$1438.MS_ENHANCED_PROV_A$SEGMENT;
    }
    public static MemorySegment MS_ENHANCED_PROV_W() {
        return constants$1438.MS_ENHANCED_PROV_W$SEGMENT;
    }
    public static MemorySegment MS_ENHANCED_PROV() {
        return constants$1438.MS_ENHANCED_PROV$SEGMENT;
    }
    public static MemorySegment MS_STRONG_PROV_A() {
        return constants$1439.MS_STRONG_PROV_A$SEGMENT;
    }
    public static MemorySegment MS_STRONG_PROV_W() {
        return constants$1439.MS_STRONG_PROV_W$SEGMENT;
    }
    public static MemorySegment MS_STRONG_PROV() {
        return constants$1439.MS_STRONG_PROV$SEGMENT;
    }
    public static MemorySegment MS_DEF_RSA_SIG_PROV_A() {
        return constants$1439.MS_DEF_RSA_SIG_PROV_A$SEGMENT;
    }
    public static MemorySegment MS_DEF_RSA_SIG_PROV_W() {
        return constants$1439.MS_DEF_RSA_SIG_PROV_W$SEGMENT;
    }
    public static MemorySegment MS_DEF_RSA_SIG_PROV() {
        return constants$1439.MS_DEF_RSA_SIG_PROV$SEGMENT;
    }
    public static MemorySegment MS_DEF_RSA_SCHANNEL_PROV_A() {
        return constants$1440.MS_DEF_RSA_SCHANNEL_PROV_A$SEGMENT;
    }
    public static MemorySegment MS_DEF_RSA_SCHANNEL_PROV_W() {
        return constants$1440.MS_DEF_RSA_SCHANNEL_PROV_W$SEGMENT;
    }
    public static MemorySegment MS_DEF_RSA_SCHANNEL_PROV() {
        return constants$1440.MS_DEF_RSA_SCHANNEL_PROV$SEGMENT;
    }
    public static MemorySegment MS_DEF_DSS_PROV_A() {
        return constants$1440.MS_DEF_DSS_PROV_A$SEGMENT;
    }
    public static MemorySegment MS_DEF_DSS_PROV_W() {
        return constants$1440.MS_DEF_DSS_PROV_W$SEGMENT;
    }
    public static MemorySegment MS_DEF_DSS_PROV() {
        return constants$1440.MS_DEF_DSS_PROV$SEGMENT;
    }
    public static MemorySegment MS_DEF_DSS_DH_PROV_A() {
        return constants$1441.MS_DEF_DSS_DH_PROV_A$SEGMENT;
    }
    public static MemorySegment MS_DEF_DSS_DH_PROV_W() {
        return constants$1441.MS_DEF_DSS_DH_PROV_W$SEGMENT;
    }
    public static MemorySegment MS_DEF_DSS_DH_PROV() {
        return constants$1441.MS_DEF_DSS_DH_PROV$SEGMENT;
    }
    public static MemorySegment MS_ENH_DSS_DH_PROV_A() {
        return constants$1441.MS_ENH_DSS_DH_PROV_A$SEGMENT;
    }
    public static MemorySegment MS_ENH_DSS_DH_PROV_W() {
        return constants$1441.MS_ENH_DSS_DH_PROV_W$SEGMENT;
    }
    public static MemorySegment MS_ENH_DSS_DH_PROV() {
        return constants$1441.MS_ENH_DSS_DH_PROV$SEGMENT;
    }
    public static MemorySegment MS_DEF_DH_SCHANNEL_PROV_A() {
        return constants$1442.MS_DEF_DH_SCHANNEL_PROV_A$SEGMENT;
    }
    public static MemorySegment MS_DEF_DH_SCHANNEL_PROV_W() {
        return constants$1442.MS_DEF_DH_SCHANNEL_PROV_W$SEGMENT;
    }
    public static MemorySegment MS_DEF_DH_SCHANNEL_PROV() {
        return constants$1442.MS_DEF_DH_SCHANNEL_PROV$SEGMENT;
    }
    public static MemorySegment MS_SCARD_PROV_A() {
        return constants$1442.MS_SCARD_PROV_A$SEGMENT;
    }
    public static MemorySegment MS_SCARD_PROV_W() {
        return constants$1442.MS_SCARD_PROV_W$SEGMENT;
    }
    public static MemorySegment MS_SCARD_PROV() {
        return constants$1442.MS_SCARD_PROV$SEGMENT;
    }
    public static MemorySegment MS_ENH_RSA_AES_PROV_A() {
        return constants$1443.MS_ENH_RSA_AES_PROV_A$SEGMENT;
    }
    public static MemorySegment MS_ENH_RSA_AES_PROV_W() {
        return constants$1443.MS_ENH_RSA_AES_PROV_W$SEGMENT;
    }
    public static MemorySegment MS_ENH_RSA_AES_PROV_XP_A() {
        return constants$1443.MS_ENH_RSA_AES_PROV_XP_A$SEGMENT;
    }
    public static MemorySegment MS_ENH_RSA_AES_PROV_XP_W() {
        return constants$1443.MS_ENH_RSA_AES_PROV_XP_W$SEGMENT;
    }
    public static MemorySegment MS_ENH_RSA_AES_PROV_XP() {
        return constants$1443.MS_ENH_RSA_AES_PROV_XP$SEGMENT;
    }
    public static MemorySegment MS_ENH_RSA_AES_PROV() {
        return constants$1443.MS_ENH_RSA_AES_PROV$SEGMENT;
    }
    public static MemorySegment EXPO_OFFLOAD_REG_VALUE() {
        return constants$1444.EXPO_OFFLOAD_REG_VALUE$SEGMENT;
    }
    public static MemorySegment EXPO_OFFLOAD_FUNC_NAME() {
        return constants$1444.EXPO_OFFLOAD_FUNC_NAME$SEGMENT;
    }
    public static MemorySegment szKEY_CRYPTOAPI_PRIVATE_KEY_OPTIONS() {
        return constants$1444.szKEY_CRYPTOAPI_PRIVATE_KEY_OPTIONS$SEGMENT;
    }
    public static MemorySegment szKEY_CACHE_ENABLED() {
        return constants$1444.szKEY_CACHE_ENABLED$SEGMENT;
    }
    public static MemorySegment szKEY_CACHE_SECONDS() {
        return constants$1444.szKEY_CACHE_SECONDS$SEGMENT;
    }
    public static MemorySegment szPRIV_KEY_CACHE_MAX_ITEMS() {
        return constants$1444.szPRIV_KEY_CACHE_MAX_ITEMS$SEGMENT;
    }
    public static MemorySegment szPRIV_KEY_CACHE_PURGE_INTERVAL_SECONDS() {
        return constants$1445.szPRIV_KEY_CACHE_PURGE_INTERVAL_SECONDS$SEGMENT;
    }
    public static MemorySegment BCRYPT_KDF_HASH() {
        return constants$1445.BCRYPT_KDF_HASH$SEGMENT;
    }
    public static MemorySegment BCRYPT_KDF_HMAC() {
        return constants$1445.BCRYPT_KDF_HMAC$SEGMENT;
    }
    public static MemorySegment BCRYPT_KDF_TLS_PRF() {
        return constants$1445.BCRYPT_KDF_TLS_PRF$SEGMENT;
    }
    public static MemorySegment BCRYPT_KDF_SP80056A_CONCAT() {
        return constants$1445.BCRYPT_KDF_SP80056A_CONCAT$SEGMENT;
    }
    public static MemorySegment BCRYPT_KDF_RAW_SECRET() {
        return constants$1445.BCRYPT_KDF_RAW_SECRET$SEGMENT;
    }
    public static MemorySegment BCRYPT_KDF_HKDF() {
        return constants$1446.BCRYPT_KDF_HKDF$SEGMENT;
    }
    public static MemorySegment BCRYPT_OPAQUE_KEY_BLOB() {
        return constants$1446.BCRYPT_OPAQUE_KEY_BLOB$SEGMENT;
    }
    public static MemorySegment BCRYPT_KEY_DATA_BLOB() {
        return constants$1446.BCRYPT_KEY_DATA_BLOB$SEGMENT;
    }
    public static MemorySegment BCRYPT_AES_WRAP_KEY_BLOB() {
        return constants$1446.BCRYPT_AES_WRAP_KEY_BLOB$SEGMENT;
    }
    public static MemorySegment BCRYPT_OBJECT_LENGTH() {
        return constants$1446.BCRYPT_OBJECT_LENGTH$SEGMENT;
    }
    public static MemorySegment BCRYPT_ALGORITHM_NAME() {
        return constants$1446.BCRYPT_ALGORITHM_NAME$SEGMENT;
    }
    public static MemorySegment BCRYPT_PROVIDER_HANDLE() {
        return constants$1447.BCRYPT_PROVIDER_HANDLE$SEGMENT;
    }
    public static MemorySegment BCRYPT_CHAINING_MODE() {
        return constants$1447.BCRYPT_CHAINING_MODE$SEGMENT;
    }
    public static MemorySegment BCRYPT_BLOCK_LENGTH() {
        return constants$1447.BCRYPT_BLOCK_LENGTH$SEGMENT;
    }
    public static MemorySegment BCRYPT_KEY_LENGTH() {
        return constants$1447.BCRYPT_KEY_LENGTH$SEGMENT;
    }
    public static MemorySegment BCRYPT_KEY_OBJECT_LENGTH() {
        return constants$1447.BCRYPT_KEY_OBJECT_LENGTH$SEGMENT;
    }
    public static MemorySegment BCRYPT_KEY_STRENGTH() {
        return constants$1447.BCRYPT_KEY_STRENGTH$SEGMENT;
    }
    public static MemorySegment BCRYPT_KEY_LENGTHS() {
        return constants$1448.BCRYPT_KEY_LENGTHS$SEGMENT;
    }
    public static MemorySegment BCRYPT_BLOCK_SIZE_LIST() {
        return constants$1448.BCRYPT_BLOCK_SIZE_LIST$SEGMENT;
    }
    public static MemorySegment BCRYPT_EFFECTIVE_KEY_LENGTH() {
        return constants$1448.BCRYPT_EFFECTIVE_KEY_LENGTH$SEGMENT;
    }
    public static MemorySegment BCRYPT_HASH_LENGTH() {
        return constants$1448.BCRYPT_HASH_LENGTH$SEGMENT;
    }
    public static MemorySegment BCRYPT_HASH_OID_LIST() {
        return constants$1448.BCRYPT_HASH_OID_LIST$SEGMENT;
    }
    public static MemorySegment BCRYPT_PADDING_SCHEMES() {
        return constants$1448.BCRYPT_PADDING_SCHEMES$SEGMENT;
    }
    public static MemorySegment BCRYPT_SIGNATURE_LENGTH() {
        return constants$1449.BCRYPT_SIGNATURE_LENGTH$SEGMENT;
    }
    public static MemorySegment BCRYPT_HASH_BLOCK_LENGTH() {
        return constants$1449.BCRYPT_HASH_BLOCK_LENGTH$SEGMENT;
    }
    public static MemorySegment BCRYPT_AUTH_TAG_LENGTH() {
        return constants$1449.BCRYPT_AUTH_TAG_LENGTH$SEGMENT;
    }
    public static MemorySegment BCRYPT_PRIMITIVE_TYPE() {
        return constants$1449.BCRYPT_PRIMITIVE_TYPE$SEGMENT;
    }
    public static MemorySegment BCRYPT_IS_KEYED_HASH() {
        return constants$1449.BCRYPT_IS_KEYED_HASH$SEGMENT;
    }
    public static MemorySegment BCRYPT_IS_REUSABLE_HASH() {
        return constants$1449.BCRYPT_IS_REUSABLE_HASH$SEGMENT;
    }
    public static MemorySegment BCRYPT_MESSAGE_BLOCK_LENGTH() {
        return constants$1450.BCRYPT_MESSAGE_BLOCK_LENGTH$SEGMENT;
    }
    public static MemorySegment BCRYPT_PUBLIC_KEY_LENGTH() {
        return constants$1450.BCRYPT_PUBLIC_KEY_LENGTH$SEGMENT;
    }
    public static MemorySegment BCRYPT_PCP_PLATFORM_TYPE_PROPERTY() {
        return constants$1450.BCRYPT_PCP_PLATFORM_TYPE_PROPERTY$SEGMENT;
    }
    public static MemorySegment BCRYPT_PCP_PROVIDER_VERSION_PROPERTY() {
        return constants$1450.BCRYPT_PCP_PROVIDER_VERSION_PROPERTY$SEGMENT;
    }
    public static MemorySegment BCRYPT_MULTI_OBJECT_LENGTH() {
        return constants$1450.BCRYPT_MULTI_OBJECT_LENGTH$SEGMENT;
    }
    public static MemorySegment BCRYPT_IS_IFX_TPM_WEAK_KEY() {
        return constants$1450.BCRYPT_IS_IFX_TPM_WEAK_KEY$SEGMENT;
    }
    public static MemorySegment BCRYPT_HKDF_HASH_ALGORITHM() {
        return constants$1451.BCRYPT_HKDF_HASH_ALGORITHM$SEGMENT;
    }
    public static MemorySegment BCRYPT_HKDF_SALT_AND_FINALIZE() {
        return constants$1451.BCRYPT_HKDF_SALT_AND_FINALIZE$SEGMENT;
    }
    public static MemorySegment BCRYPT_HKDF_PRK_AND_FINALIZE() {
        return constants$1451.BCRYPT_HKDF_PRK_AND_FINALIZE$SEGMENT;
    }
    public static MemorySegment BCRYPT_INITIALIZATION_VECTOR() {
        return constants$1451.BCRYPT_INITIALIZATION_VECTOR$SEGMENT;
    }
    public static MemorySegment BCRYPT_CHAIN_MODE_NA() {
        return constants$1451.BCRYPT_CHAIN_MODE_NA$SEGMENT;
    }
    public static MemorySegment BCRYPT_CHAIN_MODE_CBC() {
        return constants$1451.BCRYPT_CHAIN_MODE_CBC$SEGMENT;
    }
    public static MemorySegment BCRYPT_CHAIN_MODE_ECB() {
        return constants$1452.BCRYPT_CHAIN_MODE_ECB$SEGMENT;
    }
    public static MemorySegment BCRYPT_CHAIN_MODE_CFB() {
        return constants$1452.BCRYPT_CHAIN_MODE_CFB$SEGMENT;
    }
    public static MemorySegment BCRYPT_CHAIN_MODE_CCM() {
        return constants$1452.BCRYPT_CHAIN_MODE_CCM$SEGMENT;
    }
    public static MemorySegment BCRYPT_CHAIN_MODE_GCM() {
        return constants$1452.BCRYPT_CHAIN_MODE_GCM$SEGMENT;
    }
    public static MemorySegment BCRYPT_PUBLIC_KEY_BLOB() {
        return constants$1452.BCRYPT_PUBLIC_KEY_BLOB$SEGMENT;
    }
    public static MemorySegment BCRYPT_PRIVATE_KEY_BLOB() {
        return constants$1452.BCRYPT_PRIVATE_KEY_BLOB$SEGMENT;
    }
    public static MemorySegment BCRYPT_RSAPUBLIC_BLOB() {
        return constants$1453.BCRYPT_RSAPUBLIC_BLOB$SEGMENT;
    }
    public static MemorySegment BCRYPT_RSAPRIVATE_BLOB() {
        return constants$1453.BCRYPT_RSAPRIVATE_BLOB$SEGMENT;
    }
    public static MemorySegment LEGACY_RSAPUBLIC_BLOB() {
        return constants$1453.LEGACY_RSAPUBLIC_BLOB$SEGMENT;
    }
    public static MemorySegment LEGACY_RSAPRIVATE_BLOB() {
        return constants$1453.LEGACY_RSAPRIVATE_BLOB$SEGMENT;
    }
    public static MemorySegment BCRYPT_RSAFULLPRIVATE_BLOB() {
        return constants$1453.BCRYPT_RSAFULLPRIVATE_BLOB$SEGMENT;
    }
    public static MemorySegment BCRYPT_GLOBAL_PARAMETERS() {
        return constants$1453.BCRYPT_GLOBAL_PARAMETERS$SEGMENT;
    }
    public static MemorySegment BCRYPT_PRIVATE_KEY() {
        return constants$1454.BCRYPT_PRIVATE_KEY$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECCPUBLIC_BLOB() {
        return constants$1454.BCRYPT_ECCPUBLIC_BLOB$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECCPRIVATE_BLOB() {
        return constants$1454.BCRYPT_ECCPRIVATE_BLOB$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECCFULLPUBLIC_BLOB() {
        return constants$1454.BCRYPT_ECCFULLPUBLIC_BLOB$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECCFULLPRIVATE_BLOB() {
        return constants$1454.BCRYPT_ECCFULLPRIVATE_BLOB$SEGMENT;
    }
    public static MemorySegment SSL_ECCPUBLIC_BLOB() {
        return constants$1454.SSL_ECCPUBLIC_BLOB$SEGMENT;
    }
    public static MemorySegment BCRYPT_DH_PUBLIC_BLOB() {
        return constants$1455.BCRYPT_DH_PUBLIC_BLOB$SEGMENT;
    }
    public static MemorySegment BCRYPT_DH_PRIVATE_BLOB() {
        return constants$1455.BCRYPT_DH_PRIVATE_BLOB$SEGMENT;
    }
    public static MemorySegment LEGACY_DH_PUBLIC_BLOB() {
        return constants$1455.LEGACY_DH_PUBLIC_BLOB$SEGMENT;
    }
    public static MemorySegment LEGACY_DH_PRIVATE_BLOB() {
        return constants$1455.LEGACY_DH_PRIVATE_BLOB$SEGMENT;
    }
    public static MemorySegment BCRYPT_DH_PARAMETERS() {
        return constants$1455.BCRYPT_DH_PARAMETERS$SEGMENT;
    }
    public static MemorySegment BCRYPT_DSA_PUBLIC_BLOB() {
        return constants$1455.BCRYPT_DSA_PUBLIC_BLOB$SEGMENT;
    }
    public static MemorySegment BCRYPT_DSA_PRIVATE_BLOB() {
        return constants$1456.BCRYPT_DSA_PRIVATE_BLOB$SEGMENT;
    }
    public static MemorySegment LEGACY_DSA_PUBLIC_BLOB() {
        return constants$1456.LEGACY_DSA_PUBLIC_BLOB$SEGMENT;
    }
    public static MemorySegment LEGACY_DSA_PRIVATE_BLOB() {
        return constants$1456.LEGACY_DSA_PRIVATE_BLOB$SEGMENT;
    }
    public static MemorySegment LEGACY_DSA_V2_PUBLIC_BLOB() {
        return constants$1456.LEGACY_DSA_V2_PUBLIC_BLOB$SEGMENT;
    }
    public static MemorySegment LEGACY_DSA_V2_PRIVATE_BLOB() {
        return constants$1456.LEGACY_DSA_V2_PRIVATE_BLOB$SEGMENT;
    }
    public static MemorySegment BCRYPT_DSA_PARAMETERS() {
        return constants$1456.BCRYPT_DSA_PARAMETERS$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_PARAMETERS() {
        return constants$1457.BCRYPT_ECC_PARAMETERS$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_NAME() {
        return constants$1457.BCRYPT_ECC_CURVE_NAME$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_NAME_LIST() {
        return constants$1457.BCRYPT_ECC_CURVE_NAME_LIST$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_BRAINPOOLP160R1() {
        return constants$1457.BCRYPT_ECC_CURVE_BRAINPOOLP160R1$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_BRAINPOOLP160T1() {
        return constants$1457.BCRYPT_ECC_CURVE_BRAINPOOLP160T1$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_BRAINPOOLP192R1() {
        return constants$1457.BCRYPT_ECC_CURVE_BRAINPOOLP192R1$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_BRAINPOOLP192T1() {
        return constants$1458.BCRYPT_ECC_CURVE_BRAINPOOLP192T1$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_BRAINPOOLP224R1() {
        return constants$1458.BCRYPT_ECC_CURVE_BRAINPOOLP224R1$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_BRAINPOOLP224T1() {
        return constants$1458.BCRYPT_ECC_CURVE_BRAINPOOLP224T1$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_BRAINPOOLP256R1() {
        return constants$1458.BCRYPT_ECC_CURVE_BRAINPOOLP256R1$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_BRAINPOOLP256T1() {
        return constants$1458.BCRYPT_ECC_CURVE_BRAINPOOLP256T1$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_BRAINPOOLP320R1() {
        return constants$1458.BCRYPT_ECC_CURVE_BRAINPOOLP320R1$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_BRAINPOOLP320T1() {
        return constants$1459.BCRYPT_ECC_CURVE_BRAINPOOLP320T1$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_BRAINPOOLP384R1() {
        return constants$1459.BCRYPT_ECC_CURVE_BRAINPOOLP384R1$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_BRAINPOOLP384T1() {
        return constants$1459.BCRYPT_ECC_CURVE_BRAINPOOLP384T1$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_BRAINPOOLP512R1() {
        return constants$1459.BCRYPT_ECC_CURVE_BRAINPOOLP512R1$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_BRAINPOOLP512T1() {
        return constants$1459.BCRYPT_ECC_CURVE_BRAINPOOLP512T1$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_25519() {
        return constants$1459.BCRYPT_ECC_CURVE_25519$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_EC192WAPI() {
        return constants$1460.BCRYPT_ECC_CURVE_EC192WAPI$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_NISTP192() {
        return constants$1460.BCRYPT_ECC_CURVE_NISTP192$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_NISTP224() {
        return constants$1460.BCRYPT_ECC_CURVE_NISTP224$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_NISTP256() {
        return constants$1460.BCRYPT_ECC_CURVE_NISTP256$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_NISTP384() {
        return constants$1460.BCRYPT_ECC_CURVE_NISTP384$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_NISTP521() {
        return constants$1460.BCRYPT_ECC_CURVE_NISTP521$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_NUMSP256T1() {
        return constants$1461.BCRYPT_ECC_CURVE_NUMSP256T1$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_NUMSP384T1() {
        return constants$1461.BCRYPT_ECC_CURVE_NUMSP384T1$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_NUMSP512T1() {
        return constants$1461.BCRYPT_ECC_CURVE_NUMSP512T1$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_SECP160K1() {
        return constants$1461.BCRYPT_ECC_CURVE_SECP160K1$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_SECP160R1() {
        return constants$1461.BCRYPT_ECC_CURVE_SECP160R1$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_SECP160R2() {
        return constants$1461.BCRYPT_ECC_CURVE_SECP160R2$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_SECP192K1() {
        return constants$1462.BCRYPT_ECC_CURVE_SECP192K1$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_SECP192R1() {
        return constants$1462.BCRYPT_ECC_CURVE_SECP192R1$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_SECP224K1() {
        return constants$1462.BCRYPT_ECC_CURVE_SECP224K1$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_SECP224R1() {
        return constants$1462.BCRYPT_ECC_CURVE_SECP224R1$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_SECP256K1() {
        return constants$1462.BCRYPT_ECC_CURVE_SECP256K1$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_SECP256R1() {
        return constants$1462.BCRYPT_ECC_CURVE_SECP256R1$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_SECP384R1() {
        return constants$1463.BCRYPT_ECC_CURVE_SECP384R1$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_SECP521R1() {
        return constants$1463.BCRYPT_ECC_CURVE_SECP521R1$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_WTLS7() {
        return constants$1463.BCRYPT_ECC_CURVE_WTLS7$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_WTLS9() {
        return constants$1463.BCRYPT_ECC_CURVE_WTLS9$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_WTLS12() {
        return constants$1463.BCRYPT_ECC_CURVE_WTLS12$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_X962P192V1() {
        return constants$1463.BCRYPT_ECC_CURVE_X962P192V1$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_X962P192V2() {
        return constants$1464.BCRYPT_ECC_CURVE_X962P192V2$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_X962P192V3() {
        return constants$1464.BCRYPT_ECC_CURVE_X962P192V3$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_X962P239V1() {
        return constants$1464.BCRYPT_ECC_CURVE_X962P239V1$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_X962P239V2() {
        return constants$1464.BCRYPT_ECC_CURVE_X962P239V2$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_X962P239V3() {
        return constants$1464.BCRYPT_ECC_CURVE_X962P239V3$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_X962P256V1() {
        return constants$1464.BCRYPT_ECC_CURVE_X962P256V1$SEGMENT;
    }
    public static MemorySegment MS_PRIMITIVE_PROVIDER() {
        return constants$1465.MS_PRIMITIVE_PROVIDER$SEGMENT;
    }
    public static MemorySegment MS_PLATFORM_CRYPTO_PROVIDER() {
        return constants$1465.MS_PLATFORM_CRYPTO_PROVIDER$SEGMENT;
    }
    public static MemorySegment BCRYPT_RSA_ALGORITHM() {
        return constants$1465.BCRYPT_RSA_ALGORITHM$SEGMENT;
    }
    public static MemorySegment BCRYPT_RSA_SIGN_ALGORITHM() {
        return constants$1465.BCRYPT_RSA_SIGN_ALGORITHM$SEGMENT;
    }
    public static MemorySegment BCRYPT_DH_ALGORITHM() {
        return constants$1465.BCRYPT_DH_ALGORITHM$SEGMENT;
    }
    public static MemorySegment BCRYPT_DSA_ALGORITHM() {
        return constants$1465.BCRYPT_DSA_ALGORITHM$SEGMENT;
    }
    public static MemorySegment BCRYPT_RC2_ALGORITHM() {
        return constants$1466.BCRYPT_RC2_ALGORITHM$SEGMENT;
    }
    public static MemorySegment BCRYPT_RC4_ALGORITHM() {
        return constants$1466.BCRYPT_RC4_ALGORITHM$SEGMENT;
    }
    public static MemorySegment BCRYPT_AES_ALGORITHM() {
        return constants$1466.BCRYPT_AES_ALGORITHM$SEGMENT;
    }
    public static MemorySegment BCRYPT_DES_ALGORITHM() {
        return constants$1466.BCRYPT_DES_ALGORITHM$SEGMENT;
    }
    public static MemorySegment BCRYPT_DESX_ALGORITHM() {
        return constants$1466.BCRYPT_DESX_ALGORITHM$SEGMENT;
    }
    public static MemorySegment BCRYPT_3DES_ALGORITHM() {
        return constants$1466.BCRYPT_3DES_ALGORITHM$SEGMENT;
    }
    public static MemorySegment BCRYPT_3DES_112_ALGORITHM() {
        return constants$1467.BCRYPT_3DES_112_ALGORITHM$SEGMENT;
    }
    public static MemorySegment BCRYPT_MD2_ALGORITHM() {
        return constants$1467.BCRYPT_MD2_ALGORITHM$SEGMENT;
    }
    public static MemorySegment BCRYPT_MD4_ALGORITHM() {
        return constants$1467.BCRYPT_MD4_ALGORITHM$SEGMENT;
    }
    public static MemorySegment BCRYPT_MD5_ALGORITHM() {
        return constants$1467.BCRYPT_MD5_ALGORITHM$SEGMENT;
    }
    public static MemorySegment BCRYPT_SHA1_ALGORITHM() {
        return constants$1467.BCRYPT_SHA1_ALGORITHM$SEGMENT;
    }
    public static MemorySegment BCRYPT_SHA256_ALGORITHM() {
        return constants$1467.BCRYPT_SHA256_ALGORITHM$SEGMENT;
    }
    public static MemorySegment BCRYPT_SHA384_ALGORITHM() {
        return constants$1468.BCRYPT_SHA384_ALGORITHM$SEGMENT;
    }
    public static MemorySegment BCRYPT_SHA512_ALGORITHM() {
        return constants$1468.BCRYPT_SHA512_ALGORITHM$SEGMENT;
    }
    public static MemorySegment BCRYPT_AES_GMAC_ALGORITHM() {
        return constants$1468.BCRYPT_AES_GMAC_ALGORITHM$SEGMENT;
    }
    public static MemorySegment BCRYPT_AES_CMAC_ALGORITHM() {
        return constants$1468.BCRYPT_AES_CMAC_ALGORITHM$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECDSA_P256_ALGORITHM() {
        return constants$1468.BCRYPT_ECDSA_P256_ALGORITHM$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECDSA_P384_ALGORITHM() {
        return constants$1468.BCRYPT_ECDSA_P384_ALGORITHM$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECDSA_P521_ALGORITHM() {
        return constants$1469.BCRYPT_ECDSA_P521_ALGORITHM$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECDH_P256_ALGORITHM() {
        return constants$1469.BCRYPT_ECDH_P256_ALGORITHM$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECDH_P384_ALGORITHM() {
        return constants$1469.BCRYPT_ECDH_P384_ALGORITHM$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECDH_P521_ALGORITHM() {
        return constants$1469.BCRYPT_ECDH_P521_ALGORITHM$SEGMENT;
    }
    public static MemorySegment BCRYPT_RNG_ALGORITHM() {
        return constants$1469.BCRYPT_RNG_ALGORITHM$SEGMENT;
    }
    public static MemorySegment BCRYPT_RNG_FIPS186_DSA_ALGORITHM() {
        return constants$1469.BCRYPT_RNG_FIPS186_DSA_ALGORITHM$SEGMENT;
    }
    public static MemorySegment BCRYPT_RNG_DUAL_EC_ALGORITHM() {
        return constants$1470.BCRYPT_RNG_DUAL_EC_ALGORITHM$SEGMENT;
    }
    public static MemorySegment BCRYPT_SP800108_CTR_HMAC_ALGORITHM() {
        return constants$1470.BCRYPT_SP800108_CTR_HMAC_ALGORITHM$SEGMENT;
    }
    public static MemorySegment BCRYPT_SP80056A_CONCAT_ALGORITHM() {
        return constants$1470.BCRYPT_SP80056A_CONCAT_ALGORITHM$SEGMENT;
    }
    public static MemorySegment BCRYPT_PBKDF2_ALGORITHM() {
        return constants$1470.BCRYPT_PBKDF2_ALGORITHM$SEGMENT;
    }
    public static MemorySegment BCRYPT_CAPI_KDF_ALGORITHM() {
        return constants$1470.BCRYPT_CAPI_KDF_ALGORITHM$SEGMENT;
    }
    public static MemorySegment BCRYPT_TLS1_1_KDF_ALGORITHM() {
        return constants$1470.BCRYPT_TLS1_1_KDF_ALGORITHM$SEGMENT;
    }
    public static MemorySegment BCRYPT_TLS1_2_KDF_ALGORITHM() {
        return constants$1471.BCRYPT_TLS1_2_KDF_ALGORITHM$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECDSA_ALGORITHM() {
        return constants$1471.BCRYPT_ECDSA_ALGORITHM$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECDH_ALGORITHM() {
        return constants$1471.BCRYPT_ECDH_ALGORITHM$SEGMENT;
    }
    public static MemorySegment BCRYPT_XTS_AES_ALGORITHM() {
        return constants$1471.BCRYPT_XTS_AES_ALGORITHM$SEGMENT;
    }
    public static MemorySegment BCRYPT_HKDF_ALGORITHM() {
        return constants$1471.BCRYPT_HKDF_ALGORITHM$SEGMENT;
    }
    public static MemoryAddress BCRYPT_MD2_ALG_HANDLE() {
        return constants$1471.BCRYPT_MD2_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_MD4_ALG_HANDLE() {
        return constants$1472.BCRYPT_MD4_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_MD5_ALG_HANDLE() {
        return constants$1472.BCRYPT_MD5_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_SHA1_ALG_HANDLE() {
        return constants$1472.BCRYPT_SHA1_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_SHA256_ALG_HANDLE() {
        return constants$1472.BCRYPT_SHA256_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_SHA384_ALG_HANDLE() {
        return constants$1472.BCRYPT_SHA384_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_SHA512_ALG_HANDLE() {
        return constants$1472.BCRYPT_SHA512_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_RC4_ALG_HANDLE() {
        return constants$1473.BCRYPT_RC4_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_RNG_ALG_HANDLE() {
        return constants$1473.BCRYPT_RNG_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_HMAC_MD5_ALG_HANDLE() {
        return constants$1473.BCRYPT_HMAC_MD5_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_HMAC_SHA1_ALG_HANDLE() {
        return constants$1473.BCRYPT_HMAC_SHA1_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_HMAC_SHA256_ALG_HANDLE() {
        return constants$1473.BCRYPT_HMAC_SHA256_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_HMAC_SHA384_ALG_HANDLE() {
        return constants$1473.BCRYPT_HMAC_SHA384_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_HMAC_SHA512_ALG_HANDLE() {
        return constants$1474.BCRYPT_HMAC_SHA512_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_RSA_ALG_HANDLE() {
        return constants$1474.BCRYPT_RSA_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_ECDSA_ALG_HANDLE() {
        return constants$1474.BCRYPT_ECDSA_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_AES_CMAC_ALG_HANDLE() {
        return constants$1474.BCRYPT_AES_CMAC_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_AES_GMAC_ALG_HANDLE() {
        return constants$1474.BCRYPT_AES_GMAC_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_HMAC_MD2_ALG_HANDLE() {
        return constants$1474.BCRYPT_HMAC_MD2_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_HMAC_MD4_ALG_HANDLE() {
        return constants$1475.BCRYPT_HMAC_MD4_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_3DES_CBC_ALG_HANDLE() {
        return constants$1475.BCRYPT_3DES_CBC_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_3DES_ECB_ALG_HANDLE() {
        return constants$1475.BCRYPT_3DES_ECB_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_3DES_CFB_ALG_HANDLE() {
        return constants$1475.BCRYPT_3DES_CFB_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_3DES_112_CBC_ALG_HANDLE() {
        return constants$1475.BCRYPT_3DES_112_CBC_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_3DES_112_ECB_ALG_HANDLE() {
        return constants$1475.BCRYPT_3DES_112_ECB_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_3DES_112_CFB_ALG_HANDLE() {
        return constants$1476.BCRYPT_3DES_112_CFB_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_AES_CBC_ALG_HANDLE() {
        return constants$1476.BCRYPT_AES_CBC_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_AES_ECB_ALG_HANDLE() {
        return constants$1476.BCRYPT_AES_ECB_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_AES_CFB_ALG_HANDLE() {
        return constants$1476.BCRYPT_AES_CFB_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_AES_CCM_ALG_HANDLE() {
        return constants$1476.BCRYPT_AES_CCM_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_AES_GCM_ALG_HANDLE() {
        return constants$1476.BCRYPT_AES_GCM_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_DES_CBC_ALG_HANDLE() {
        return constants$1477.BCRYPT_DES_CBC_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_DES_ECB_ALG_HANDLE() {
        return constants$1477.BCRYPT_DES_ECB_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_DES_CFB_ALG_HANDLE() {
        return constants$1477.BCRYPT_DES_CFB_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_DESX_CBC_ALG_HANDLE() {
        return constants$1477.BCRYPT_DESX_CBC_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_DESX_ECB_ALG_HANDLE() {
        return constants$1477.BCRYPT_DESX_ECB_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_DESX_CFB_ALG_HANDLE() {
        return constants$1477.BCRYPT_DESX_CFB_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_RC2_CBC_ALG_HANDLE() {
        return constants$1478.BCRYPT_RC2_CBC_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_RC2_ECB_ALG_HANDLE() {
        return constants$1478.BCRYPT_RC2_ECB_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_RC2_CFB_ALG_HANDLE() {
        return constants$1478.BCRYPT_RC2_CFB_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_DH_ALG_HANDLE() {
        return constants$1478.BCRYPT_DH_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_ECDH_ALG_HANDLE() {
        return constants$1478.BCRYPT_ECDH_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_ECDH_P256_ALG_HANDLE() {
        return constants$1478.BCRYPT_ECDH_P256_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_ECDH_P384_ALG_HANDLE() {
        return constants$1479.BCRYPT_ECDH_P384_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_ECDH_P521_ALG_HANDLE() {
        return constants$1479.BCRYPT_ECDH_P521_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_DSA_ALG_HANDLE() {
        return constants$1479.BCRYPT_DSA_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_ECDSA_P256_ALG_HANDLE() {
        return constants$1479.BCRYPT_ECDSA_P256_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_ECDSA_P384_ALG_HANDLE() {
        return constants$1479.BCRYPT_ECDSA_P384_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_ECDSA_P521_ALG_HANDLE() {
        return constants$1479.BCRYPT_ECDSA_P521_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_RSA_SIGN_ALG_HANDLE() {
        return constants$1480.BCRYPT_RSA_SIGN_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_CAPI_KDF_ALG_HANDLE() {
        return constants$1480.BCRYPT_CAPI_KDF_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_PBKDF2_ALG_HANDLE() {
        return constants$1480.BCRYPT_PBKDF2_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_SP800108_CTR_HMAC_ALG_HANDLE() {
        return constants$1480.BCRYPT_SP800108_CTR_HMAC_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_SP80056A_CONCAT_ALG_HANDLE() {
        return constants$1480.BCRYPT_SP80056A_CONCAT_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_TLS1_1_KDF_ALG_HANDLE() {
        return constants$1480.BCRYPT_TLS1_1_KDF_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_TLS1_2_KDF_ALG_HANDLE() {
        return constants$1481.BCRYPT_TLS1_2_KDF_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_XTS_AES_ALG_HANDLE() {
        return constants$1481.BCRYPT_XTS_AES_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_HKDF_ALG_HANDLE() {
        return constants$1481.BCRYPT_HKDF_ALG_HANDLE$ADDR;
    }
    public static int CRYPT_MIN_DEPENDENCIES() {
        return (int)1L;
    }
    public static int CRYPT_PROCESS_ISOLATE() {
        return (int)65536L;
    }
    public static int CRYPT_UM() {
        return (int)1L;
    }
    public static int CRYPT_KM() {
        return (int)2L;
    }
    public static int CRYPT_MM() {
        return (int)3L;
    }
    public static int CRYPT_ANY() {
        return (int)4L;
    }
    public static int CRYPT_OVERWRITE() {
        return (int)1L;
    }
    public static int CRYPT_LOCAL() {
        return (int)1L;
    }
    public static int CRYPT_DOMAIN() {
        return (int)2L;
    }
    public static int CRYPT_EXCLUSIVE() {
        return (int)1L;
    }
    public static int CRYPT_OVERRIDE() {
        return (int)65536L;
    }
    public static int CRYPT_ALL_FUNCTIONS() {
        return (int)1L;
    }
    public static int CRYPT_ALL_PROVIDERS() {
        return (int)2L;
    }
    public static int CRYPT_PRIORITY_TOP() {
        return (int)0L;
    }
    public static int CRYPT_PRIORITY_BOTTOM() {
        return (int)4294967295L;
    }
    public static MemorySegment CRYPT_DEFAULT_CONTEXT() {
        return constants$1481.CRYPT_DEFAULT_CONTEXT$SEGMENT;
    }
    public static MemorySegment MS_KEY_STORAGE_PROVIDER() {
        return constants$1481.MS_KEY_STORAGE_PROVIDER$SEGMENT;
    }
    public static MemorySegment MS_SMART_CARD_KEY_STORAGE_PROVIDER() {
        return constants$1481.MS_SMART_CARD_KEY_STORAGE_PROVIDER$SEGMENT;
    }
    public static MemorySegment MS_PLATFORM_KEY_STORAGE_PROVIDER() {
        return constants$1482.MS_PLATFORM_KEY_STORAGE_PROVIDER$SEGMENT;
    }
    public static MemorySegment MS_NGC_KEY_STORAGE_PROVIDER() {
        return constants$1482.MS_NGC_KEY_STORAGE_PROVIDER$SEGMENT;
    }
    public static MemorySegment TPM_RSA_SRK_SEAL_KEY() {
        return constants$1482.TPM_RSA_SRK_SEAL_KEY$SEGMENT;
    }
    public static MemorySegment NCRYPT_RSA_ALGORITHM() {
        return constants$1482.NCRYPT_RSA_ALGORITHM$SEGMENT;
    }
    public static MemorySegment NCRYPT_RSA_SIGN_ALGORITHM() {
        return constants$1482.NCRYPT_RSA_SIGN_ALGORITHM$SEGMENT;
    }
    public static MemorySegment NCRYPT_DH_ALGORITHM() {
        return constants$1482.NCRYPT_DH_ALGORITHM$SEGMENT;
    }
    public static MemorySegment NCRYPT_DSA_ALGORITHM() {
        return constants$1483.NCRYPT_DSA_ALGORITHM$SEGMENT;
    }
    public static MemorySegment NCRYPT_MD2_ALGORITHM() {
        return constants$1483.NCRYPT_MD2_ALGORITHM$SEGMENT;
    }
    public static MemorySegment NCRYPT_MD4_ALGORITHM() {
        return constants$1483.NCRYPT_MD4_ALGORITHM$SEGMENT;
    }
    public static MemorySegment NCRYPT_MD5_ALGORITHM() {
        return constants$1483.NCRYPT_MD5_ALGORITHM$SEGMENT;
    }
    public static MemorySegment NCRYPT_SHA1_ALGORITHM() {
        return constants$1483.NCRYPT_SHA1_ALGORITHM$SEGMENT;
    }
    public static MemorySegment NCRYPT_SHA256_ALGORITHM() {
        return constants$1483.NCRYPT_SHA256_ALGORITHM$SEGMENT;
    }
    public static MemorySegment NCRYPT_SHA384_ALGORITHM() {
        return constants$1484.NCRYPT_SHA384_ALGORITHM$SEGMENT;
    }
    public static MemorySegment NCRYPT_SHA512_ALGORITHM() {
        return constants$1484.NCRYPT_SHA512_ALGORITHM$SEGMENT;
    }
    public static MemorySegment NCRYPT_ECDSA_P256_ALGORITHM() {
        return constants$1484.NCRYPT_ECDSA_P256_ALGORITHM$SEGMENT;
    }
    public static MemorySegment NCRYPT_ECDSA_P384_ALGORITHM() {
        return constants$1484.NCRYPT_ECDSA_P384_ALGORITHM$SEGMENT;
    }
    public static MemorySegment NCRYPT_ECDSA_P521_ALGORITHM() {
        return constants$1484.NCRYPT_ECDSA_P521_ALGORITHM$SEGMENT;
    }
    public static MemorySegment NCRYPT_ECDH_P256_ALGORITHM() {
        return constants$1484.NCRYPT_ECDH_P256_ALGORITHM$SEGMENT;
    }
    public static MemorySegment NCRYPT_ECDH_P384_ALGORITHM() {
        return constants$1485.NCRYPT_ECDH_P384_ALGORITHM$SEGMENT;
    }
    public static MemorySegment NCRYPT_ECDH_P521_ALGORITHM() {
        return constants$1485.NCRYPT_ECDH_P521_ALGORITHM$SEGMENT;
    }
    public static MemorySegment NCRYPT_AES_ALGORITHM() {
        return constants$1485.NCRYPT_AES_ALGORITHM$SEGMENT;
    }
    public static MemorySegment NCRYPT_RC2_ALGORITHM() {
        return constants$1485.NCRYPT_RC2_ALGORITHM$SEGMENT;
    }
    public static MemorySegment NCRYPT_3DES_ALGORITHM() {
        return constants$1485.NCRYPT_3DES_ALGORITHM$SEGMENT;
    }
    public static MemorySegment NCRYPT_DES_ALGORITHM() {
        return constants$1485.NCRYPT_DES_ALGORITHM$SEGMENT;
    }
    public static MemorySegment NCRYPT_DESX_ALGORITHM() {
        return constants$1486.NCRYPT_DESX_ALGORITHM$SEGMENT;
    }
    public static MemorySegment NCRYPT_3DES_112_ALGORITHM() {
        return constants$1486.NCRYPT_3DES_112_ALGORITHM$SEGMENT;
    }
    public static MemorySegment NCRYPT_SP800108_CTR_HMAC_ALGORITHM() {
        return constants$1486.NCRYPT_SP800108_CTR_HMAC_ALGORITHM$SEGMENT;
    }
    public static MemorySegment NCRYPT_SP80056A_CONCAT_ALGORITHM() {
        return constants$1486.NCRYPT_SP80056A_CONCAT_ALGORITHM$SEGMENT;
    }
    public static MemorySegment NCRYPT_PBKDF2_ALGORITHM() {
        return constants$1486.NCRYPT_PBKDF2_ALGORITHM$SEGMENT;
    }
    public static MemorySegment NCRYPT_CAPI_KDF_ALGORITHM() {
        return constants$1486.NCRYPT_CAPI_KDF_ALGORITHM$SEGMENT;
    }
    public static MemorySegment NCRYPT_ECDSA_ALGORITHM() {
        return constants$1487.NCRYPT_ECDSA_ALGORITHM$SEGMENT;
    }
    public static MemorySegment NCRYPT_ECDH_ALGORITHM() {
        return constants$1487.NCRYPT_ECDH_ALGORITHM$SEGMENT;
    }
    public static MemorySegment NCRYPT_KEY_STORAGE_ALGORITHM() {
        return constants$1487.NCRYPT_KEY_STORAGE_ALGORITHM$SEGMENT;
    }
    public static MemorySegment NCRYPT_HMAC_SHA256_ALGORITHM() {
        return constants$1487.NCRYPT_HMAC_SHA256_ALGORITHM$SEGMENT;
    }
    public static int NCRYPT_CIPHER_INTERFACE() {
        return (int)1L;
    }
    public static int NCRYPT_HASH_INTERFACE() {
        return (int)2L;
    }
    public static int NCRYPT_ASYMMETRIC_ENCRYPTION_INTERFACE() {
        return (int)3L;
    }
    public static int NCRYPT_SECRET_AGREEMENT_INTERFACE() {
        return (int)4L;
    }
    public static int NCRYPT_SIGNATURE_INTERFACE() {
        return (int)5L;
    }
    public static int NCRYPT_KEY_DERIVATION_INTERFACE() {
        return (int)7L;
    }
    public static MemorySegment NCRYPT_RSA_ALGORITHM_GROUP() {
        return constants$1487.NCRYPT_RSA_ALGORITHM_GROUP$SEGMENT;
    }
    public static MemorySegment NCRYPT_DH_ALGORITHM_GROUP() {
        return constants$1487.NCRYPT_DH_ALGORITHM_GROUP$SEGMENT;
    }
    public static MemorySegment NCRYPT_DSA_ALGORITHM_GROUP() {
        return constants$1488.NCRYPT_DSA_ALGORITHM_GROUP$SEGMENT;
    }
    public static MemorySegment NCRYPT_ECDSA_ALGORITHM_GROUP() {
        return constants$1488.NCRYPT_ECDSA_ALGORITHM_GROUP$SEGMENT;
    }
    public static MemorySegment NCRYPT_ECDH_ALGORITHM_GROUP() {
        return constants$1488.NCRYPT_ECDH_ALGORITHM_GROUP$SEGMENT;
    }
    public static MemorySegment NCRYPT_AES_ALGORITHM_GROUP() {
        return constants$1488.NCRYPT_AES_ALGORITHM_GROUP$SEGMENT;
    }
    public static MemorySegment NCRYPT_RC2_ALGORITHM_GROUP() {
        return constants$1488.NCRYPT_RC2_ALGORITHM_GROUP$SEGMENT;
    }
    public static MemorySegment NCRYPT_DES_ALGORITHM_GROUP() {
        return constants$1488.NCRYPT_DES_ALGORITHM_GROUP$SEGMENT;
    }
    public static MemorySegment NCRYPT_KEY_DERIVATION_GROUP() {
        return constants$1489.NCRYPT_KEY_DERIVATION_GROUP$SEGMENT;
    }
    public static int NCRYPT_ISOLATED_KEY_ATTESTED_ATTRIBUTES_CURRENT_VERSION() {
        return (int)0L;
    }
    public static int NCRYPT_VSM_KEY_ATTESTATION_STATEMENT_CURRENT_VERSION() {
        return (int)0L;
    }
    public static int NCRYPT_VSM_KEY_ATTESTATION_CLAIM_RESTRICTIONS_CURRENT_VERSION() {
        return (int)0L;
    }
    public static int NCRYPT_EXPORTED_ISOLATED_KEY_HEADER_CURRENT_VERSION() {
        return (int)0L;
    }
    public static int NCRYPT_TPM_PLATFORM_ATTESTATION_STATEMENT_CURRENT_VERSION() {
        return (int)0L;
    }
    public static int NCRYPT_NO_KEY_VALIDATION() {
        return (int)8L;
    }
    public static int NCRYPT_PERSIST_FLAG() {
        return (int)2147483648L;
    }
    public static int NCRYPT_CIPHER_OPERATION() {
        return (int)1L;
    }
    public static int NCRYPT_HASH_OPERATION() {
        return (int)2L;
    }
    public static int NCRYPT_ASYMMETRIC_ENCRYPTION_OPERATION() {
        return (int)4L;
    }
    public static int NCRYPT_SECRET_AGREEMENT_OPERATION() {
        return (int)8L;
    }
    public static int NCRYPT_SIGNATURE_OPERATION() {
        return (int)16L;
    }
    public static int NCRYPT_RNG_OPERATION() {
        return (int)32L;
    }
    public static int NCRYPT_KEY_DERIVATION_OPERATION() {
        return (int)64L;
    }
    public static MemorySegment NCRYPT_NAME_PROPERTY() {
        return constants$1489.NCRYPT_NAME_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_UNIQUE_NAME_PROPERTY() {
        return constants$1489.NCRYPT_UNIQUE_NAME_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_ALGORITHM_PROPERTY() {
        return constants$1489.NCRYPT_ALGORITHM_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_LENGTH_PROPERTY() {
        return constants$1489.NCRYPT_LENGTH_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_LENGTHS_PROPERTY() {
        return constants$1489.NCRYPT_LENGTHS_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_BLOCK_LENGTH_PROPERTY() {
        return constants$1490.NCRYPT_BLOCK_LENGTH_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PUBLIC_LENGTH_PROPERTY() {
        return constants$1490.NCRYPT_PUBLIC_LENGTH_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_SIGNATURE_LENGTH_PROPERTY() {
        return constants$1490.NCRYPT_SIGNATURE_LENGTH_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_CHAINING_MODE_PROPERTY() {
        return constants$1490.NCRYPT_CHAINING_MODE_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_AUTH_TAG_LENGTH() {
        return constants$1490.NCRYPT_AUTH_TAG_LENGTH$SEGMENT;
    }
    public static MemorySegment NCRYPT_UI_POLICY_PROPERTY() {
        return constants$1490.NCRYPT_UI_POLICY_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_EXPORT_POLICY_PROPERTY() {
        return constants$1491.NCRYPT_EXPORT_POLICY_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_WINDOW_HANDLE_PROPERTY() {
        return constants$1491.NCRYPT_WINDOW_HANDLE_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_USE_CONTEXT_PROPERTY() {
        return constants$1491.NCRYPT_USE_CONTEXT_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_IMPL_TYPE_PROPERTY() {
        return constants$1491.NCRYPT_IMPL_TYPE_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_KEY_USAGE_PROPERTY() {
        return constants$1491.NCRYPT_KEY_USAGE_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_KEY_TYPE_PROPERTY() {
        return constants$1491.NCRYPT_KEY_TYPE_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_VERSION_PROPERTY() {
        return constants$1492.NCRYPT_VERSION_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_SECURITY_DESCR_SUPPORT_PROPERTY() {
        return constants$1492.NCRYPT_SECURITY_DESCR_SUPPORT_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_SECURITY_DESCR_PROPERTY() {
        return constants$1492.NCRYPT_SECURITY_DESCR_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_USE_COUNT_ENABLED_PROPERTY() {
        return constants$1492.NCRYPT_USE_COUNT_ENABLED_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_USE_COUNT_PROPERTY() {
        return constants$1492.NCRYPT_USE_COUNT_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_LAST_MODIFIED_PROPERTY() {
        return constants$1492.NCRYPT_LAST_MODIFIED_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_MAX_NAME_LENGTH_PROPERTY() {
        return constants$1493.NCRYPT_MAX_NAME_LENGTH_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_ALGORITHM_GROUP_PROPERTY() {
        return constants$1493.NCRYPT_ALGORITHM_GROUP_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_DH_PARAMETERS_PROPERTY() {
        return constants$1493.NCRYPT_DH_PARAMETERS_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_ECC_PARAMETERS_PROPERTY() {
        return constants$1493.NCRYPT_ECC_PARAMETERS_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_ECC_CURVE_NAME_PROPERTY() {
        return constants$1493.NCRYPT_ECC_CURVE_NAME_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_ECC_CURVE_NAME_LIST_PROPERTY() {
        return constants$1493.NCRYPT_ECC_CURVE_NAME_LIST_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_USE_VIRTUAL_ISOLATION_PROPERTY() {
        return constants$1494.NCRYPT_USE_VIRTUAL_ISOLATION_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_USE_PER_BOOT_KEY_PROPERTY() {
        return constants$1494.NCRYPT_USE_PER_BOOT_KEY_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PROVIDER_HANDLE_PROPERTY() {
        return constants$1494.NCRYPT_PROVIDER_HANDLE_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PIN_PROPERTY() {
        return constants$1494.NCRYPT_PIN_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_READER_PROPERTY() {
        return constants$1494.NCRYPT_READER_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_SMARTCARD_GUID_PROPERTY() {
        return constants$1494.NCRYPT_SMARTCARD_GUID_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_CERTIFICATE_PROPERTY() {
        return constants$1495.NCRYPT_CERTIFICATE_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PIN_PROMPT_PROPERTY() {
        return constants$1495.NCRYPT_PIN_PROMPT_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_USER_CERTSTORE_PROPERTY() {
        return constants$1495.NCRYPT_USER_CERTSTORE_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_ROOT_CERTSTORE_PROPERTY() {
        return constants$1495.NCRYPT_ROOT_CERTSTORE_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_SECURE_PIN_PROPERTY() {
        return constants$1495.NCRYPT_SECURE_PIN_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_ASSOCIATED_ECDH_KEY() {
        return constants$1495.NCRYPT_ASSOCIATED_ECDH_KEY$SEGMENT;
    }
    public static MemorySegment NCRYPT_SCARD_PIN_ID() {
        return constants$1496.NCRYPT_SCARD_PIN_ID$SEGMENT;
    }
    public static MemorySegment NCRYPT_SCARD_PIN_INFO() {
        return constants$1496.NCRYPT_SCARD_PIN_INFO$SEGMENT;
    }
    public static MemorySegment NCRYPT_READER_ICON_PROPERTY() {
        return constants$1496.NCRYPT_READER_ICON_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_KDF_SECRET_VALUE() {
        return constants$1496.NCRYPT_KDF_SECRET_VALUE$SEGMENT;
    }
    public static MemorySegment NCRYPT_DISMISS_UI_TIMEOUT_SEC_PROPERTY() {
        return constants$1496.NCRYPT_DISMISS_UI_TIMEOUT_SEC_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_PLATFORM_TYPE_PROPERTY() {
        return constants$1496.NCRYPT_PCP_PLATFORM_TYPE_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_PROVIDER_VERSION_PROPERTY() {
        return constants$1497.NCRYPT_PCP_PROVIDER_VERSION_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_EKPUB_PROPERTY() {
        return constants$1497.NCRYPT_PCP_EKPUB_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_EKCERT_PROPERTY() {
        return constants$1497.NCRYPT_PCP_EKCERT_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_EKNVCERT_PROPERTY() {
        return constants$1497.NCRYPT_PCP_EKNVCERT_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_RSA_EKPUB_PROPERTY() {
        return constants$1497.NCRYPT_PCP_RSA_EKPUB_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_RSA_EKCERT_PROPERTY() {
        return constants$1497.NCRYPT_PCP_RSA_EKCERT_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_RSA_EKNVCERT_PROPERTY() {
        return constants$1498.NCRYPT_PCP_RSA_EKNVCERT_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_ECC_EKPUB_PROPERTY() {
        return constants$1498.NCRYPT_PCP_ECC_EKPUB_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_ECC_EKCERT_PROPERTY() {
        return constants$1498.NCRYPT_PCP_ECC_EKCERT_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_ECC_EKNVCERT_PROPERTY() {
        return constants$1498.NCRYPT_PCP_ECC_EKNVCERT_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_SRKPUB_PROPERTY() {
        return constants$1498.NCRYPT_PCP_SRKPUB_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_PCRTABLE_PROPERTY() {
        return constants$1498.NCRYPT_PCP_PCRTABLE_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_CHANGEPASSWORD_PROPERTY() {
        return constants$1499.NCRYPT_PCP_CHANGEPASSWORD_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_PASSWORD_REQUIRED_PROPERTY() {
        return constants$1499.NCRYPT_PCP_PASSWORD_REQUIRED_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_USAGEAUTH_PROPERTY() {
        return constants$1499.NCRYPT_PCP_USAGEAUTH_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_MIGRATIONPASSWORD_PROPERTY() {
        return constants$1499.NCRYPT_PCP_MIGRATIONPASSWORD_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_EXPORT_ALLOWED_PROPERTY() {
        return constants$1499.NCRYPT_PCP_EXPORT_ALLOWED_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_STORAGEPARENT_PROPERTY() {
        return constants$1499.NCRYPT_PCP_STORAGEPARENT_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_PROVIDERHANDLE_PROPERTY() {
        return constants$1500.NCRYPT_PCP_PROVIDERHANDLE_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_PLATFORMHANDLE_PROPERTY() {
        return constants$1500.NCRYPT_PCP_PLATFORMHANDLE_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_PLATFORM_BINDING_PCRMASK_PROPERTY() {
        return constants$1500.NCRYPT_PCP_PLATFORM_BINDING_PCRMASK_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_PLATFORM_BINDING_PCRDIGESTLIST_PROPERTY() {
        return constants$1500.NCRYPT_PCP_PLATFORM_BINDING_PCRDIGESTLIST_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_PLATFORM_BINDING_PCRDIGEST_PROPERTY() {
        return constants$1500.NCRYPT_PCP_PLATFORM_BINDING_PCRDIGEST_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_KEY_USAGE_POLICY_PROPERTY() {
        return constants$1500.NCRYPT_PCP_KEY_USAGE_POLICY_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_RSA_SCHEME_PROPERTY() {
        return constants$1501.NCRYPT_PCP_RSA_SCHEME_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_RSA_SCHEME_HASH_ALG_PROPERTY() {
        return constants$1501.NCRYPT_PCP_RSA_SCHEME_HASH_ALG_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_TPM12_IDBINDING_PROPERTY() {
        return constants$1501.NCRYPT_PCP_TPM12_IDBINDING_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_TPM12_IDBINDING_DYNAMIC_PROPERTY() {
        return constants$1501.NCRYPT_PCP_TPM12_IDBINDING_DYNAMIC_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_TPM12_IDACTIVATION_PROPERTY() {
        return constants$1501.NCRYPT_PCP_TPM12_IDACTIVATION_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_KEYATTESTATION_PROPERTY() {
        return constants$1501.NCRYPT_PCP_KEYATTESTATION_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_ALTERNATE_KEY_STORAGE_LOCATION_PROPERTY() {
        return constants$1502.NCRYPT_PCP_ALTERNATE_KEY_STORAGE_LOCATION_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_TPM_IFX_RSA_KEYGEN_PROHIBITED_PROPERTY() {
        return constants$1502.NCRYPT_PCP_TPM_IFX_RSA_KEYGEN_PROHIBITED_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_TPM_IFX_RSA_KEYGEN_VULNERABILITY_PROPERTY() {
        return constants$1502.NCRYPT_PCP_TPM_IFX_RSA_KEYGEN_VULNERABILITY_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_HMAC_AUTH_POLICYREF() {
        return constants$1502.NCRYPT_PCP_HMAC_AUTH_POLICYREF$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_HMAC_AUTH_POLICYINFO() {
        return constants$1502.NCRYPT_PCP_HMAC_AUTH_POLICYINFO$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_HMAC_AUTH_NONCE() {
        return constants$1502.NCRYPT_PCP_HMAC_AUTH_NONCE$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_HMAC_AUTH_SIGNATURE() {
        return constants$1503.NCRYPT_PCP_HMAC_AUTH_SIGNATURE$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_HMAC_AUTH_TICKET() {
        return constants$1503.NCRYPT_PCP_HMAC_AUTH_TICKET$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_NO_DA_PROTECTION_PROPERTY() {
        return constants$1503.NCRYPT_PCP_NO_DA_PROTECTION_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_TPM_MANUFACTURER_ID_PROPERTY() {
        return constants$1503.NCRYPT_PCP_TPM_MANUFACTURER_ID_PROPERTY$SEGMENT;
    }
}


