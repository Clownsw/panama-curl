// Generated by jextract

package cn.smilex;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
 class curl_h_12 extends curl_h_11 {

    public static int IPPORT_FTP() {
        return (int)21L;
    }
    public static int IPPORT_TELNET() {
        return (int)23L;
    }
    public static int IPPORT_SMTP() {
        return (int)25L;
    }
    public static int IPPORT_TIMESERVER() {
        return (int)37L;
    }
    public static int IPPORT_NAMESERVER() {
        return (int)42L;
    }
    public static int IPPORT_WHOIS() {
        return (int)43L;
    }
    public static int IPPORT_MTP() {
        return (int)57L;
    }
    public static int IPPORT_TFTP() {
        return (int)69L;
    }
    public static int IPPORT_RJE() {
        return (int)77L;
    }
    public static int IPPORT_FINGER() {
        return (int)79L;
    }
    public static int IPPORT_TTYLINK() {
        return (int)87L;
    }
    public static int IPPORT_SUPDUP() {
        return (int)95L;
    }
    public static int IPPORT_POP3() {
        return (int)110L;
    }
    public static int IPPORT_NTP() {
        return (int)123L;
    }
    public static int IPPORT_EPMAP() {
        return (int)135L;
    }
    public static int IPPORT_NETBIOS_NS() {
        return (int)137L;
    }
    public static int IPPORT_NETBIOS_DGM() {
        return (int)138L;
    }
    public static int IPPORT_NETBIOS_SSN() {
        return (int)139L;
    }
    public static int IPPORT_IMAP() {
        return (int)143L;
    }
    public static int IPPORT_SNMP() {
        return (int)161L;
    }
    public static int IPPORT_SNMP_TRAP() {
        return (int)162L;
    }
    public static int IPPORT_IMAP3() {
        return (int)220L;
    }
    public static int IPPORT_LDAP() {
        return (int)389L;
    }
    public static int IPPORT_HTTPS() {
        return (int)443L;
    }
    public static int IPPORT_MICROSOFT_DS() {
        return (int)445L;
    }
    public static int IPPORT_EXECSERVER() {
        return (int)512L;
    }
    public static int IPPORT_LOGINSERVER() {
        return (int)513L;
    }
    public static int IPPORT_CMDSERVER() {
        return (int)514L;
    }
    public static int IPPORT_EFSSERVER() {
        return (int)520L;
    }
    public static int IPPORT_BIFFUDP() {
        return (int)512L;
    }
    public static int IPPORT_WHOSERVER() {
        return (int)513L;
    }
    public static int IPPORT_ROUTESERVER() {
        return (int)520L;
    }
    public static int IPPORT_RESERVED() {
        return (int)1024L;
    }
    public static int IPPORT_REGISTERED_MAX() {
        return (int)49151L;
    }
    public static int IPPORT_DYNAMIC_MIN() {
        return (int)49152L;
    }
    public static int IPPORT_DYNAMIC_MAX() {
        return (int)65535L;
    }
    public static int IN_CLASSA_NSHIFT() {
        return (int)24L;
    }
    public static int IN_CLASSA_HOST() {
        return (int)16777215L;
    }
    public static int IN_CLASSA_MAX() {
        return (int)128L;
    }
    public static int IN_CLASSB_NSHIFT() {
        return (int)16L;
    }
    public static int IN_CLASSB_HOST() {
        return (int)65535L;
    }
    public static int IN_CLASSB_MAX() {
        return (int)65536L;
    }
    public static int IN_CLASSC_NSHIFT() {
        return (int)8L;
    }
    public static int IN_CLASSC_HOST() {
        return (int)255L;
    }
    public static int IN_CLASSD_NSHIFT() {
        return (int)28L;
    }
    public static int IN_CLASSD_HOST() {
        return (int)268435455L;
    }
    public static int INADDR_LOOPBACK() {
        return (int)2130706433L;
    }
    public static int IOCPARM_MASK() {
        return (int)127L;
    }
    public static int IOC_VOID() {
        return (int)536870912L;
    }
    public static int IOC_OUT() {
        return (int)1073741824L;
    }
    public static int MSG_TRUNC() {
        return (int)256L;
    }
    public static int MSG_CTRUNC() {
        return (int)512L;
    }
    public static int MSG_BCAST() {
        return (int)1024L;
    }
    public static int MSG_MCAST() {
        return (int)2048L;
    }
    public static int MSG_ERRQUEUE() {
        return (int)4096L;
    }
    public static int AI_PASSIVE() {
        return (int)1L;
    }
    public static int AI_CANONNAME() {
        return (int)2L;
    }
    public static int AI_NUMERICHOST() {
        return (int)4L;
    }
    public static int AI_NUMERICSERV() {
        return (int)8L;
    }
    public static int AI_DNS_ONLY() {
        return (int)16L;
    }
    public static int AI_ALL() {
        return (int)256L;
    }
    public static int AI_ADDRCONFIG() {
        return (int)1024L;
    }
    public static int AI_V4MAPPED() {
        return (int)2048L;
    }
    public static int AI_NON_AUTHORITATIVE() {
        return (int)16384L;
    }
    public static int AI_SECURE() {
        return (int)32768L;
    }
    public static int AI_RETURN_PREFERRED_NAMES() {
        return (int)65536L;
    }
    public static int AI_FQDN() {
        return (int)131072L;
    }
    public static int AI_FILESERVER() {
        return (int)262144L;
    }
    public static int AI_DISABLE_IDN_ENCODING() {
        return (int)524288L;
    }
    public static int AI_RESOLUTION_HANDLE() {
        return (int)1073741824L;
    }
    public static int ADDRINFOEX_VERSION_2() {
        return (int)2L;
    }
    public static int ADDRINFOEX_VERSION_3() {
        return (int)3L;
    }
    public static int ADDRINFOEX_VERSION_4() {
        return (int)4L;
    }
    public static int NI_NOFQDN() {
        return (int)1L;
    }
    public static int NI_NUMERICHOST() {
        return (int)2L;
    }
    public static int NI_NAMEREQD() {
        return (int)4L;
    }
    public static int NI_NUMERICSERV() {
        return (int)8L;
    }
    public static int NI_DGRAM() {
        return (int)16L;
    }
    public static int NI_MAXHOST() {
        return (int)1025L;
    }
    public static int NI_MAXSERV() {
        return (int)32L;
    }
    public static int FD_SETSIZE() {
        return (int)64L;
    }
    public static int IMPLINK_IP() {
        return (int)155L;
    }
    public static int IMPLINK_LOWEXPER() {
        return (int)156L;
    }
    public static int IMPLINK_HIGHEXPER() {
        return (int)158L;
    }
    public static int WSADESCRIPTION_LEN() {
        return (int)256L;
    }
    public static int WSASYS_STATUS_LEN() {
        return (int)128L;
    }
    public static int SO_PROTOCOL_INFOA() {
        return (int)8196L;
    }
    public static int SO_PROTOCOL_INFOW() {
        return (int)8197L;
    }
    public static int PVD_CONFIG() {
        return (int)12289L;
    }
    public static int SOMAXCONN() {
        return (int)2147483647L;
    }
    public static int MSG_OOB() {
        return (int)1L;
    }
    public static int MSG_PEEK() {
        return (int)2L;
    }
    public static int MSG_DONTROUTE() {
        return (int)4L;
    }
    public static int MSG_WAITALL() {
        return (int)8L;
    }
    public static int MSG_PUSH_IMMEDIATE() {
        return (int)32L;
    }
    public static int MSG_PARTIAL() {
        return (int)32768L;
    }
    public static int MSG_INTERRUPT() {
        return (int)16L;
    }
    public static int MSG_MAXIOVLEN() {
        return (int)16L;
    }
    public static int MAXGETHOSTSTRUCT() {
        return (int)1024L;
    }
    public static int FD_READ_BIT() {
        return (int)0L;
    }
    public static int FD_WRITE_BIT() {
        return (int)1L;
    }
    public static int FD_OOB_BIT() {
        return (int)2L;
    }
    public static int FD_ACCEPT_BIT() {
        return (int)3L;
    }
    public static int FD_CONNECT_BIT() {
        return (int)4L;
    }
    public static int FD_CLOSE_BIT() {
        return (int)5L;
    }
    public static int FD_QOS_BIT() {
        return (int)6L;
    }
    public static int FD_GROUP_QOS_BIT() {
        return (int)7L;
    }
    public static int FD_ROUTING_INTERFACE_CHANGE_BIT() {
        return (int)8L;
    }
    public static int FD_ADDRESS_LIST_CHANGE_BIT() {
        return (int)9L;
    }
    public static int FD_MAX_EVENTS() {
        return (int)10L;
    }
    public static int SERVICETYPE_NOTRAFFIC() {
        return (int)0L;
    }
    public static int SERVICETYPE_BESTEFFORT() {
        return (int)1L;
    }
    public static int SERVICETYPE_CONTROLLEDLOAD() {
        return (int)2L;
    }
    public static int SERVICETYPE_GUARANTEED() {
        return (int)3L;
    }
    public static int SERVICETYPE_NETWORK_UNAVAILABLE() {
        return (int)4L;
    }
    public static int SERVICETYPE_GENERAL_INFORMATION() {
        return (int)5L;
    }
    public static int SERVICETYPE_NOCHANGE() {
        return (int)6L;
    }
    public static int SERVICETYPE_NONCONFORMING() {
        return (int)9L;
    }
    public static int SERVICETYPE_NETWORK_CONTROL() {
        return (int)10L;
    }
    public static int SERVICETYPE_QUALITATIVE() {
        return (int)13L;
    }
    public static int SERVICE_NO_QOS_SIGNALING() {
        return (int)1073741824L;
    }
    public static int QOS_GENERAL_ID_BASE() {
        return (int)2000L;
    }
    public static int TC_NONCONF_BORROW() {
        return (int)0L;
    }
    public static int TC_NONCONF_SHAPE() {
        return (int)1L;
    }
    public static int TC_NONCONF_DISCARD() {
        return (int)2L;
    }
    public static int TC_NONCONF_BORROW_PLUS() {
        return (int)3L;
    }
    public static int CF_ACCEPT() {
        return (int)0L;
    }
    public static int CF_REJECT() {
        return (int)1L;
    }
    public static int CF_DEFER() {
        return (int)2L;
    }
    public static int SD_RECEIVE() {
        return (int)0L;
    }
    public static int SD_SEND() {
        return (int)1L;
    }
    public static int SD_BOTH() {
        return (int)2L;
    }
    public static int SG_UNCONSTRAINED_GROUP() {
        return (int)1L;
    }
    public static int SG_CONSTRAINED_GROUP() {
        return (int)2L;
    }
    public static int MAX_PROTOCOL_CHAIN() {
        return (int)7L;
    }
    public static int BASE_PROTOCOL() {
        return (int)1L;
    }
    public static int LAYERED_PROTOCOL() {
        return (int)0L;
    }
    public static int WSAPROTOCOL_LEN() {
        return (int)255L;
    }
    public static int PFL_MULTIPLE_PROTO_ENTRIES() {
        return (int)1L;
    }
    public static int PFL_RECOMMENDED_PROTO_ENTRY() {
        return (int)2L;
    }
    public static int PFL_HIDDEN() {
        return (int)4L;
    }
    public static int PFL_MATCHES_PROTOCOL_ZERO() {
        return (int)8L;
    }
    public static int PFL_NETWORKDIRECT_PROVIDER() {
        return (int)16L;
    }
    public static int XP1_CONNECTIONLESS() {
        return (int)1L;
    }
    public static int XP1_GUARANTEED_DELIVERY() {
        return (int)2L;
    }
    public static int XP1_GUARANTEED_ORDER() {
        return (int)4L;
    }
    public static int XP1_MESSAGE_ORIENTED() {
        return (int)8L;
    }
    public static int XP1_PSEUDO_STREAM() {
        return (int)16L;
    }
    public static int XP1_GRACEFUL_CLOSE() {
        return (int)32L;
    }
    public static int XP1_EXPEDITED_DATA() {
        return (int)64L;
    }
    public static int XP1_CONNECT_DATA() {
        return (int)128L;
    }
    public static int XP1_DISCONNECT_DATA() {
        return (int)256L;
    }
    public static int XP1_SUPPORT_BROADCAST() {
        return (int)512L;
    }
    public static int XP1_SUPPORT_MULTIPOINT() {
        return (int)1024L;
    }
    public static int XP1_MULTIPOINT_CONTROL_PLANE() {
        return (int)2048L;
    }
    public static int XP1_MULTIPOINT_DATA_PLANE() {
        return (int)4096L;
    }
    public static int XP1_QOS_SUPPORTED() {
        return (int)8192L;
    }
    public static int XP1_INTERRUPT() {
        return (int)16384L;
    }
    public static int XP1_UNI_SEND() {
        return (int)32768L;
    }
    public static int XP1_UNI_RECV() {
        return (int)65536L;
    }
    public static int XP1_IFS_HANDLES() {
        return (int)131072L;
    }
    public static int XP1_PARTIAL_MESSAGE() {
        return (int)262144L;
    }
    public static int XP1_SAN_SUPPORT_SDP() {
        return (int)524288L;
    }
    public static int BIGENDIAN() {
        return (int)0L;
    }
    public static int LITTLEENDIAN() {
        return (int)1L;
    }
    public static int SECURITY_PROTOCOL_NONE() {
        return (int)0L;
    }
    public static int JL_SENDER_ONLY() {
        return (int)1L;
    }
    public static int JL_RECEIVER_ONLY() {
        return (int)2L;
    }
    public static int JL_BOTH() {
        return (int)4L;
    }
    public static int WSA_FLAG_OVERLAPPED() {
        return (int)1L;
    }
    public static int WSA_FLAG_MULTIPOINT_C_ROOT() {
        return (int)2L;
    }
    public static int WSA_FLAG_MULTIPOINT_C_LEAF() {
        return (int)4L;
    }
    public static int WSA_FLAG_MULTIPOINT_D_ROOT() {
        return (int)8L;
    }
    public static int WSA_FLAG_MULTIPOINT_D_LEAF() {
        return (int)16L;
    }
    public static int WSA_FLAG_ACCESS_SYSTEM_SECURITY() {
        return (int)64L;
    }
    public static int WSA_FLAG_NO_HANDLE_INHERIT() {
        return (int)128L;
    }
    public static int WSA_FLAG_REGISTERED_IO() {
        return (int)256L;
    }
    public static int TH_NETDEV() {
        return (int)1L;
    }
    public static int TH_TAPI() {
        return (int)2L;
    }
    public static int LUP_DEEP() {
        return (int)1L;
    }
    public static int LUP_CONTAINERS() {
        return (int)2L;
    }
    public static int LUP_NOCONTAINERS() {
        return (int)4L;
    }
    public static int LUP_NEAREST() {
        return (int)8L;
    }
    public static int LUP_RETURN_NAME() {
        return (int)16L;
    }
    public static int LUP_RETURN_TYPE() {
        return (int)32L;
    }
    public static int LUP_RETURN_VERSION() {
        return (int)64L;
    }
    public static int LUP_RETURN_COMMENT() {
        return (int)128L;
    }
    public static int LUP_RETURN_ADDR() {
        return (int)256L;
    }
    public static int LUP_RETURN_BLOB() {
        return (int)512L;
    }
    public static int LUP_RETURN_ALIASES() {
        return (int)1024L;
    }
    public static int LUP_RETURN_QUERY_STRING() {
        return (int)2048L;
    }
    public static int LUP_RETURN_ALL() {
        return (int)4080L;
    }
    public static int LUP_RES_SERVICE() {
        return (int)32768L;
    }
    public static int LUP_FLUSHCACHE() {
        return (int)4096L;
    }
    public static int LUP_FLUSHPREVIOUS() {
        return (int)8192L;
    }
    public static int LUP_NON_AUTHORITATIVE() {
        return (int)16384L;
    }
    public static int LUP_SECURE() {
        return (int)32768L;
    }
    public static int LUP_RETURN_PREFERRED_NAMES() {
        return (int)65536L;
    }
    public static int LUP_DNS_ONLY() {
        return (int)131072L;
    }
    public static int LUP_ADDRCONFIG() {
        return (int)1048576L;
    }
    public static int LUP_DUAL_ADDR() {
        return (int)2097152L;
    }
    public static int LUP_FILESERVER() {
        return (int)4194304L;
    }
    public static int LUP_DISABLE_IDN_ENCODING() {
        return (int)8388608L;
    }
    public static int LUP_API_ANSI() {
        return (int)16777216L;
    }
    public static int RESULT_IS_ALIAS() {
        return (int)1L;
    }
    public static int RESULT_IS_ADDED() {
        return (int)16L;
    }
    public static int RESULT_IS_CHANGED() {
        return (int)32L;
    }
    public static int RESULT_IS_DELETED() {
        return (int)64L;
    }
    public static int POLLRDNORM() {
        return (int)256L;
    }
    public static int POLLRDBAND() {
        return (int)512L;
    }
    public static int POLLPRI() {
        return (int)1024L;
    }
    public static int POLLWRNORM() {
        return (int)16L;
    }
    public static int POLLWRBAND() {
        return (int)32L;
    }
    public static int POLLERR() {
        return (int)1L;
    }
    public static int POLLHUP() {
        return (int)2L;
    }
    public static int POLLNVAL() {
        return (int)4L;
    }
    public static int IFF_UP() {
        return (int)1L;
    }
    public static int IFF_BROADCAST() {
        return (int)2L;
    }
    public static int IFF_LOOPBACK() {
        return (int)4L;
    }
    public static int IFF_POINTTOPOINT() {
        return (int)8L;
    }
    public static int IFF_MULTICAST() {
        return (int)16L;
    }
    public static int IP_OPTIONS() {
        return (int)1L;
    }
    public static int IP_HDRINCL() {
        return (int)2L;
    }
    public static int IP_TOS() {
        return (int)3L;
    }
    public static int IP_TTL() {
        return (int)4L;
    }
    public static int IP_MULTICAST_IF() {
        return (int)9L;
    }
    public static int IP_MULTICAST_TTL() {
        return (int)10L;
    }
    public static int IP_MULTICAST_LOOP() {
        return (int)11L;
    }
    public static int IP_ADD_MEMBERSHIP() {
        return (int)12L;
    }
    public static int IP_DROP_MEMBERSHIP() {
        return (int)13L;
    }
    public static int IP_DONTFRAGMENT() {
        return (int)14L;
    }
    public static int IP_ADD_SOURCE_MEMBERSHIP() {
        return (int)15L;
    }
    public static int IP_DROP_SOURCE_MEMBERSHIP() {
        return (int)16L;
    }
    public static int IP_BLOCK_SOURCE() {
        return (int)17L;
    }
    public static int IP_UNBLOCK_SOURCE() {
        return (int)18L;
    }
    public static int IP_PKTINFO() {
        return (int)19L;
    }
    public static int IP_HOPLIMIT() {
        return (int)21L;
    }
    public static int IP_RECVTTL() {
        return (int)21L;
    }
    public static int IP_RECEIVE_BROADCAST() {
        return (int)22L;
    }
    public static int IP_RECVIF() {
        return (int)24L;
    }
    public static int IP_RECVDSTADDR() {
        return (int)25L;
    }
    public static int IP_IFLIST() {
        return (int)28L;
    }
    public static int IP_ADD_IFLIST() {
        return (int)29L;
    }
    public static int IP_DEL_IFLIST() {
        return (int)30L;
    }
    public static int IP_UNICAST_IF() {
        return (int)31L;
    }
    public static int IP_RTHDR() {
        return (int)32L;
    }
    public static int IP_GET_IFLIST() {
        return (int)33L;
    }
    public static int IP_RECVRTHDR() {
        return (int)38L;
    }
    public static int IP_TCLASS() {
        return (int)39L;
    }
    public static int IP_RECVTCLASS() {
        return (int)40L;
    }
    public static int IP_RECVTOS() {
        return (int)40L;
    }
    public static int IP_ORIGINAL_ARRIVAL_IF() {
        return (int)47L;
    }
    public static int IP_ECN() {
        return (int)50L;
    }
    public static int IP_PKTINFO_EX() {
        return (int)51L;
    }
    public static int IP_WFP_REDIRECT_RECORDS() {
        return (int)60L;
    }
    public static int IP_WFP_REDIRECT_CONTEXT() {
        return (int)70L;
    }
    public static int IP_MTU_DISCOVER() {
        return (int)71L;
    }
    public static int IP_MTU() {
        return (int)73L;
    }
    public static int IP_NRT_INTERFACE() {
        return (int)74L;
    }
    public static int IP_RECVERR() {
        return (int)75L;
    }
    public static int IP_USER_MTU() {
        return (int)76L;
    }
    public static int IN6ADDR_LINKLOCALPREFIX_LENGTH() {
        return (int)64L;
    }
    public static int IN6ADDR_MULTICASTPREFIX_LENGTH() {
        return (int)8L;
    }
    public static int IN6ADDR_SOLICITEDNODEMULTICASTPREFIX_LENGTH() {
        return (int)104L;
    }
    public static int IN6ADDR_V4MAPPEDPREFIX_LENGTH() {
        return (int)96L;
    }
    public static int IN6ADDR_6TO4PREFIX_LENGTH() {
        return (int)16L;
    }
    public static int IN6ADDR_TEREDOPREFIX_LENGTH() {
        return (int)32L;
    }
    public static int MCAST_JOIN_GROUP() {
        return (int)41L;
    }
    public static int MCAST_LEAVE_GROUP() {
        return (int)42L;
    }
    public static int MCAST_BLOCK_SOURCE() {
        return (int)43L;
    }
    public static int MCAST_UNBLOCK_SOURCE() {
        return (int)44L;
    }
    public static int MCAST_JOIN_SOURCE_GROUP() {
        return (int)45L;
    }
    public static int MCAST_LEAVE_SOURCE_GROUP() {
        return (int)46L;
    }
    public static int IPV6_HOPOPTS() {
        return (int)1L;
    }
    public static int IPV6_HDRINCL() {
        return (int)2L;
    }
    public static int IPV6_UNICAST_HOPS() {
        return (int)4L;
    }
    public static int IPV6_MULTICAST_IF() {
        return (int)9L;
    }
    public static int IPV6_MULTICAST_HOPS() {
        return (int)10L;
    }
    public static int IPV6_MULTICAST_LOOP() {
        return (int)11L;
    }
    public static int IPV6_ADD_MEMBERSHIP() {
        return (int)12L;
    }
    public static int IPV6_DROP_MEMBERSHIP() {
        return (int)13L;
    }
    public static int IPV6_DONTFRAG() {
        return (int)14L;
    }
    public static int IPV6_PKTINFO() {
        return (int)19L;
    }
    public static int IPV6_HOPLIMIT() {
        return (int)21L;
    }
    public static int IPV6_PROTECTION_LEVEL() {
        return (int)23L;
    }
    public static int IPV6_RECVIF() {
        return (int)24L;
    }
    public static int IPV6_RECVDSTADDR() {
        return (int)25L;
    }
    public static int IPV6_CHECKSUM() {
        return (int)26L;
    }
    public static int IPV6_V6ONLY() {
        return (int)27L;
    }
    public static int IPV6_IFLIST() {
        return (int)28L;
    }
    public static int IPV6_ADD_IFLIST() {
        return (int)29L;
    }
    public static int IPV6_DEL_IFLIST() {
        return (int)30L;
    }
    public static int IPV6_UNICAST_IF() {
        return (int)31L;
    }
    public static int IPV6_RTHDR() {
        return (int)32L;
    }
    public static int IPV6_GET_IFLIST() {
        return (int)33L;
    }
    public static int IPV6_RECVRTHDR() {
        return (int)38L;
    }
    public static int IPV6_TCLASS() {
        return (int)39L;
    }
    public static int IPV6_RECVTCLASS() {
        return (int)40L;
    }
    public static int IPV6_ECN() {
        return (int)50L;
    }
    public static int IPV6_PKTINFO_EX() {
        return (int)51L;
    }
    public static int IPV6_WFP_REDIRECT_RECORDS() {
        return (int)60L;
    }
    public static int IPV6_WFP_REDIRECT_CONTEXT() {
        return (int)70L;
    }
    public static int IPV6_MTU_DISCOVER() {
        return (int)71L;
    }
    public static int IPV6_MTU() {
        return (int)72L;
    }
    public static int IPV6_NRT_INTERFACE() {
        return (int)74L;
    }
    public static int IPV6_RECVERR() {
        return (int)75L;
    }
    public static int IPV6_USER_MTU() {
        return (int)76L;
    }
    public static int PROTECTION_LEVEL_UNRESTRICTED() {
        return (int)10L;
    }
    public static int PROTECTION_LEVEL_EDGERESTRICTED() {
        return (int)20L;
    }
    public static int PROTECTION_LEVEL_RESTRICTED() {
        return (int)30L;
    }
    public static int INET_ADDRSTRLEN() {
        return (int)22L;
    }
    public static int INET6_ADDRSTRLEN() {
        return (int)65L;
    }
    public static int TCP_OFFLOAD_NO_PREFERENCE() {
        return (int)0L;
    }
    public static int TCP_OFFLOAD_NOT_PREFERRED() {
        return (int)1L;
    }
    public static int TCP_OFFLOAD_PREFERRED() {
        return (int)2L;
    }
    public static int TCP_EXPEDITED_1122() {
        return (int)2L;
    }
    public static int TCP_KEEPALIVE() {
        return (int)3L;
    }
    public static int TCP_MAXSEG() {
        return (int)4L;
    }
    public static int TCP_MAXRT() {
        return (int)5L;
    }
    public static int TCP_STDURG() {
        return (int)6L;
    }
    public static int TCP_NOURG() {
        return (int)7L;
    }
    public static int TCP_ATMARK() {
        return (int)8L;
    }
    public static int TCP_NOSYNRETRIES() {
        return (int)9L;
    }
    public static int TCP_TIMESTAMPS() {
        return (int)10L;
    }
    public static int TCP_OFFLOAD_PREFERENCE() {
        return (int)11L;
    }
    public static int TCP_CONGESTION_ALGORITHM() {
        return (int)12L;
    }
    public static int TCP_DELAY_FIN_ACK() {
        return (int)13L;
    }
    public static int TCP_MAXRTMS() {
        return (int)14L;
    }
    public static int TCP_FASTOPEN() {
        return (int)15L;
    }
    public static int TCP_KEEPCNT() {
        return (int)16L;
    }
    public static int TCP_KEEPINTVL() {
        return (int)17L;
    }
    public static int TCP_FAIL_CONNECT_ON_ICMP_ERROR() {
        return (int)18L;
    }
    public static int TCP_ICMP_ERROR_INFO() {
        return (int)19L;
    }
    public static int UDP_SEND_MSG_SIZE() {
        return (int)2L;
    }
    public static int UDP_RECV_MAX_COALESCED_SIZE() {
        return (int)3L;
    }
    public static int UDP_COALESCED_INFO() {
        return (int)3L;
    }
    public static int UDP_NOCHECKSUM() {
        return (int)1L;
    }
    public static int UDP_CHECKSUM_COVERAGE() {
        return (int)20L;
    }
    public static int GAI_STRERROR_BUFFER_SIZE() {
        return (int)1024L;
    }
    public static int CURL_PROGRESSFUNC_CONTINUE() {
        return (int)268435457L;
    }
    public static int CURL_MAX_READ_SIZE() {
        return (int)524288L;
    }
    public static int CURL_MAX_WRITE_SIZE() {
        return (int)16384L;
    }
    public static int CURL_WRITEFUNC_PAUSE() {
        return (int)268435457L;
    }
    public static int CURL_CHUNK_BGN_FUNC_OK() {
        return (int)0L;
    }
    public static int CURL_CHUNK_BGN_FUNC_FAIL() {
        return (int)1L;
    }
    public static int CURL_CHUNK_BGN_FUNC_SKIP() {
        return (int)2L;
    }
    public static int CURL_CHUNK_END_FUNC_OK() {
        return (int)0L;
    }
    public static int CURL_CHUNK_END_FUNC_FAIL() {
        return (int)1L;
    }
    public static int CURL_FNMATCHFUNC_MATCH() {
        return (int)0L;
    }
    public static int CURL_FNMATCHFUNC_NOMATCH() {
        return (int)1L;
    }
    public static int CURL_FNMATCHFUNC_FAIL() {
        return (int)2L;
    }
    public static int CURL_SEEKFUNC_OK() {
        return (int)0L;
    }
    public static int CURL_SEEKFUNC_FAIL() {
        return (int)1L;
    }
    public static int CURL_SEEKFUNC_CANTSEEK() {
        return (int)2L;
    }
    public static int CURL_READFUNC_ABORT() {
        return (int)268435456L;
    }
    public static int CURL_READFUNC_PAUSE() {
        return (int)268435457L;
    }
    public static int CURL_TRAILERFUNC_OK() {
        return (int)0L;
    }
    public static int CURL_TRAILERFUNC_ABORT() {
        return (int)1L;
    }
    public static int CURL_SOCKOPT_OK() {
        return (int)0L;
    }
    public static int CURL_SOCKOPT_ERROR() {
        return (int)1L;
    }
    public static int CURL_SOCKOPT_ALREADY_CONNECTED() {
        return (int)2L;
    }
    public static int CURL_PREREQFUNC_OK() {
        return (int)0L;
    }
    public static int CURL_PREREQFUNC_ABORT() {
        return (int)1L;
    }
    public static int CURLE_ALREADY_COMPLETE() {
        return (int)99999L;
    }
    public static int CURLSSH_AUTH_NONE() {
        return (int)0L;
    }
    public static int CURLGSSAPI_DELEGATION_NONE() {
        return (int)0L;
    }
    public static int CURL_ERROR_SIZE() {
        return (int)256L;
    }
    public static int CURLHEADER_UNIFIED() {
        return (int)0L;
    }
    public static int CURLOPTTYPE_LONG() {
        return (int)0L;
    }
    public static int CURLOPTTYPE_OBJECTPOINT() {
        return (int)10000L;
    }
    public static int CURLOPTTYPE_FUNCTIONPOINT() {
        return (int)20000L;
    }
    public static int CURLOPTTYPE_OFF_T() {
        return (int)30000L;
    }
    public static int CURLOPTTYPE_BLOB() {
        return (int)40000L;
    }
    public static int CURL_IPRESOLVE_WHATEVER() {
        return (int)0L;
    }
    public static int CURL_IPRESOLVE_V4() {
        return (int)1L;
    }
    public static int CURL_IPRESOLVE_V6() {
        return (int)2L;
    }
    public static int CURL_REDIR_GET_ALL() {
        return (int)0L;
    }
    public static int CURL_REDIR_POST_301() {
        return (int)1L;
    }
    public static int CURL_REDIR_POST_302() {
        return (int)2L;
    }
    public static int CURL_REDIR_POST_303() {
        return (int)4L;
    }
    public static int CURLINFO_STRING() {
        return (int)1048576L;
    }
    public static int CURLINFO_LONG() {
        return (int)2097152L;
    }
    public static int CURLINFO_DOUBLE() {
        return (int)3145728L;
    }
    public static int CURLINFO_SLIST() {
        return (int)4194304L;
    }
    public static int CURLINFO_PTR() {
        return (int)4194304L;
    }
    public static int CURLINFO_SOCKET() {
        return (int)5242880L;
    }
    public static int CURLINFO_OFF_T() {
        return (int)6291456L;
    }
    public static int CURLINFO_MASK() {
        return (int)1048575L;
    }
    public static int CURLINFO_TYPEMASK() {
        return (int)15728640L;
    }
    public static int CURL_GLOBAL_NOTHING() {
        return (int)0L;
    }
    public static int CURL_BLOB_COPY() {
        return (int)1L;
    }
    public static int CURL_BLOB_NOCOPY() {
        return (int)0L;
    }
    public static int CURL_WAIT_POLLIN() {
        return (int)1L;
    }
    public static int CURL_WAIT_POLLPRI() {
        return (int)2L;
    }
    public static int CURL_WAIT_POLLOUT() {
        return (int)4L;
    }
    public static int CURL_POLL_NONE() {
        return (int)0L;
    }
    public static int CURL_POLL_IN() {
        return (int)1L;
    }
    public static int CURL_POLL_OUT() {
        return (int)2L;
    }
    public static int CURL_POLL_INOUT() {
        return (int)3L;
    }
    public static int CURL_POLL_REMOVE() {
        return (int)4L;
    }
    public static int CURL_CSELECT_IN() {
        return (int)1L;
    }
    public static int CURL_CSELECT_OUT() {
        return (int)2L;
    }
    public static int CURL_CSELECT_ERR() {
        return (int)4L;
    }
    public static int CURL_PUSH_OK() {
        return (int)0L;
    }
    public static int CURL_PUSH_DENY() {
        return (int)1L;
    }
    public static int CURL_PUSH_ERROROUT() {
        return (int)2L;
    }
    public static OfInt curl_socklen_t = Constants$root.C_LONG$LAYOUT;
    public static OfLong curl_off_t = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfAddress va_list = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle __va_start$MH() {
        return RuntimeHelper.requireNonNull(constants$0.__va_start$MH,"__va_start");
    }
    public static void __va_start ( Addressable x0, Object... x1) {
        var mh$ = __va_start$MH();
        try {
            mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfLong ptrdiff_t = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfLong intptr_t = Constants$root.C_LONG_LONG$LAYOUT;
    public static MethodHandle __security_init_cookie$MH() {
        return RuntimeHelper.requireNonNull(constants$0.__security_init_cookie$MH,"__security_init_cookie");
    }
    public static void __security_init_cookie () {
        var mh$ = __security_init_cookie$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __security_check_cookie$MH() {
        return RuntimeHelper.requireNonNull(constants$0.__security_check_cookie$MH,"__security_check_cookie");
    }
    public static void __security_check_cookie ( long _StackCookie) {
        var mh$ = __security_check_cookie$MH();
        try {
            mh$.invokeExact(_StackCookie);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __report_gsfailure$MH() {
        return RuntimeHelper.requireNonNull(constants$0.__report_gsfailure$MH,"__report_gsfailure");
    }
    public static void __report_gsfailure ( long _StackCookie) {
        var mh$ = __report_gsfailure$MH();
        try {
            mh$.invokeExact(_StackCookie);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MemoryLayout __security_cookie$LAYOUT() {
        return constants$0.__security_cookie$LAYOUT;
    }
    public static VarHandle __security_cookie$VH() {
        return constants$0.__security_cookie$VH;
    }
    public static MemorySegment __security_cookie$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$0.__security_cookie$SEGMENT,"__security_cookie");
    }
    public static long __security_cookie$get() {
        return (long) constants$0.__security_cookie$VH.get(RuntimeHelper.requireNonNull(constants$0.__security_cookie$SEGMENT, "__security_cookie"));
    }
    public static void __security_cookie$set( long x) {
        constants$0.__security_cookie$VH.set(RuntimeHelper.requireNonNull(constants$0.__security_cookie$SEGMENT, "__security_cookie"), x);
    }
    public static MethodHandle _invalid_parameter_noinfo$MH() {
        return RuntimeHelper.requireNonNull(constants$0._invalid_parameter_noinfo$MH,"_invalid_parameter_noinfo");
    }
    public static void _invalid_parameter_noinfo () {
        var mh$ = _invalid_parameter_noinfo$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _invalid_parameter_noinfo_noreturn$MH() {
        return RuntimeHelper.requireNonNull(constants$1._invalid_parameter_noinfo_noreturn$MH,"_invalid_parameter_noinfo_noreturn");
    }
    public static void _invalid_parameter_noinfo_noreturn () {
        var mh$ = _invalid_parameter_noinfo_noreturn$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _invoke_watson$MH() {
        return RuntimeHelper.requireNonNull(constants$1._invoke_watson$MH,"_invoke_watson");
    }
    public static void _invoke_watson ( Addressable _Expression,  Addressable _FunctionName,  Addressable _FileName,  int _LineNo,  long _Reserved) {
        var mh$ = _invoke_watson$MH();
        try {
            mh$.invokeExact(_Expression, _FunctionName, _FileName, _LineNo, _Reserved);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfInt errno_t = Constants$root.C_LONG$LAYOUT;
    public static OfInt __time32_t = Constants$root.C_LONG$LAYOUT;
    public static OfLong __time64_t = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfAddress _locale_t = Constants$root.C_POINTER$LAYOUT;
    public static OfLong time_t = Constants$root.C_LONG_LONG$LAYOUT;
    public static MethodHandle __local_stdio_printf_options$MH() {
        return RuntimeHelper.requireNonNull(constants$1.__local_stdio_printf_options$MH,"__local_stdio_printf_options");
    }
    public static MemoryAddress __local_stdio_printf_options () {
        var mh$ = __local_stdio_printf_options$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __local_stdio_scanf_options$MH() {
        return RuntimeHelper.requireNonNull(constants$1.__local_stdio_scanf_options$MH,"__local_stdio_scanf_options");
    }
    public static MemoryAddress __local_stdio_scanf_options () {
        var mh$ = __local_stdio_scanf_options$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __acrt_iob_func$MH() {
        return RuntimeHelper.requireNonNull(constants$1.__acrt_iob_func$MH,"__acrt_iob_func");
    }
    public static MemoryAddress __acrt_iob_func ( int _Ix) {
        var mh$ = __acrt_iob_func$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Ix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fgetwc$MH() {
        return RuntimeHelper.requireNonNull(constants$1.fgetwc$MH,"fgetwc");
    }
    public static short fgetwc ( Addressable _Stream) {
        var mh$ = fgetwc$MH();
        try {
            return (short)mh$.invokeExact(_Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fgetwchar$MH() {
        return RuntimeHelper.requireNonNull(constants$2._fgetwchar$MH,"_fgetwchar");
    }
    public static short _fgetwchar () {
        var mh$ = _fgetwchar$MH();
        try {
            return (short)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fputwc$MH() {
        return RuntimeHelper.requireNonNull(constants$2.fputwc$MH,"fputwc");
    }
    public static short fputwc ( short _Character,  Addressable _Stream) {
        var mh$ = fputwc$MH();
        try {
            return (short)mh$.invokeExact(_Character, _Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fputwchar$MH() {
        return RuntimeHelper.requireNonNull(constants$2._fputwchar$MH,"_fputwchar");
    }
    public static short _fputwchar ( short _Character) {
        var mh$ = _fputwchar$MH();
        try {
            return (short)mh$.invokeExact(_Character);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getwc$MH() {
        return RuntimeHelper.requireNonNull(constants$2.getwc$MH,"getwc");
    }
    public static short getwc ( Addressable _Stream) {
        var mh$ = getwc$MH();
        try {
            return (short)mh$.invokeExact(_Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getwchar$MH() {
        return RuntimeHelper.requireNonNull(constants$2.getwchar$MH,"getwchar");
    }
    public static short getwchar () {
        var mh$ = getwchar$MH();
        try {
            return (short)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fgetws$MH() {
        return RuntimeHelper.requireNonNull(constants$2.fgetws$MH,"fgetws");
    }
    public static MemoryAddress fgetws ( Addressable _Buffer,  int _BufferCount,  Addressable _Stream) {
        var mh$ = fgetws$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Buffer, _BufferCount, _Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fputws$MH() {
        return RuntimeHelper.requireNonNull(constants$3.fputws$MH,"fputws");
    }
    public static int fputws ( Addressable _Buffer,  Addressable _Stream) {
        var mh$ = fputws$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _getws_s$MH() {
        return RuntimeHelper.requireNonNull(constants$3._getws_s$MH,"_getws_s");
    }
    public static MemoryAddress _getws_s ( Addressable _Buffer,  long _BufferCount) {
        var mh$ = _getws_s$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Buffer, _BufferCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle putwc$MH() {
        return RuntimeHelper.requireNonNull(constants$3.putwc$MH,"putwc");
    }
    public static short putwc ( short _Character,  Addressable _Stream) {
        var mh$ = putwc$MH();
        try {
            return (short)mh$.invokeExact(_Character, _Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle putwchar$MH() {
        return RuntimeHelper.requireNonNull(constants$3.putwchar$MH,"putwchar");
    }
    public static short putwchar ( short _Character) {
        var mh$ = putwchar$MH();
        try {
            return (short)mh$.invokeExact(_Character);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _putws$MH() {
        return RuntimeHelper.requireNonNull(constants$3._putws$MH,"_putws");
    }
    public static int _putws ( Addressable _Buffer) {
        var mh$ = _putws$MH();
        try {
            return (int)mh$.invokeExact(_Buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ungetwc$MH() {
        return RuntimeHelper.requireNonNull(constants$3.ungetwc$MH,"ungetwc");
    }
    public static short ungetwc ( short _Character,  Addressable _Stream) {
        var mh$ = ungetwc$MH();
        try {
            return (short)mh$.invokeExact(_Character, _Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wfdopen$MH() {
        return RuntimeHelper.requireNonNull(constants$4._wfdopen$MH,"_wfdopen");
    }
    public static MemoryAddress _wfdopen ( int _FileHandle,  Addressable _Mode) {
        var mh$ = _wfdopen$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_FileHandle, _Mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wfopen$MH() {
        return RuntimeHelper.requireNonNull(constants$4._wfopen$MH,"_wfopen");
    }
    public static MemoryAddress _wfopen ( Addressable _FileName,  Addressable _Mode) {
        var mh$ = _wfopen$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_FileName, _Mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wfopen_s$MH() {
        return RuntimeHelper.requireNonNull(constants$4._wfopen_s$MH,"_wfopen_s");
    }
    public static int _wfopen_s ( Addressable _Stream,  Addressable _FileName,  Addressable _Mode) {
        var mh$ = _wfopen_s$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _FileName, _Mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wfreopen$MH() {
        return RuntimeHelper.requireNonNull(constants$4._wfreopen$MH,"_wfreopen");
    }
    public static MemoryAddress _wfreopen ( Addressable _FileName,  Addressable _Mode,  Addressable _OldStream) {
        var mh$ = _wfreopen$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_FileName, _Mode, _OldStream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wfreopen_s$MH() {
        return RuntimeHelper.requireNonNull(constants$4._wfreopen_s$MH,"_wfreopen_s");
    }
    public static int _wfreopen_s ( Addressable _Stream,  Addressable _FileName,  Addressable _Mode,  Addressable _OldStream) {
        var mh$ = _wfreopen_s$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _FileName, _Mode, _OldStream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wfsopen$MH() {
        return RuntimeHelper.requireNonNull(constants$4._wfsopen$MH,"_wfsopen");
    }
    public static MemoryAddress _wfsopen ( Addressable _FileName,  Addressable _Mode,  int _ShFlag) {
        var mh$ = _wfsopen$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_FileName, _Mode, _ShFlag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wperror$MH() {
        return RuntimeHelper.requireNonNull(constants$5._wperror$MH,"_wperror");
    }
    public static void _wperror ( Addressable _ErrorMessage) {
        var mh$ = _wperror$MH();
        try {
            mh$.invokeExact(_ErrorMessage);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wpopen$MH() {
        return RuntimeHelper.requireNonNull(constants$5._wpopen$MH,"_wpopen");
    }
    public static MemoryAddress _wpopen ( Addressable _Command,  Addressable _Mode) {
        var mh$ = _wpopen$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Command, _Mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wremove$MH() {
        return RuntimeHelper.requireNonNull(constants$5._wremove$MH,"_wremove");
    }
    public static int _wremove ( Addressable _FileName) {
        var mh$ = _wremove$MH();
        try {
            return (int)mh$.invokeExact(_FileName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wtempnam$MH() {
        return RuntimeHelper.requireNonNull(constants$5._wtempnam$MH,"_wtempnam");
    }
    public static MemoryAddress _wtempnam ( Addressable _Directory,  Addressable _FilePrefix) {
        var mh$ = _wtempnam$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Directory, _FilePrefix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wtmpnam_s$MH() {
        return RuntimeHelper.requireNonNull(constants$5._wtmpnam_s$MH,"_wtmpnam_s");
    }
    public static int _wtmpnam_s ( Addressable _Buffer,  long _BufferCount) {
        var mh$ = _wtmpnam_s$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wtmpnam$MH() {
        return RuntimeHelper.requireNonNull(constants$5._wtmpnam$MH,"_wtmpnam");
    }
    public static MemoryAddress _wtmpnam ( Addressable _Buffer) {
        var mh$ = _wtmpnam$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fgetwc_nolock$MH() {
        return RuntimeHelper.requireNonNull(constants$6._fgetwc_nolock$MH,"_fgetwc_nolock");
    }
    public static short _fgetwc_nolock ( Addressable _Stream) {
        var mh$ = _fgetwc_nolock$MH();
        try {
            return (short)mh$.invokeExact(_Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fputwc_nolock$MH() {
        return RuntimeHelper.requireNonNull(constants$6._fputwc_nolock$MH,"_fputwc_nolock");
    }
    public static short _fputwc_nolock ( short _Character,  Addressable _Stream) {
        var mh$ = _fputwc_nolock$MH();
        try {
            return (short)mh$.invokeExact(_Character, _Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _getwc_nolock$MH() {
        return RuntimeHelper.requireNonNull(constants$6._getwc_nolock$MH,"_getwc_nolock");
    }
    public static short _getwc_nolock ( Addressable _Stream) {
        var mh$ = _getwc_nolock$MH();
        try {
            return (short)mh$.invokeExact(_Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _putwc_nolock$MH() {
        return RuntimeHelper.requireNonNull(constants$6._putwc_nolock$MH,"_putwc_nolock");
    }
    public static short _putwc_nolock ( short _Character,  Addressable _Stream) {
        var mh$ = _putwc_nolock$MH();
        try {
            return (short)mh$.invokeExact(_Character, _Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _ungetwc_nolock$MH() {
        return RuntimeHelper.requireNonNull(constants$6._ungetwc_nolock$MH,"_ungetwc_nolock");
    }
    public static short _ungetwc_nolock ( short _Character,  Addressable _Stream) {
        var mh$ = _ungetwc_nolock$MH();
        try {
            return (short)mh$.invokeExact(_Character, _Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __stdio_common_vfwprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$6.__stdio_common_vfwprintf$MH,"__stdio_common_vfwprintf");
    }
    public static int __stdio_common_vfwprintf ( long _Options,  Addressable _Stream,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = __stdio_common_vfwprintf$MH();
        try {
            return (int)mh$.invokeExact(_Options, _Stream, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __stdio_common_vfwprintf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$7.__stdio_common_vfwprintf_s$MH,"__stdio_common_vfwprintf_s");
    }
    public static int __stdio_common_vfwprintf_s ( long _Options,  Addressable _Stream,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = __stdio_common_vfwprintf_s$MH();
        try {
            return (int)mh$.invokeExact(_Options, _Stream, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __stdio_common_vfwprintf_p$MH() {
        return RuntimeHelper.requireNonNull(constants$7.__stdio_common_vfwprintf_p$MH,"__stdio_common_vfwprintf_p");
    }
    public static int __stdio_common_vfwprintf_p ( long _Options,  Addressable _Stream,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = __stdio_common_vfwprintf_p$MH();
        try {
            return (int)mh$.invokeExact(_Options, _Stream, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vfwprintf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$7._vfwprintf_l$MH,"_vfwprintf_l");
    }
    public static int _vfwprintf_l ( Addressable _Stream,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vfwprintf_l$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vfwprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$7.vfwprintf$MH,"vfwprintf");
    }
    public static int vfwprintf ( Addressable _Stream,  Addressable _Format,  Addressable _ArgList) {
        var mh$ = vfwprintf$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vfwprintf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$7._vfwprintf_s_l$MH,"_vfwprintf_s_l");
    }
    public static int _vfwprintf_s_l ( Addressable _Stream,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vfwprintf_s_l$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vfwprintf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$7.vfwprintf_s$MH,"vfwprintf_s");
    }
    public static int vfwprintf_s ( Addressable _Stream,  Addressable _Format,  Addressable _ArgList) {
        var mh$ = vfwprintf_s$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vfwprintf_p_l$MH() {
        return RuntimeHelper.requireNonNull(constants$8._vfwprintf_p_l$MH,"_vfwprintf_p_l");
    }
    public static int _vfwprintf_p_l ( Addressable _Stream,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vfwprintf_p_l$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vfwprintf_p$MH() {
        return RuntimeHelper.requireNonNull(constants$8._vfwprintf_p$MH,"_vfwprintf_p");
    }
    public static int _vfwprintf_p ( Addressable _Stream,  Addressable _Format,  Addressable _ArgList) {
        var mh$ = _vfwprintf_p$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vwprintf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$8._vwprintf_l$MH,"_vwprintf_l");
    }
    public static int _vwprintf_l ( Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vwprintf_l$MH();
        try {
            return (int)mh$.invokeExact(_Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vwprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$8.vwprintf$MH,"vwprintf");
    }
    public static int vwprintf ( Addressable _Format,  Addressable _ArgList) {
        var mh$ = vwprintf$MH();
        try {
            return (int)mh$.invokeExact(_Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vwprintf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$8._vwprintf_s_l$MH,"_vwprintf_s_l");
    }
    public static int _vwprintf_s_l ( Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vwprintf_s_l$MH();
        try {
            return (int)mh$.invokeExact(_Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vwprintf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$8.vwprintf_s$MH,"vwprintf_s");
    }
    public static int vwprintf_s ( Addressable _Format,  Addressable _ArgList) {
        var mh$ = vwprintf_s$MH();
        try {
            return (int)mh$.invokeExact(_Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vwprintf_p_l$MH() {
        return RuntimeHelper.requireNonNull(constants$9._vwprintf_p_l$MH,"_vwprintf_p_l");
    }
    public static int _vwprintf_p_l ( Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vwprintf_p_l$MH();
        try {
            return (int)mh$.invokeExact(_Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vwprintf_p$MH() {
        return RuntimeHelper.requireNonNull(constants$9._vwprintf_p$MH,"_vwprintf_p");
    }
    public static int _vwprintf_p ( Addressable _Format,  Addressable _ArgList) {
        var mh$ = _vwprintf_p$MH();
        try {
            return (int)mh$.invokeExact(_Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fwprintf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$9._fwprintf_l$MH,"_fwprintf_l");
    }
    public static int _fwprintf_l ( Addressable _Stream,  Addressable _Format,  Addressable _Locale, Object... x3) {
        var mh$ = _fwprintf_l$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Format, _Locale, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fwprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$9.fwprintf$MH,"fwprintf");
    }
    public static int fwprintf ( Addressable _Stream,  Addressable _Format, Object... x2) {
        var mh$ = fwprintf$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Format, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fwprintf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$9._fwprintf_s_l$MH,"_fwprintf_s_l");
    }
    public static int _fwprintf_s_l ( Addressable _Stream,  Addressable _Format,  Addressable _Locale, Object... x3) {
        var mh$ = _fwprintf_s_l$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Format, _Locale, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fwprintf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$9.fwprintf_s$MH,"fwprintf_s");
    }
    public static int fwprintf_s ( Addressable _Stream,  Addressable _Format, Object... x2) {
        var mh$ = fwprintf_s$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Format, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fwprintf_p_l$MH() {
        return RuntimeHelper.requireNonNull(constants$10._fwprintf_p_l$MH,"_fwprintf_p_l");
    }
    public static int _fwprintf_p_l ( Addressable _Stream,  Addressable _Format,  Addressable _Locale, Object... x3) {
        var mh$ = _fwprintf_p_l$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Format, _Locale, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fwprintf_p$MH() {
        return RuntimeHelper.requireNonNull(constants$10._fwprintf_p$MH,"_fwprintf_p");
    }
    public static int _fwprintf_p ( Addressable _Stream,  Addressable _Format, Object... x2) {
        var mh$ = _fwprintf_p$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Format, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wprintf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$10._wprintf_l$MH,"_wprintf_l");
    }
    public static int _wprintf_l ( Addressable _Format,  Addressable _Locale, Object... x2) {
        var mh$ = _wprintf_l$MH();
        try {
            return (int)mh$.invokeExact(_Format, _Locale, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$10.wprintf$MH,"wprintf");
    }
    public static int wprintf ( Addressable _Format, Object... x1) {
        var mh$ = wprintf$MH();
        try {
            return (int)mh$.invokeExact(_Format, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wprintf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$10._wprintf_s_l$MH,"_wprintf_s_l");
    }
    public static int _wprintf_s_l ( Addressable _Format,  Addressable _Locale, Object... x2) {
        var mh$ = _wprintf_s_l$MH();
        try {
            return (int)mh$.invokeExact(_Format, _Locale, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wprintf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$10.wprintf_s$MH,"wprintf_s");
    }
    public static int wprintf_s ( Addressable _Format, Object... x1) {
        var mh$ = wprintf_s$MH();
        try {
            return (int)mh$.invokeExact(_Format, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wprintf_p_l$MH() {
        return RuntimeHelper.requireNonNull(constants$11._wprintf_p_l$MH,"_wprintf_p_l");
    }
    public static int _wprintf_p_l ( Addressable _Format,  Addressable _Locale, Object... x2) {
        var mh$ = _wprintf_p_l$MH();
        try {
            return (int)mh$.invokeExact(_Format, _Locale, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wprintf_p$MH() {
        return RuntimeHelper.requireNonNull(constants$11._wprintf_p$MH,"_wprintf_p");
    }
    public static int _wprintf_p ( Addressable _Format, Object... x1) {
        var mh$ = _wprintf_p$MH();
        try {
            return (int)mh$.invokeExact(_Format, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __stdio_common_vfwscanf$MH() {
        return RuntimeHelper.requireNonNull(constants$11.__stdio_common_vfwscanf$MH,"__stdio_common_vfwscanf");
    }
    public static int __stdio_common_vfwscanf ( long _Options,  Addressable _Stream,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = __stdio_common_vfwscanf$MH();
        try {
            return (int)mh$.invokeExact(_Options, _Stream, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vfwscanf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$11._vfwscanf_l$MH,"_vfwscanf_l");
    }
    public static int _vfwscanf_l ( Addressable _Stream,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vfwscanf_l$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vfwscanf$MH() {
        return RuntimeHelper.requireNonNull(constants$11.vfwscanf$MH,"vfwscanf");
    }
    public static int vfwscanf ( Addressable _Stream,  Addressable _Format,  Addressable _ArgList) {
        var mh$ = vfwscanf$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vfwscanf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$11._vfwscanf_s_l$MH,"_vfwscanf_s_l");
    }
    public static int _vfwscanf_s_l ( Addressable _Stream,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vfwscanf_s_l$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vfwscanf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$12.vfwscanf_s$MH,"vfwscanf_s");
    }
    public static int vfwscanf_s ( Addressable _Stream,  Addressable _Format,  Addressable _ArgList) {
        var mh$ = vfwscanf_s$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vwscanf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$12._vwscanf_l$MH,"_vwscanf_l");
    }
    public static int _vwscanf_l ( Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vwscanf_l$MH();
        try {
            return (int)mh$.invokeExact(_Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vwscanf$MH() {
        return RuntimeHelper.requireNonNull(constants$12.vwscanf$MH,"vwscanf");
    }
    public static int vwscanf ( Addressable _Format,  Addressable _ArgList) {
        var mh$ = vwscanf$MH();
        try {
            return (int)mh$.invokeExact(_Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vwscanf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$12._vwscanf_s_l$MH,"_vwscanf_s_l");
    }
    public static int _vwscanf_s_l ( Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vwscanf_s_l$MH();
        try {
            return (int)mh$.invokeExact(_Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vwscanf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$12.vwscanf_s$MH,"vwscanf_s");
    }
    public static int vwscanf_s ( Addressable _Format,  Addressable _ArgList) {
        var mh$ = vwscanf_s$MH();
        try {
            return (int)mh$.invokeExact(_Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fwscanf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$12._fwscanf_l$MH,"_fwscanf_l");
    }
    public static int _fwscanf_l ( Addressable _Stream,  Addressable _Format,  Addressable _Locale, Object... x3) {
        var mh$ = _fwscanf_l$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Format, _Locale, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fwscanf$MH() {
        return RuntimeHelper.requireNonNull(constants$13.fwscanf$MH,"fwscanf");
    }
    public static int fwscanf ( Addressable _Stream,  Addressable _Format, Object... x2) {
        var mh$ = fwscanf$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Format, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fwscanf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$13._fwscanf_s_l$MH,"_fwscanf_s_l");
    }
    public static int _fwscanf_s_l ( Addressable _Stream,  Addressable _Format,  Addressable _Locale, Object... x3) {
        var mh$ = _fwscanf_s_l$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Format, _Locale, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fwscanf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$13.fwscanf_s$MH,"fwscanf_s");
    }
    public static int fwscanf_s ( Addressable _Stream,  Addressable _Format, Object... x2) {
        var mh$ = fwscanf_s$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Format, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wscanf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$13._wscanf_l$MH,"_wscanf_l");
    }
    public static int _wscanf_l ( Addressable _Format,  Addressable _Locale, Object... x2) {
        var mh$ = _wscanf_l$MH();
        try {
            return (int)mh$.invokeExact(_Format, _Locale, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wscanf$MH() {
        return RuntimeHelper.requireNonNull(constants$13.wscanf$MH,"wscanf");
    }
    public static int wscanf ( Addressable _Format, Object... x1) {
        var mh$ = wscanf$MH();
        try {
            return (int)mh$.invokeExact(_Format, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wscanf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$13._wscanf_s_l$MH,"_wscanf_s_l");
    }
    public static int _wscanf_s_l ( Addressable _Format,  Addressable _Locale, Object... x2) {
        var mh$ = _wscanf_s_l$MH();
        try {
            return (int)mh$.invokeExact(_Format, _Locale, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wscanf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$14.wscanf_s$MH,"wscanf_s");
    }
    public static int wscanf_s ( Addressable _Format, Object... x1) {
        var mh$ = wscanf_s$MH();
        try {
            return (int)mh$.invokeExact(_Format, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __stdio_common_vswprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$14.__stdio_common_vswprintf$MH,"__stdio_common_vswprintf");
    }
    public static int __stdio_common_vswprintf ( long _Options,  Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = __stdio_common_vswprintf$MH();
        try {
            return (int)mh$.invokeExact(_Options, _Buffer, _BufferCount, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __stdio_common_vswprintf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$14.__stdio_common_vswprintf_s$MH,"__stdio_common_vswprintf_s");
    }
    public static int __stdio_common_vswprintf_s ( long _Options,  Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = __stdio_common_vswprintf_s$MH();
        try {
            return (int)mh$.invokeExact(_Options, _Buffer, _BufferCount, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __stdio_common_vsnwprintf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$14.__stdio_common_vsnwprintf_s$MH,"__stdio_common_vsnwprintf_s");
    }
    public static int __stdio_common_vsnwprintf_s ( long _Options,  Addressable _Buffer,  long _BufferCount,  long _MaxCount,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = __stdio_common_vsnwprintf_s$MH();
        try {
            return (int)mh$.invokeExact(_Options, _Buffer, _BufferCount, _MaxCount, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __stdio_common_vswprintf_p$MH() {
        return RuntimeHelper.requireNonNull(constants$14.__stdio_common_vswprintf_p$MH,"__stdio_common_vswprintf_p");
    }
    public static int __stdio_common_vswprintf_p ( long _Options,  Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = __stdio_common_vswprintf_p$MH();
        try {
            return (int)mh$.invokeExact(_Options, _Buffer, _BufferCount, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vsnwprintf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$14._vsnwprintf_l$MH,"_vsnwprintf_l");
    }
    public static int _vsnwprintf_l ( Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vsnwprintf_l$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vsnwprintf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$15._vsnwprintf_s_l$MH,"_vsnwprintf_s_l");
    }
    public static int _vsnwprintf_s_l ( Addressable _Buffer,  long _BufferCount,  long _MaxCount,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vsnwprintf_s_l$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _MaxCount, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vsnwprintf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$15._vsnwprintf_s$MH,"_vsnwprintf_s");
    }
    public static int _vsnwprintf_s ( Addressable _Buffer,  long _BufferCount,  long _MaxCount,  Addressable _Format,  Addressable _ArgList) {
        var mh$ = _vsnwprintf_s$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _MaxCount, _Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _snwprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$15._snwprintf$MH,"_snwprintf");
    }
    public static int _snwprintf ( Addressable _Buffer,  long _BufferCount,  Addressable _Format, Object... x3) {
        var mh$ = _snwprintf$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vsnwprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$15._vsnwprintf$MH,"_vsnwprintf");
    }
    public static int _vsnwprintf ( Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _Args) {
        var mh$ = _vsnwprintf$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, _Args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vswprintf_c_l$MH() {
        return RuntimeHelper.requireNonNull(constants$15._vswprintf_c_l$MH,"_vswprintf_c_l");
    }
    public static int _vswprintf_c_l ( Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vswprintf_c_l$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vswprintf_c$MH() {
        return RuntimeHelper.requireNonNull(constants$15._vswprintf_c$MH,"_vswprintf_c");
    }
    public static int _vswprintf_c ( Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _ArgList) {
        var mh$ = _vswprintf_c$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vswprintf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$16._vswprintf_l$MH,"_vswprintf_l");
    }
    public static int _vswprintf_l ( Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vswprintf_l$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __vswprintf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$16.__vswprintf_l$MH,"__vswprintf_l");
    }
    public static int __vswprintf_l ( Addressable _Buffer,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = __vswprintf_l$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vswprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$16._vswprintf$MH,"_vswprintf");
    }
    public static int _vswprintf ( Addressable _Buffer,  Addressable _Format,  Addressable _ArgList) {
        var mh$ = _vswprintf$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vswprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$16.vswprintf$MH,"vswprintf");
    }
    public static int vswprintf ( Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _ArgList) {
        var mh$ = vswprintf$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vswprintf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$16._vswprintf_s_l$MH,"_vswprintf_s_l");
    }
    public static int _vswprintf_s_l ( Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vswprintf_s_l$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vswprintf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$16.vswprintf_s$MH,"vswprintf_s");
    }
    public static int vswprintf_s ( Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _ArgList) {
        var mh$ = vswprintf_s$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vswprintf_p_l$MH() {
        return RuntimeHelper.requireNonNull(constants$17._vswprintf_p_l$MH,"_vswprintf_p_l");
    }
    public static int _vswprintf_p_l ( Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vswprintf_p_l$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vswprintf_p$MH() {
        return RuntimeHelper.requireNonNull(constants$17._vswprintf_p$MH,"_vswprintf_p");
    }
    public static int _vswprintf_p ( Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _ArgList) {
        var mh$ = _vswprintf_p$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vscwprintf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$17._vscwprintf_l$MH,"_vscwprintf_l");
    }
    public static int _vscwprintf_l ( Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vscwprintf_l$MH();
        try {
            return (int)mh$.invokeExact(_Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vscwprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$17._vscwprintf$MH,"_vscwprintf");
    }
    public static int _vscwprintf ( Addressable _Format,  Addressable _ArgList) {
        var mh$ = _vscwprintf$MH();
        try {
            return (int)mh$.invokeExact(_Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vscwprintf_p_l$MH() {
        return RuntimeHelper.requireNonNull(constants$17._vscwprintf_p_l$MH,"_vscwprintf_p_l");
    }
    public static int _vscwprintf_p_l ( Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vscwprintf_p_l$MH();
        try {
            return (int)mh$.invokeExact(_Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vscwprintf_p$MH() {
        return RuntimeHelper.requireNonNull(constants$17._vscwprintf_p$MH,"_vscwprintf_p");
    }
    public static int _vscwprintf_p ( Addressable _Format,  Addressable _ArgList) {
        var mh$ = _vscwprintf_p$MH();
        try {
            return (int)mh$.invokeExact(_Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __swprintf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$18.__swprintf_l$MH,"__swprintf_l");
    }
    public static int __swprintf_l ( Addressable _Buffer,  Addressable _Format,  Addressable _Locale, Object... x3) {
        var mh$ = __swprintf_l$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _Format, _Locale, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _swprintf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$18._swprintf_l$MH,"_swprintf_l");
    }
    public static int _swprintf_l ( Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _Locale, Object... x4) {
        var mh$ = _swprintf_l$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, _Locale, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _swprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$18._swprintf$MH,"_swprintf");
    }
    public static int _swprintf ( Addressable _Buffer,  Addressable _Format, Object... x2) {
        var mh$ = _swprintf$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _Format, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle swprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$18.swprintf$MH,"swprintf");
    }
    public static int swprintf ( Addressable _Buffer,  long _BufferCount,  Addressable _Format, Object... x3) {
        var mh$ = swprintf$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _swprintf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$18._swprintf_s_l$MH,"_swprintf_s_l");
    }
    public static int _swprintf_s_l ( Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _Locale, Object... x4) {
        var mh$ = _swprintf_s_l$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, _Locale, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle swprintf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$18.swprintf_s$MH,"swprintf_s");
    }
    public static int swprintf_s ( Addressable _Buffer,  long _BufferCount,  Addressable _Format, Object... x3) {
        var mh$ = swprintf_s$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _swprintf_p_l$MH() {
        return RuntimeHelper.requireNonNull(constants$19._swprintf_p_l$MH,"_swprintf_p_l");
    }
    public static int _swprintf_p_l ( Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _Locale, Object... x4) {
        var mh$ = _swprintf_p_l$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, _Locale, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _swprintf_p$MH() {
        return RuntimeHelper.requireNonNull(constants$19._swprintf_p$MH,"_swprintf_p");
    }
    public static int _swprintf_p ( Addressable _Buffer,  long _BufferCount,  Addressable _Format, Object... x3) {
        var mh$ = _swprintf_p$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _swprintf_c_l$MH() {
        return RuntimeHelper.requireNonNull(constants$19._swprintf_c_l$MH,"_swprintf_c_l");
    }
    public static int _swprintf_c_l ( Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _Locale, Object... x4) {
        var mh$ = _swprintf_c_l$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, _Locale, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _swprintf_c$MH() {
        return RuntimeHelper.requireNonNull(constants$19._swprintf_c$MH,"_swprintf_c");
    }
    public static int _swprintf_c ( Addressable _Buffer,  long _BufferCount,  Addressable _Format, Object... x3) {
        var mh$ = _swprintf_c$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _snwprintf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$19._snwprintf_l$MH,"_snwprintf_l");
    }
    public static int _snwprintf_l ( Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _Locale, Object... x4) {
        var mh$ = _snwprintf_l$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, _Locale, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _snwprintf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$19._snwprintf_s_l$MH,"_snwprintf_s_l");
    }
    public static int _snwprintf_s_l ( Addressable _Buffer,  long _BufferCount,  long _MaxCount,  Addressable _Format,  Addressable _Locale, Object... x5) {
        var mh$ = _snwprintf_s_l$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _MaxCount, _Format, _Locale, x5);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _snwprintf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$20._snwprintf_s$MH,"_snwprintf_s");
    }
    public static int _snwprintf_s ( Addressable _Buffer,  long _BufferCount,  long _MaxCount,  Addressable _Format, Object... x4) {
        var mh$ = _snwprintf_s$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _MaxCount, _Format, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _scwprintf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$20._scwprintf_l$MH,"_scwprintf_l");
    }
    public static int _scwprintf_l ( Addressable _Format,  Addressable _Locale, Object... x2) {
        var mh$ = _scwprintf_l$MH();
        try {
            return (int)mh$.invokeExact(_Format, _Locale, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _scwprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$20._scwprintf$MH,"_scwprintf");
    }
    public static int _scwprintf ( Addressable _Format, Object... x1) {
        var mh$ = _scwprintf$MH();
        try {
            return (int)mh$.invokeExact(_Format, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _scwprintf_p_l$MH() {
        return RuntimeHelper.requireNonNull(constants$20._scwprintf_p_l$MH,"_scwprintf_p_l");
    }
    public static int _scwprintf_p_l ( Addressable _Format,  Addressable _Locale, Object... x2) {
        var mh$ = _scwprintf_p_l$MH();
        try {
            return (int)mh$.invokeExact(_Format, _Locale, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _scwprintf_p$MH() {
        return RuntimeHelper.requireNonNull(constants$20._scwprintf_p$MH,"_scwprintf_p");
    }
    public static int _scwprintf_p ( Addressable _Format, Object... x1) {
        var mh$ = _scwprintf_p$MH();
        try {
            return (int)mh$.invokeExact(_Format, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __stdio_common_vswscanf$MH() {
        return RuntimeHelper.requireNonNull(constants$20.__stdio_common_vswscanf$MH,"__stdio_common_vswscanf");
    }
    public static int __stdio_common_vswscanf ( long _Options,  Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = __stdio_common_vswscanf$MH();
        try {
            return (int)mh$.invokeExact(_Options, _Buffer, _BufferCount, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vswscanf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$21._vswscanf_l$MH,"_vswscanf_l");
    }
    public static int _vswscanf_l ( Addressable _Buffer,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vswscanf_l$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vswscanf$MH() {
        return RuntimeHelper.requireNonNull(constants$21.vswscanf$MH,"vswscanf");
    }
    public static int vswscanf ( Addressable _Buffer,  Addressable _Format,  Addressable _ArgList) {
        var mh$ = vswscanf$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vswscanf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$21._vswscanf_s_l$MH,"_vswscanf_s_l");
    }
    public static int _vswscanf_s_l ( Addressable _Buffer,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vswscanf_s_l$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vswscanf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$21.vswscanf_s$MH,"vswscanf_s");
    }
    public static int vswscanf_s ( Addressable _Buffer,  Addressable _Format,  Addressable _ArgList) {
        var mh$ = vswscanf_s$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vsnwscanf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$21._vsnwscanf_l$MH,"_vsnwscanf_l");
    }
    public static int _vsnwscanf_l ( Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vsnwscanf_l$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vsnwscanf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$21._vsnwscanf_s_l$MH,"_vsnwscanf_s_l");
    }
    public static int _vsnwscanf_s_l ( Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vsnwscanf_s_l$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _swscanf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$22._swscanf_l$MH,"_swscanf_l");
    }
    public static int _swscanf_l ( Addressable _Buffer,  Addressable _Format,  Addressable _Locale, Object... x3) {
        var mh$ = _swscanf_l$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _Format, _Locale, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle swscanf$MH() {
        return RuntimeHelper.requireNonNull(constants$22.swscanf$MH,"swscanf");
    }
    public static int swscanf ( Addressable _Buffer,  Addressable _Format, Object... x2) {
        var mh$ = swscanf$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _Format, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _swscanf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$22._swscanf_s_l$MH,"_swscanf_s_l");
    }
    public static int _swscanf_s_l ( Addressable _Buffer,  Addressable _Format,  Addressable _Locale, Object... x3) {
        var mh$ = _swscanf_s_l$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _Format, _Locale, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle swscanf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$22.swscanf_s$MH,"swscanf_s");
    }
    public static int swscanf_s ( Addressable _Buffer,  Addressable _Format, Object... x2) {
        var mh$ = swscanf_s$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _Format, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _snwscanf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$22._snwscanf_l$MH,"_snwscanf_l");
    }
    public static int _snwscanf_l ( Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _Locale, Object... x4) {
        var mh$ = _snwscanf_l$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, _Locale, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _snwscanf$MH() {
        return RuntimeHelper.requireNonNull(constants$22._snwscanf$MH,"_snwscanf");
    }
    public static int _snwscanf ( Addressable _Buffer,  long _BufferCount,  Addressable _Format, Object... x3) {
        var mh$ = _snwscanf$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _snwscanf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$23._snwscanf_s_l$MH,"_snwscanf_s_l");
    }
    public static int _snwscanf_s_l ( Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _Locale, Object... x4) {
        var mh$ = _snwscanf_s_l$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, _Locale, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _snwscanf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$23._snwscanf_s$MH,"_snwscanf_s");
    }
    public static int _snwscanf_s ( Addressable _Buffer,  long _BufferCount,  Addressable _Format, Object... x3) {
        var mh$ = _snwscanf_s$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfLong fpos_t = Constants$root.C_LONG_LONG$LAYOUT;
    public static MethodHandle _get_stream_buffer_pointers$MH() {
        return RuntimeHelper.requireNonNull(constants$23._get_stream_buffer_pointers$MH,"_get_stream_buffer_pointers");
    }
    public static int _get_stream_buffer_pointers ( Addressable _Stream,  Addressable _Base,  Addressable _Pointer,  Addressable _Count) {
        var mh$ = _get_stream_buffer_pointers$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Base, _Pointer, _Count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle clearerr_s$MH() {
        return RuntimeHelper.requireNonNull(constants$23.clearerr_s$MH,"clearerr_s");
    }
    public static int clearerr_s ( Addressable _Stream) {
        var mh$ = clearerr_s$MH();
        try {
            return (int)mh$.invokeExact(_Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fopen_s$MH() {
        return RuntimeHelper.requireNonNull(constants$23.fopen_s$MH,"fopen_s");
    }
    public static int fopen_s ( Addressable _Stream,  Addressable _FileName,  Addressable _Mode) {
        var mh$ = fopen_s$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _FileName, _Mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fread_s$MH() {
        return RuntimeHelper.requireNonNull(constants$23.fread_s$MH,"fread_s");
    }
    public static long fread_s ( Addressable _Buffer,  long _BufferSize,  long _ElementSize,  long _ElementCount,  Addressable _Stream) {
        var mh$ = fread_s$MH();
        try {
            return (long)mh$.invokeExact(_Buffer, _BufferSize, _ElementSize, _ElementCount, _Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle freopen_s$MH() {
        return RuntimeHelper.requireNonNull(constants$24.freopen_s$MH,"freopen_s");
    }
    public static int freopen_s ( Addressable _Stream,  Addressable _FileName,  Addressable _Mode,  Addressable _OldStream) {
        var mh$ = freopen_s$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _FileName, _Mode, _OldStream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gets_s$MH() {
        return RuntimeHelper.requireNonNull(constants$24.gets_s$MH,"gets_s");
    }
    public static MemoryAddress gets_s ( Addressable _Buffer,  long _Size) {
        var mh$ = gets_s$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Buffer, _Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle tmpfile_s$MH() {
        return RuntimeHelper.requireNonNull(constants$24.tmpfile_s$MH,"tmpfile_s");
    }
    public static int tmpfile_s ( Addressable _Stream) {
        var mh$ = tmpfile_s$MH();
        try {
            return (int)mh$.invokeExact(_Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle tmpnam_s$MH() {
        return RuntimeHelper.requireNonNull(constants$24.tmpnam_s$MH,"tmpnam_s");
    }
    public static int tmpnam_s ( Addressable _Buffer,  long _Size) {
        var mh$ = tmpnam_s$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle clearerr$MH() {
        return RuntimeHelper.requireNonNull(constants$24.clearerr$MH,"clearerr");
    }
    public static void clearerr ( Addressable _Stream) {
        var mh$ = clearerr$MH();
        try {
            mh$.invokeExact(_Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fclose$MH() {
        return RuntimeHelper.requireNonNull(constants$24.fclose$MH,"fclose");
    }
    public static int fclose ( Addressable _Stream) {
        var mh$ = fclose$MH();
        try {
            return (int)mh$.invokeExact(_Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fcloseall$MH() {
        return RuntimeHelper.requireNonNull(constants$25._fcloseall$MH,"_fcloseall");
    }
    public static int _fcloseall () {
        var mh$ = _fcloseall$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fdopen$MH() {
        return RuntimeHelper.requireNonNull(constants$25._fdopen$MH,"_fdopen");
    }
    public static MemoryAddress _fdopen ( int _FileHandle,  Addressable _Mode) {
        var mh$ = _fdopen$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_FileHandle, _Mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle feof$MH() {
        return RuntimeHelper.requireNonNull(constants$25.feof$MH,"feof");
    }
    public static int feof ( Addressable _Stream) {
        var mh$ = feof$MH();
        try {
            return (int)mh$.invokeExact(_Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ferror$MH() {
        return RuntimeHelper.requireNonNull(constants$25.ferror$MH,"ferror");
    }
    public static int ferror ( Addressable _Stream) {
        var mh$ = ferror$MH();
        try {
            return (int)mh$.invokeExact(_Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fflush$MH() {
        return RuntimeHelper.requireNonNull(constants$25.fflush$MH,"fflush");
    }
    public static int fflush ( Addressable _Stream) {
        var mh$ = fflush$MH();
        try {
            return (int)mh$.invokeExact(_Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fgetc$MH() {
        return RuntimeHelper.requireNonNull(constants$25.fgetc$MH,"fgetc");
    }
    public static int fgetc ( Addressable _Stream) {
        var mh$ = fgetc$MH();
        try {
            return (int)mh$.invokeExact(_Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fgetchar$MH() {
        return RuntimeHelper.requireNonNull(constants$26._fgetchar$MH,"_fgetchar");
    }
    public static int _fgetchar () {
        var mh$ = _fgetchar$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fgetpos$MH() {
        return RuntimeHelper.requireNonNull(constants$26.fgetpos$MH,"fgetpos");
    }
    public static int fgetpos ( Addressable _Stream,  Addressable _Position) {
        var mh$ = fgetpos$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fgets$MH() {
        return RuntimeHelper.requireNonNull(constants$26.fgets$MH,"fgets");
    }
    public static MemoryAddress fgets ( Addressable _Buffer,  int _MaxCount,  Addressable _Stream) {
        var mh$ = fgets$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Buffer, _MaxCount, _Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fileno$MH() {
        return RuntimeHelper.requireNonNull(constants$26._fileno$MH,"_fileno");
    }
    public static int _fileno ( Addressable _Stream) {
        var mh$ = _fileno$MH();
        try {
            return (int)mh$.invokeExact(_Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _flushall$MH() {
        return RuntimeHelper.requireNonNull(constants$26._flushall$MH,"_flushall");
    }
    public static int _flushall () {
        var mh$ = _flushall$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fopen$MH() {
        return RuntimeHelper.requireNonNull(constants$26.fopen$MH,"fopen");
    }
    public static MemoryAddress fopen ( Addressable _FileName,  Addressable _Mode) {
        var mh$ = fopen$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_FileName, _Mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fputc$MH() {
        return RuntimeHelper.requireNonNull(constants$27.fputc$MH,"fputc");
    }
    public static int fputc ( int _Character,  Addressable _Stream) {
        var mh$ = fputc$MH();
        try {
            return (int)mh$.invokeExact(_Character, _Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fputchar$MH() {
        return RuntimeHelper.requireNonNull(constants$27._fputchar$MH,"_fputchar");
    }
    public static int _fputchar ( int _Character) {
        var mh$ = _fputchar$MH();
        try {
            return (int)mh$.invokeExact(_Character);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fputs$MH() {
        return RuntimeHelper.requireNonNull(constants$27.fputs$MH,"fputs");
    }
    public static int fputs ( Addressable _Buffer,  Addressable _Stream) {
        var mh$ = fputs$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fread$MH() {
        return RuntimeHelper.requireNonNull(constants$27.fread$MH,"fread");
    }
    public static long fread ( Addressable _Buffer,  long _ElementSize,  long _ElementCount,  Addressable _Stream) {
        var mh$ = fread$MH();
        try {
            return (long)mh$.invokeExact(_Buffer, _ElementSize, _ElementCount, _Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle freopen$MH() {
        return RuntimeHelper.requireNonNull(constants$27.freopen$MH,"freopen");
    }
    public static MemoryAddress freopen ( Addressable _FileName,  Addressable _Mode,  Addressable _Stream) {
        var mh$ = freopen$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_FileName, _Mode, _Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fsopen$MH() {
        return RuntimeHelper.requireNonNull(constants$27._fsopen$MH,"_fsopen");
    }
    public static MemoryAddress _fsopen ( Addressable _FileName,  Addressable _Mode,  int _ShFlag) {
        var mh$ = _fsopen$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_FileName, _Mode, _ShFlag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fsetpos$MH() {
        return RuntimeHelper.requireNonNull(constants$28.fsetpos$MH,"fsetpos");
    }
    public static int fsetpos ( Addressable _Stream,  Addressable _Position) {
        var mh$ = fsetpos$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fseek$MH() {
        return RuntimeHelper.requireNonNull(constants$28.fseek$MH,"fseek");
    }
    public static int fseek ( Addressable _Stream,  int _Offset,  int _Origin) {
        var mh$ = fseek$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Offset, _Origin);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fseeki64$MH() {
        return RuntimeHelper.requireNonNull(constants$28._fseeki64$MH,"_fseeki64");
    }
    public static int _fseeki64 ( Addressable _Stream,  long _Offset,  int _Origin) {
        var mh$ = _fseeki64$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Offset, _Origin);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ftell$MH() {
        return RuntimeHelper.requireNonNull(constants$28.ftell$MH,"ftell");
    }
    public static int ftell ( Addressable _Stream) {
        var mh$ = ftell$MH();
        try {
            return (int)mh$.invokeExact(_Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _ftelli64$MH() {
        return RuntimeHelper.requireNonNull(constants$28._ftelli64$MH,"_ftelli64");
    }
    public static long _ftelli64 ( Addressable _Stream) {
        var mh$ = _ftelli64$MH();
        try {
            return (long)mh$.invokeExact(_Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fwrite$MH() {
        return RuntimeHelper.requireNonNull(constants$28.fwrite$MH,"fwrite");
    }
    public static long fwrite ( Addressable _Buffer,  long _ElementSize,  long _ElementCount,  Addressable _Stream) {
        var mh$ = fwrite$MH();
        try {
            return (long)mh$.invokeExact(_Buffer, _ElementSize, _ElementCount, _Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getc$MH() {
        return RuntimeHelper.requireNonNull(constants$29.getc$MH,"getc");
    }
    public static int getc ( Addressable _Stream) {
        var mh$ = getc$MH();
        try {
            return (int)mh$.invokeExact(_Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getchar$MH() {
        return RuntimeHelper.requireNonNull(constants$29.getchar$MH,"getchar");
    }
    public static int getchar () {
        var mh$ = getchar$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _getmaxstdio$MH() {
        return RuntimeHelper.requireNonNull(constants$29._getmaxstdio$MH,"_getmaxstdio");
    }
    public static int _getmaxstdio () {
        var mh$ = _getmaxstdio$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _getw$MH() {
        return RuntimeHelper.requireNonNull(constants$29._getw$MH,"_getw");
    }
    public static int _getw ( Addressable _Stream) {
        var mh$ = _getw$MH();
        try {
            return (int)mh$.invokeExact(_Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle perror$MH() {
        return RuntimeHelper.requireNonNull(constants$29.perror$MH,"perror");
    }
    public static void perror ( Addressable _ErrorMessage) {
        var mh$ = perror$MH();
        try {
            mh$.invokeExact(_ErrorMessage);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _pclose$MH() {
        return RuntimeHelper.requireNonNull(constants$29._pclose$MH,"_pclose");
    }
    public static int _pclose ( Addressable _Stream) {
        var mh$ = _pclose$MH();
        try {
            return (int)mh$.invokeExact(_Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _popen$MH() {
        return RuntimeHelper.requireNonNull(constants$30._popen$MH,"_popen");
    }
    public static MemoryAddress _popen ( Addressable _Command,  Addressable _Mode) {
        var mh$ = _popen$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Command, _Mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle putc$MH() {
        return RuntimeHelper.requireNonNull(constants$30.putc$MH,"putc");
    }
    public static int putc ( int _Character,  Addressable _Stream) {
        var mh$ = putc$MH();
        try {
            return (int)mh$.invokeExact(_Character, _Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle putchar$MH() {
        return RuntimeHelper.requireNonNull(constants$30.putchar$MH,"putchar");
    }
    public static int putchar ( int _Character) {
        var mh$ = putchar$MH();
        try {
            return (int)mh$.invokeExact(_Character);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle puts$MH() {
        return RuntimeHelper.requireNonNull(constants$30.puts$MH,"puts");
    }
    public static int puts ( Addressable _Buffer) {
        var mh$ = puts$MH();
        try {
            return (int)mh$.invokeExact(_Buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _putw$MH() {
        return RuntimeHelper.requireNonNull(constants$30._putw$MH,"_putw");
    }
    public static int _putw ( int _Word,  Addressable _Stream) {
        var mh$ = _putw$MH();
        try {
            return (int)mh$.invokeExact(_Word, _Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle remove$MH() {
        return RuntimeHelper.requireNonNull(constants$30.remove$MH,"remove");
    }
    public static int remove ( Addressable _FileName) {
        var mh$ = remove$MH();
        try {
            return (int)mh$.invokeExact(_FileName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rename$MH() {
        return RuntimeHelper.requireNonNull(constants$31.rename$MH,"rename");
    }
    public static int rename ( Addressable _OldFileName,  Addressable _NewFileName) {
        var mh$ = rename$MH();
        try {
            return (int)mh$.invokeExact(_OldFileName, _NewFileName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _unlink$MH() {
        return RuntimeHelper.requireNonNull(constants$31._unlink$MH,"_unlink");
    }
    public static int _unlink ( Addressable _FileName) {
        var mh$ = _unlink$MH();
        try {
            return (int)mh$.invokeExact(_FileName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle unlink$MH() {
        return RuntimeHelper.requireNonNull(constants$31.unlink$MH,"unlink");
    }
    public static int unlink ( Addressable _FileName) {
        var mh$ = unlink$MH();
        try {
            return (int)mh$.invokeExact(_FileName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rewind$MH() {
        return RuntimeHelper.requireNonNull(constants$31.rewind$MH,"rewind");
    }
    public static void rewind ( Addressable _Stream) {
        var mh$ = rewind$MH();
        try {
            mh$.invokeExact(_Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _rmtmp$MH() {
        return RuntimeHelper.requireNonNull(constants$31._rmtmp$MH,"_rmtmp");
    }
    public static int _rmtmp () {
        var mh$ = _rmtmp$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle setbuf$MH() {
        return RuntimeHelper.requireNonNull(constants$31.setbuf$MH,"setbuf");
    }
    public static void setbuf ( Addressable _Stream,  Addressable _Buffer) {
        var mh$ = setbuf$MH();
        try {
            mh$.invokeExact(_Stream, _Buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _setmaxstdio$MH() {
        return RuntimeHelper.requireNonNull(constants$32._setmaxstdio$MH,"_setmaxstdio");
    }
    public static int _setmaxstdio ( int _Maximum) {
        var mh$ = _setmaxstdio$MH();
        try {
            return (int)mh$.invokeExact(_Maximum);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle setvbuf$MH() {
        return RuntimeHelper.requireNonNull(constants$32.setvbuf$MH,"setvbuf");
    }
    public static int setvbuf ( Addressable _Stream,  Addressable _Buffer,  int _Mode,  long _Size) {
        var mh$ = setvbuf$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Buffer, _Mode, _Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _tempnam$MH() {
        return RuntimeHelper.requireNonNull(constants$32._tempnam$MH,"_tempnam");
    }
    public static MemoryAddress _tempnam ( Addressable _DirectoryName,  Addressable _FilePrefix) {
        var mh$ = _tempnam$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_DirectoryName, _FilePrefix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle tmpfile$MH() {
        return RuntimeHelper.requireNonNull(constants$32.tmpfile$MH,"tmpfile");
    }
    public static MemoryAddress tmpfile () {
        var mh$ = tmpfile$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle tmpnam$MH() {
        return RuntimeHelper.requireNonNull(constants$32.tmpnam$MH,"tmpnam");
    }
    public static MemoryAddress tmpnam ( Addressable _Buffer) {
        var mh$ = tmpnam$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ungetc$MH() {
        return RuntimeHelper.requireNonNull(constants$32.ungetc$MH,"ungetc");
    }
    public static int ungetc ( int _Character,  Addressable _Stream) {
        var mh$ = ungetc$MH();
        try {
            return (int)mh$.invokeExact(_Character, _Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _lock_file$MH() {
        return RuntimeHelper.requireNonNull(constants$33._lock_file$MH,"_lock_file");
    }
    public static void _lock_file ( Addressable _Stream) {
        var mh$ = _lock_file$MH();
        try {
            mh$.invokeExact(_Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _unlock_file$MH() {
        return RuntimeHelper.requireNonNull(constants$33._unlock_file$MH,"_unlock_file");
    }
    public static void _unlock_file ( Addressable _Stream) {
        var mh$ = _unlock_file$MH();
        try {
            mh$.invokeExact(_Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fclose_nolock$MH() {
        return RuntimeHelper.requireNonNull(constants$33._fclose_nolock$MH,"_fclose_nolock");
    }
    public static int _fclose_nolock ( Addressable _Stream) {
        var mh$ = _fclose_nolock$MH();
        try {
            return (int)mh$.invokeExact(_Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fflush_nolock$MH() {
        return RuntimeHelper.requireNonNull(constants$33._fflush_nolock$MH,"_fflush_nolock");
    }
    public static int _fflush_nolock ( Addressable _Stream) {
        var mh$ = _fflush_nolock$MH();
        try {
            return (int)mh$.invokeExact(_Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fgetc_nolock$MH() {
        return RuntimeHelper.requireNonNull(constants$33._fgetc_nolock$MH,"_fgetc_nolock");
    }
    public static int _fgetc_nolock ( Addressable _Stream) {
        var mh$ = _fgetc_nolock$MH();
        try {
            return (int)mh$.invokeExact(_Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fputc_nolock$MH() {
        return RuntimeHelper.requireNonNull(constants$33._fputc_nolock$MH,"_fputc_nolock");
    }
    public static int _fputc_nolock ( int _Character,  Addressable _Stream) {
        var mh$ = _fputc_nolock$MH();
        try {
            return (int)mh$.invokeExact(_Character, _Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fread_nolock$MH() {
        return RuntimeHelper.requireNonNull(constants$34._fread_nolock$MH,"_fread_nolock");
    }
    public static long _fread_nolock ( Addressable _Buffer,  long _ElementSize,  long _ElementCount,  Addressable _Stream) {
        var mh$ = _fread_nolock$MH();
        try {
            return (long)mh$.invokeExact(_Buffer, _ElementSize, _ElementCount, _Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fread_nolock_s$MH() {
        return RuntimeHelper.requireNonNull(constants$34._fread_nolock_s$MH,"_fread_nolock_s");
    }
    public static long _fread_nolock_s ( Addressable _Buffer,  long _BufferSize,  long _ElementSize,  long _ElementCount,  Addressable _Stream) {
        var mh$ = _fread_nolock_s$MH();
        try {
            return (long)mh$.invokeExact(_Buffer, _BufferSize, _ElementSize, _ElementCount, _Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fseek_nolock$MH() {
        return RuntimeHelper.requireNonNull(constants$34._fseek_nolock$MH,"_fseek_nolock");
    }
    public static int _fseek_nolock ( Addressable _Stream,  int _Offset,  int _Origin) {
        var mh$ = _fseek_nolock$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Offset, _Origin);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fseeki64_nolock$MH() {
        return RuntimeHelper.requireNonNull(constants$34._fseeki64_nolock$MH,"_fseeki64_nolock");
    }
    public static int _fseeki64_nolock ( Addressable _Stream,  long _Offset,  int _Origin) {
        var mh$ = _fseeki64_nolock$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Offset, _Origin);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _ftell_nolock$MH() {
        return RuntimeHelper.requireNonNull(constants$34._ftell_nolock$MH,"_ftell_nolock");
    }
    public static int _ftell_nolock ( Addressable _Stream) {
        var mh$ = _ftell_nolock$MH();
        try {
            return (int)mh$.invokeExact(_Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _ftelli64_nolock$MH() {
        return RuntimeHelper.requireNonNull(constants$34._ftelli64_nolock$MH,"_ftelli64_nolock");
    }
    public static long _ftelli64_nolock ( Addressable _Stream) {
        var mh$ = _ftelli64_nolock$MH();
        try {
            return (long)mh$.invokeExact(_Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fwrite_nolock$MH() {
        return RuntimeHelper.requireNonNull(constants$35._fwrite_nolock$MH,"_fwrite_nolock");
    }
    public static long _fwrite_nolock ( Addressable _Buffer,  long _ElementSize,  long _ElementCount,  Addressable _Stream) {
        var mh$ = _fwrite_nolock$MH();
        try {
            return (long)mh$.invokeExact(_Buffer, _ElementSize, _ElementCount, _Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _getc_nolock$MH() {
        return RuntimeHelper.requireNonNull(constants$35._getc_nolock$MH,"_getc_nolock");
    }
    public static int _getc_nolock ( Addressable _Stream) {
        var mh$ = _getc_nolock$MH();
        try {
            return (int)mh$.invokeExact(_Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _putc_nolock$MH() {
        return RuntimeHelper.requireNonNull(constants$35._putc_nolock$MH,"_putc_nolock");
    }
    public static int _putc_nolock ( int _Character,  Addressable _Stream) {
        var mh$ = _putc_nolock$MH();
        try {
            return (int)mh$.invokeExact(_Character, _Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _ungetc_nolock$MH() {
        return RuntimeHelper.requireNonNull(constants$35._ungetc_nolock$MH,"_ungetc_nolock");
    }
    public static int _ungetc_nolock ( int _Character,  Addressable _Stream) {
        var mh$ = _ungetc_nolock$MH();
        try {
            return (int)mh$.invokeExact(_Character, _Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __p__commode$MH() {
        return RuntimeHelper.requireNonNull(constants$35.__p__commode$MH,"__p__commode");
    }
    public static MemoryAddress __p__commode () {
        var mh$ = __p__commode$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __stdio_common_vfprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$35.__stdio_common_vfprintf$MH,"__stdio_common_vfprintf");
    }
    public static int __stdio_common_vfprintf ( long _Options,  Addressable _Stream,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = __stdio_common_vfprintf$MH();
        try {
            return (int)mh$.invokeExact(_Options, _Stream, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __stdio_common_vfprintf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$36.__stdio_common_vfprintf_s$MH,"__stdio_common_vfprintf_s");
    }
    public static int __stdio_common_vfprintf_s ( long _Options,  Addressable _Stream,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = __stdio_common_vfprintf_s$MH();
        try {
            return (int)mh$.invokeExact(_Options, _Stream, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __stdio_common_vfprintf_p$MH() {
        return RuntimeHelper.requireNonNull(constants$36.__stdio_common_vfprintf_p$MH,"__stdio_common_vfprintf_p");
    }
    public static int __stdio_common_vfprintf_p ( long _Options,  Addressable _Stream,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = __stdio_common_vfprintf_p$MH();
        try {
            return (int)mh$.invokeExact(_Options, _Stream, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vfprintf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$36._vfprintf_l$MH,"_vfprintf_l");
    }
    public static int _vfprintf_l ( Addressable _Stream,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vfprintf_l$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vfprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$36.vfprintf$MH,"vfprintf");
    }
    public static int vfprintf ( Addressable _Stream,  Addressable _Format,  Addressable _ArgList) {
        var mh$ = vfprintf$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vfprintf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$36._vfprintf_s_l$MH,"_vfprintf_s_l");
    }
    public static int _vfprintf_s_l ( Addressable _Stream,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vfprintf_s_l$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vfprintf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$36.vfprintf_s$MH,"vfprintf_s");
    }
    public static int vfprintf_s ( Addressable _Stream,  Addressable _Format,  Addressable _ArgList) {
        var mh$ = vfprintf_s$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vfprintf_p_l$MH() {
        return RuntimeHelper.requireNonNull(constants$37._vfprintf_p_l$MH,"_vfprintf_p_l");
    }
    public static int _vfprintf_p_l ( Addressable _Stream,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vfprintf_p_l$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vfprintf_p$MH() {
        return RuntimeHelper.requireNonNull(constants$37._vfprintf_p$MH,"_vfprintf_p");
    }
    public static int _vfprintf_p ( Addressable _Stream,  Addressable _Format,  Addressable _ArgList) {
        var mh$ = _vfprintf_p$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vprintf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$37._vprintf_l$MH,"_vprintf_l");
    }
    public static int _vprintf_l ( Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vprintf_l$MH();
        try {
            return (int)mh$.invokeExact(_Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$37.vprintf$MH,"vprintf");
    }
    public static int vprintf ( Addressable _Format,  Addressable _ArgList) {
        var mh$ = vprintf$MH();
        try {
            return (int)mh$.invokeExact(_Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vprintf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$37._vprintf_s_l$MH,"_vprintf_s_l");
    }
    public static int _vprintf_s_l ( Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vprintf_s_l$MH();
        try {
            return (int)mh$.invokeExact(_Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vprintf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$37.vprintf_s$MH,"vprintf_s");
    }
    public static int vprintf_s ( Addressable _Format,  Addressable _ArgList) {
        var mh$ = vprintf_s$MH();
        try {
            return (int)mh$.invokeExact(_Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vprintf_p_l$MH() {
        return RuntimeHelper.requireNonNull(constants$38._vprintf_p_l$MH,"_vprintf_p_l");
    }
    public static int _vprintf_p_l ( Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vprintf_p_l$MH();
        try {
            return (int)mh$.invokeExact(_Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vprintf_p$MH() {
        return RuntimeHelper.requireNonNull(constants$38._vprintf_p$MH,"_vprintf_p");
    }
    public static int _vprintf_p ( Addressable _Format,  Addressable _ArgList) {
        var mh$ = _vprintf_p$MH();
        try {
            return (int)mh$.invokeExact(_Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fprintf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$38._fprintf_l$MH,"_fprintf_l");
    }
    public static int _fprintf_l ( Addressable _Stream,  Addressable _Format,  Addressable _Locale, Object... x3) {
        var mh$ = _fprintf_l$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Format, _Locale, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$38.fprintf$MH,"fprintf");
    }
    public static int fprintf ( Addressable _Stream,  Addressable _Format, Object... x2) {
        var mh$ = fprintf$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Format, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _set_printf_count_output$MH() {
        return RuntimeHelper.requireNonNull(constants$38._set_printf_count_output$MH,"_set_printf_count_output");
    }
    public static int _set_printf_count_output ( int _Value) {
        var mh$ = _set_printf_count_output$MH();
        try {
            return (int)mh$.invokeExact(_Value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _get_printf_count_output$MH() {
        return RuntimeHelper.requireNonNull(constants$38._get_printf_count_output$MH,"_get_printf_count_output");
    }
    public static int _get_printf_count_output () {
        var mh$ = _get_printf_count_output$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fprintf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$39._fprintf_s_l$MH,"_fprintf_s_l");
    }
    public static int _fprintf_s_l ( Addressable _Stream,  Addressable _Format,  Addressable _Locale, Object... x3) {
        var mh$ = _fprintf_s_l$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Format, _Locale, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fprintf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$39.fprintf_s$MH,"fprintf_s");
    }
    public static int fprintf_s ( Addressable _Stream,  Addressable _Format, Object... x2) {
        var mh$ = fprintf_s$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Format, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fprintf_p_l$MH() {
        return RuntimeHelper.requireNonNull(constants$39._fprintf_p_l$MH,"_fprintf_p_l");
    }
    public static int _fprintf_p_l ( Addressable _Stream,  Addressable _Format,  Addressable _Locale, Object... x3) {
        var mh$ = _fprintf_p_l$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Format, _Locale, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fprintf_p$MH() {
        return RuntimeHelper.requireNonNull(constants$39._fprintf_p$MH,"_fprintf_p");
    }
    public static int _fprintf_p ( Addressable _Stream,  Addressable _Format, Object... x2) {
        var mh$ = _fprintf_p$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Format, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _printf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$39._printf_l$MH,"_printf_l");
    }
    public static int _printf_l ( Addressable _Format,  Addressable _Locale, Object... x2) {
        var mh$ = _printf_l$MH();
        try {
            return (int)mh$.invokeExact(_Format, _Locale, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle printf$MH() {
        return RuntimeHelper.requireNonNull(constants$39.printf$MH,"printf");
    }
    public static int printf ( Addressable _Format, Object... x1) {
        var mh$ = printf$MH();
        try {
            return (int)mh$.invokeExact(_Format, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _printf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$40._printf_s_l$MH,"_printf_s_l");
    }
    public static int _printf_s_l ( Addressable _Format,  Addressable _Locale, Object... x2) {
        var mh$ = _printf_s_l$MH();
        try {
            return (int)mh$.invokeExact(_Format, _Locale, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle printf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$40.printf_s$MH,"printf_s");
    }
    public static int printf_s ( Addressable _Format, Object... x1) {
        var mh$ = printf_s$MH();
        try {
            return (int)mh$.invokeExact(_Format, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _printf_p_l$MH() {
        return RuntimeHelper.requireNonNull(constants$40._printf_p_l$MH,"_printf_p_l");
    }
    public static int _printf_p_l ( Addressable _Format,  Addressable _Locale, Object... x2) {
        var mh$ = _printf_p_l$MH();
        try {
            return (int)mh$.invokeExact(_Format, _Locale, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _printf_p$MH() {
        return RuntimeHelper.requireNonNull(constants$40._printf_p$MH,"_printf_p");
    }
    public static int _printf_p ( Addressable _Format, Object... x1) {
        var mh$ = _printf_p$MH();
        try {
            return (int)mh$.invokeExact(_Format, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __stdio_common_vfscanf$MH() {
        return RuntimeHelper.requireNonNull(constants$40.__stdio_common_vfscanf$MH,"__stdio_common_vfscanf");
    }
    public static int __stdio_common_vfscanf ( long _Options,  Addressable _Stream,  Addressable _Format,  Addressable _Locale,  Addressable _Arglist) {
        var mh$ = __stdio_common_vfscanf$MH();
        try {
            return (int)mh$.invokeExact(_Options, _Stream, _Format, _Locale, _Arglist);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vfscanf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$40._vfscanf_l$MH,"_vfscanf_l");
    }
    public static int _vfscanf_l ( Addressable _Stream,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vfscanf_l$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vfscanf$MH() {
        return RuntimeHelper.requireNonNull(constants$41.vfscanf$MH,"vfscanf");
    }
    public static int vfscanf ( Addressable _Stream,  Addressable _Format,  Addressable _ArgList) {
        var mh$ = vfscanf$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vfscanf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$41._vfscanf_s_l$MH,"_vfscanf_s_l");
    }
    public static int _vfscanf_s_l ( Addressable _Stream,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vfscanf_s_l$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vfscanf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$41.vfscanf_s$MH,"vfscanf_s");
    }
    public static int vfscanf_s ( Addressable _Stream,  Addressable _Format,  Addressable _ArgList) {
        var mh$ = vfscanf_s$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vscanf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$41._vscanf_l$MH,"_vscanf_l");
    }
    public static int _vscanf_l ( Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vscanf_l$MH();
        try {
            return (int)mh$.invokeExact(_Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vscanf$MH() {
        return RuntimeHelper.requireNonNull(constants$41.vscanf$MH,"vscanf");
    }
    public static int vscanf ( Addressable _Format,  Addressable _ArgList) {
        var mh$ = vscanf$MH();
        try {
            return (int)mh$.invokeExact(_Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vscanf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$41._vscanf_s_l$MH,"_vscanf_s_l");
    }
    public static int _vscanf_s_l ( Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vscanf_s_l$MH();
        try {
            return (int)mh$.invokeExact(_Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vscanf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$42.vscanf_s$MH,"vscanf_s");
    }
    public static int vscanf_s ( Addressable _Format,  Addressable _ArgList) {
        var mh$ = vscanf_s$MH();
        try {
            return (int)mh$.invokeExact(_Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fscanf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$42._fscanf_l$MH,"_fscanf_l");
    }
    public static int _fscanf_l ( Addressable _Stream,  Addressable _Format,  Addressable _Locale, Object... x3) {
        var mh$ = _fscanf_l$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Format, _Locale, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fscanf$MH() {
        return RuntimeHelper.requireNonNull(constants$42.fscanf$MH,"fscanf");
    }
    public static int fscanf ( Addressable _Stream,  Addressable _Format, Object... x2) {
        var mh$ = fscanf$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Format, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fscanf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$42._fscanf_s_l$MH,"_fscanf_s_l");
    }
    public static int _fscanf_s_l ( Addressable _Stream,  Addressable _Format,  Addressable _Locale, Object... x3) {
        var mh$ = _fscanf_s_l$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Format, _Locale, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fscanf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$42.fscanf_s$MH,"fscanf_s");
    }
    public static int fscanf_s ( Addressable _Stream,  Addressable _Format, Object... x2) {
        var mh$ = fscanf_s$MH();
        try {
            return (int)mh$.invokeExact(_Stream, _Format, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _scanf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$42._scanf_l$MH,"_scanf_l");
    }
    public static int _scanf_l ( Addressable _Format,  Addressable _Locale, Object... x2) {
        var mh$ = _scanf_l$MH();
        try {
            return (int)mh$.invokeExact(_Format, _Locale, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle scanf$MH() {
        return RuntimeHelper.requireNonNull(constants$43.scanf$MH,"scanf");
    }
    public static int scanf ( Addressable _Format, Object... x1) {
        var mh$ = scanf$MH();
        try {
            return (int)mh$.invokeExact(_Format, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _scanf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$43._scanf_s_l$MH,"_scanf_s_l");
    }
    public static int _scanf_s_l ( Addressable _Format,  Addressable _Locale, Object... x2) {
        var mh$ = _scanf_s_l$MH();
        try {
            return (int)mh$.invokeExact(_Format, _Locale, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle scanf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$43.scanf_s$MH,"scanf_s");
    }
    public static int scanf_s ( Addressable _Format, Object... x1) {
        var mh$ = scanf_s$MH();
        try {
            return (int)mh$.invokeExact(_Format, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __stdio_common_vsprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$43.__stdio_common_vsprintf$MH,"__stdio_common_vsprintf");
    }
    public static int __stdio_common_vsprintf ( long _Options,  Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = __stdio_common_vsprintf$MH();
        try {
            return (int)mh$.invokeExact(_Options, _Buffer, _BufferCount, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __stdio_common_vsprintf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$43.__stdio_common_vsprintf_s$MH,"__stdio_common_vsprintf_s");
    }
    public static int __stdio_common_vsprintf_s ( long _Options,  Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = __stdio_common_vsprintf_s$MH();
        try {
            return (int)mh$.invokeExact(_Options, _Buffer, _BufferCount, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __stdio_common_vsnprintf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$43.__stdio_common_vsnprintf_s$MH,"__stdio_common_vsnprintf_s");
    }
    public static int __stdio_common_vsnprintf_s ( long _Options,  Addressable _Buffer,  long _BufferCount,  long _MaxCount,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = __stdio_common_vsnprintf_s$MH();
        try {
            return (int)mh$.invokeExact(_Options, _Buffer, _BufferCount, _MaxCount, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __stdio_common_vsprintf_p$MH() {
        return RuntimeHelper.requireNonNull(constants$44.__stdio_common_vsprintf_p$MH,"__stdio_common_vsprintf_p");
    }
    public static int __stdio_common_vsprintf_p ( long _Options,  Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = __stdio_common_vsprintf_p$MH();
        try {
            return (int)mh$.invokeExact(_Options, _Buffer, _BufferCount, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vsnprintf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$44._vsnprintf_l$MH,"_vsnprintf_l");
    }
    public static int _vsnprintf_l ( Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vsnprintf_l$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vsnprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$44._vsnprintf$MH,"_vsnprintf");
    }
    public static int _vsnprintf ( Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _ArgList) {
        var mh$ = _vsnprintf$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vsnprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$44.vsnprintf$MH,"vsnprintf");
    }
    public static int vsnprintf ( Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _ArgList) {
        var mh$ = vsnprintf$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vsprintf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$44._vsprintf_l$MH,"_vsprintf_l");
    }
    public static int _vsprintf_l ( Addressable _Buffer,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vsprintf_l$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vsprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$44.vsprintf$MH,"vsprintf");
    }
    public static int vsprintf ( Addressable _Buffer,  Addressable _Format,  Addressable _ArgList) {
        var mh$ = vsprintf$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vsprintf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$45._vsprintf_s_l$MH,"_vsprintf_s_l");
    }
    public static int _vsprintf_s_l ( Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vsprintf_s_l$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vsprintf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$45.vsprintf_s$MH,"vsprintf_s");
    }
    public static int vsprintf_s ( Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _ArgList) {
        var mh$ = vsprintf_s$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vsprintf_p_l$MH() {
        return RuntimeHelper.requireNonNull(constants$45._vsprintf_p_l$MH,"_vsprintf_p_l");
    }
    public static int _vsprintf_p_l ( Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vsprintf_p_l$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vsprintf_p$MH() {
        return RuntimeHelper.requireNonNull(constants$45._vsprintf_p$MH,"_vsprintf_p");
    }
    public static int _vsprintf_p ( Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _ArgList) {
        var mh$ = _vsprintf_p$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vsnprintf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$45._vsnprintf_s_l$MH,"_vsnprintf_s_l");
    }
    public static int _vsnprintf_s_l ( Addressable _Buffer,  long _BufferCount,  long _MaxCount,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vsnprintf_s_l$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _MaxCount, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vsnprintf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$45._vsnprintf_s$MH,"_vsnprintf_s");
    }
    public static int _vsnprintf_s ( Addressable _Buffer,  long _BufferCount,  long _MaxCount,  Addressable _Format,  Addressable _ArgList) {
        var mh$ = _vsnprintf_s$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _MaxCount, _Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vsnprintf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$46.vsnprintf_s$MH,"vsnprintf_s");
    }
    public static int vsnprintf_s ( Addressable _Buffer,  long _BufferCount,  long _MaxCount,  Addressable _Format,  Addressable _ArgList) {
        var mh$ = vsnprintf_s$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _MaxCount, _Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vscprintf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$46._vscprintf_l$MH,"_vscprintf_l");
    }
    public static int _vscprintf_l ( Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vscprintf_l$MH();
        try {
            return (int)mh$.invokeExact(_Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vscprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$46._vscprintf$MH,"_vscprintf");
    }
    public static int _vscprintf ( Addressable _Format,  Addressable _ArgList) {
        var mh$ = _vscprintf$MH();
        try {
            return (int)mh$.invokeExact(_Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vscprintf_p_l$MH() {
        return RuntimeHelper.requireNonNull(constants$46._vscprintf_p_l$MH,"_vscprintf_p_l");
    }
    public static int _vscprintf_p_l ( Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vscprintf_p_l$MH();
        try {
            return (int)mh$.invokeExact(_Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vscprintf_p$MH() {
        return RuntimeHelper.requireNonNull(constants$46._vscprintf_p$MH,"_vscprintf_p");
    }
    public static int _vscprintf_p ( Addressable _Format,  Addressable _ArgList) {
        var mh$ = _vscprintf_p$MH();
        try {
            return (int)mh$.invokeExact(_Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vsnprintf_c_l$MH() {
        return RuntimeHelper.requireNonNull(constants$46._vsnprintf_c_l$MH,"_vsnprintf_c_l");
    }
    public static int _vsnprintf_c_l ( Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vsnprintf_c_l$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vsnprintf_c$MH() {
        return RuntimeHelper.requireNonNull(constants$47._vsnprintf_c$MH,"_vsnprintf_c");
    }
    public static int _vsnprintf_c ( Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _ArgList) {
        var mh$ = _vsnprintf_c$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _sprintf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$47._sprintf_l$MH,"_sprintf_l");
    }
    public static int _sprintf_l ( Addressable _Buffer,  Addressable _Format,  Addressable _Locale, Object... x3) {
        var mh$ = _sprintf_l$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _Format, _Locale, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$47.sprintf$MH,"sprintf");
    }
    public static int sprintf ( Addressable _Buffer,  Addressable _Format, Object... x2) {
        var mh$ = sprintf$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _Format, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _sprintf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$47._sprintf_s_l$MH,"_sprintf_s_l");
    }
    public static int _sprintf_s_l ( Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _Locale, Object... x4) {
        var mh$ = _sprintf_s_l$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, _Locale, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sprintf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$47.sprintf_s$MH,"sprintf_s");
    }
    public static int sprintf_s ( Addressable _Buffer,  long _BufferCount,  Addressable _Format, Object... x3) {
        var mh$ = sprintf_s$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _sprintf_p_l$MH() {
        return RuntimeHelper.requireNonNull(constants$47._sprintf_p_l$MH,"_sprintf_p_l");
    }
    public static int _sprintf_p_l ( Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _Locale, Object... x4) {
        var mh$ = _sprintf_p_l$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, _Locale, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _sprintf_p$MH() {
        return RuntimeHelper.requireNonNull(constants$48._sprintf_p$MH,"_sprintf_p");
    }
    public static int _sprintf_p ( Addressable _Buffer,  long _BufferCount,  Addressable _Format, Object... x3) {
        var mh$ = _sprintf_p$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _snprintf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$48._snprintf_l$MH,"_snprintf_l");
    }
    public static int _snprintf_l ( Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _Locale, Object... x4) {
        var mh$ = _snprintf_l$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, _Locale, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle snprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$48.snprintf$MH,"snprintf");
    }
    public static int snprintf ( Addressable _Buffer,  long _BufferCount,  Addressable _Format, Object... x3) {
        var mh$ = snprintf$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _snprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$48._snprintf$MH,"_snprintf");
    }
    public static int _snprintf ( Addressable _Buffer,  long _BufferCount,  Addressable _Format, Object... x3) {
        var mh$ = _snprintf$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _snprintf_c_l$MH() {
        return RuntimeHelper.requireNonNull(constants$48._snprintf_c_l$MH,"_snprintf_c_l");
    }
    public static int _snprintf_c_l ( Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _Locale, Object... x4) {
        var mh$ = _snprintf_c_l$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, _Locale, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _snprintf_c$MH() {
        return RuntimeHelper.requireNonNull(constants$48._snprintf_c$MH,"_snprintf_c");
    }
    public static int _snprintf_c ( Addressable _Buffer,  long _BufferCount,  Addressable _Format, Object... x3) {
        var mh$ = _snprintf_c$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _snprintf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$49._snprintf_s_l$MH,"_snprintf_s_l");
    }
    public static int _snprintf_s_l ( Addressable _Buffer,  long _BufferCount,  long _MaxCount,  Addressable _Format,  Addressable _Locale, Object... x5) {
        var mh$ = _snprintf_s_l$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _MaxCount, _Format, _Locale, x5);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _snprintf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$49._snprintf_s$MH,"_snprintf_s");
    }
    public static int _snprintf_s ( Addressable _Buffer,  long _BufferCount,  long _MaxCount,  Addressable _Format, Object... x4) {
        var mh$ = _snprintf_s$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _MaxCount, _Format, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _scprintf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$49._scprintf_l$MH,"_scprintf_l");
    }
    public static int _scprintf_l ( Addressable _Format,  Addressable _Locale, Object... x2) {
        var mh$ = _scprintf_l$MH();
        try {
            return (int)mh$.invokeExact(_Format, _Locale, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _scprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$49._scprintf$MH,"_scprintf");
    }
    public static int _scprintf ( Addressable _Format, Object... x1) {
        var mh$ = _scprintf$MH();
        try {
            return (int)mh$.invokeExact(_Format, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _scprintf_p_l$MH() {
        return RuntimeHelper.requireNonNull(constants$49._scprintf_p_l$MH,"_scprintf_p_l");
    }
    public static int _scprintf_p_l ( Addressable _Format,  Addressable _Locale, Object... x2) {
        var mh$ = _scprintf_p_l$MH();
        try {
            return (int)mh$.invokeExact(_Format, _Locale, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _scprintf_p$MH() {
        return RuntimeHelper.requireNonNull(constants$49._scprintf_p$MH,"_scprintf_p");
    }
    public static int _scprintf_p ( Addressable _Format, Object... x1) {
        var mh$ = _scprintf_p$MH();
        try {
            return (int)mh$.invokeExact(_Format, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __stdio_common_vsscanf$MH() {
        return RuntimeHelper.requireNonNull(constants$50.__stdio_common_vsscanf$MH,"__stdio_common_vsscanf");
    }
    public static int __stdio_common_vsscanf ( long _Options,  Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = __stdio_common_vsscanf$MH();
        try {
            return (int)mh$.invokeExact(_Options, _Buffer, _BufferCount, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vsscanf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$50._vsscanf_l$MH,"_vsscanf_l");
    }
    public static int _vsscanf_l ( Addressable _Buffer,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vsscanf_l$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vsscanf$MH() {
        return RuntimeHelper.requireNonNull(constants$50.vsscanf$MH,"vsscanf");
    }
    public static int vsscanf ( Addressable _Buffer,  Addressable _Format,  Addressable _ArgList) {
        var mh$ = vsscanf$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vsscanf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$50._vsscanf_s_l$MH,"_vsscanf_s_l");
    }
    public static int _vsscanf_s_l ( Addressable _Buffer,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = _vsscanf_s_l$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _Format, _Locale, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vsscanf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$50.vsscanf_s$MH,"vsscanf_s");
    }
    public static int vsscanf_s ( Addressable _Buffer,  Addressable _Format,  Addressable _ArgList) {
        var mh$ = vsscanf_s$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _Format, _ArgList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _sscanf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$50._sscanf_l$MH,"_sscanf_l");
    }
    public static int _sscanf_l ( Addressable _Buffer,  Addressable _Format,  Addressable _Locale, Object... x3) {
        var mh$ = _sscanf_l$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _Format, _Locale, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sscanf$MH() {
        return RuntimeHelper.requireNonNull(constants$51.sscanf$MH,"sscanf");
    }
    public static int sscanf ( Addressable _Buffer,  Addressable _Format, Object... x2) {
        var mh$ = sscanf$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _Format, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _sscanf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$51._sscanf_s_l$MH,"_sscanf_s_l");
    }
    public static int _sscanf_s_l ( Addressable _Buffer,  Addressable _Format,  Addressable _Locale, Object... x3) {
        var mh$ = _sscanf_s_l$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _Format, _Locale, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sscanf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$51.sscanf_s$MH,"sscanf_s");
    }
    public static int sscanf_s ( Addressable _Buffer,  Addressable _Format, Object... x2) {
        var mh$ = sscanf_s$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _Format, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _snscanf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$51._snscanf_l$MH,"_snscanf_l");
    }
    public static int _snscanf_l ( Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _Locale, Object... x4) {
        var mh$ = _snscanf_l$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, _Locale, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _snscanf$MH() {
        return RuntimeHelper.requireNonNull(constants$51._snscanf$MH,"_snscanf");
    }
    public static int _snscanf ( Addressable _Buffer,  long _BufferCount,  Addressable _Format, Object... x3) {
        var mh$ = _snscanf$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _snscanf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$51._snscanf_s_l$MH,"_snscanf_s_l");
    }
    public static int _snscanf_s_l ( Addressable _Buffer,  long _BufferCount,  Addressable _Format,  Addressable _Locale, Object... x4) {
        var mh$ = _snscanf_s_l$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, _Locale, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _snscanf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$52._snscanf_s$MH,"_snscanf_s");
    }
    public static int _snscanf_s ( Addressable _Buffer,  long _BufferCount,  Addressable _Format, Object... x3) {
        var mh$ = _snscanf_s$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Format, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle tempnam$MH() {
        return RuntimeHelper.requireNonNull(constants$52.tempnam$MH,"tempnam");
    }
    public static MemoryAddress tempnam ( Addressable _Directory,  Addressable _FilePrefix) {
        var mh$ = tempnam$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Directory, _FilePrefix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fcloseall$MH() {
        return RuntimeHelper.requireNonNull(constants$52.fcloseall$MH,"fcloseall");
    }
    public static int fcloseall () {
        var mh$ = fcloseall$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fdopen$MH() {
        return RuntimeHelper.requireNonNull(constants$52.fdopen$MH,"fdopen");
    }
    public static MemoryAddress fdopen ( int _FileHandle,  Addressable _Format) {
        var mh$ = fdopen$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_FileHandle, _Format);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fgetchar$MH() {
        return RuntimeHelper.requireNonNull(constants$52.fgetchar$MH,"fgetchar");
    }
    public static int fgetchar () {
        var mh$ = fgetchar$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fileno$MH() {
        return RuntimeHelper.requireNonNull(constants$52.fileno$MH,"fileno");
    }
    public static int fileno ( Addressable _Stream) {
        var mh$ = fileno$MH();
        try {
            return (int)mh$.invokeExact(_Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle flushall$MH() {
        return RuntimeHelper.requireNonNull(constants$53.flushall$MH,"flushall");
    }
    public static int flushall () {
        var mh$ = flushall$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fputchar$MH() {
        return RuntimeHelper.requireNonNull(constants$53.fputchar$MH,"fputchar");
    }
    public static int fputchar ( int _Ch) {
        var mh$ = fputchar$MH();
        try {
            return (int)mh$.invokeExact(_Ch);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getw$MH() {
        return RuntimeHelper.requireNonNull(constants$53.getw$MH,"getw");
    }
    public static int getw ( Addressable _Stream) {
        var mh$ = getw$MH();
        try {
            return (int)mh$.invokeExact(_Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle putw$MH() {
        return RuntimeHelper.requireNonNull(constants$53.putw$MH,"putw");
    }
    public static int putw ( int _Ch,  Addressable _Stream) {
        var mh$ = putw$MH();
        try {
            return (int)mh$.invokeExact(_Ch, _Stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rmtmp$MH() {
        return RuntimeHelper.requireNonNull(constants$53.rmtmp$MH,"rmtmp");
    }
    public static int rmtmp () {
        var mh$ = rmtmp$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfInt _off_t = Constants$root.C_LONG$LAYOUT;
    public static OfInt off_t = Constants$root.C_LONG$LAYOUT;
    public static MethodHandle _wasctime$MH() {
        return RuntimeHelper.requireNonNull(constants$53._wasctime$MH,"_wasctime");
    }
    public static MemoryAddress _wasctime ( Addressable _Tm) {
        var mh$ = _wasctime$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Tm);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wasctime_s$MH() {
        return RuntimeHelper.requireNonNull(constants$54._wasctime_s$MH,"_wasctime_s");
    }
    public static int _wasctime_s ( Addressable _Buffer,  long _SizeInWords,  Addressable _Tm) {
        var mh$ = _wasctime_s$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _SizeInWords, _Tm);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcsftime$MH() {
        return RuntimeHelper.requireNonNull(constants$54.wcsftime$MH,"wcsftime");
    }
    public static long wcsftime ( Addressable _Buffer,  long _SizeInWords,  Addressable _Format,  Addressable _Tm) {
        var mh$ = wcsftime$MH();
        try {
            return (long)mh$.invokeExact(_Buffer, _SizeInWords, _Format, _Tm);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcsftime_l$MH() {
        return RuntimeHelper.requireNonNull(constants$54._wcsftime_l$MH,"_wcsftime_l");
    }
    public static long _wcsftime_l ( Addressable _Buffer,  long _SizeInWords,  Addressable _Format,  Addressable _Tm,  Addressable _Locale) {
        var mh$ = _wcsftime_l$MH();
        try {
            return (long)mh$.invokeExact(_Buffer, _SizeInWords, _Format, _Tm, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wctime32$MH() {
        return RuntimeHelper.requireNonNull(constants$54._wctime32$MH,"_wctime32");
    }
    public static MemoryAddress _wctime32 ( Addressable _Time) {
        var mh$ = _wctime32$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Time);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wctime32_s$MH() {
        return RuntimeHelper.requireNonNull(constants$54._wctime32_s$MH,"_wctime32_s");
    }
    public static int _wctime32_s ( Addressable _Buffer,  long _SizeInWords,  Addressable _Time) {
        var mh$ = _wctime32_s$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _SizeInWords, _Time);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wctime64$MH() {
        return RuntimeHelper.requireNonNull(constants$54._wctime64$MH,"_wctime64");
    }
    public static MemoryAddress _wctime64 ( Addressable _Time) {
        var mh$ = _wctime64$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Time);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wctime64_s$MH() {
        return RuntimeHelper.requireNonNull(constants$55._wctime64_s$MH,"_wctime64_s");
    }
    public static int _wctime64_s ( Addressable _Buffer,  long _SizeInWords,  Addressable _Time) {
        var mh$ = _wctime64_s$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _SizeInWords, _Time);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wstrdate_s$MH() {
        return RuntimeHelper.requireNonNull(constants$55._wstrdate_s$MH,"_wstrdate_s");
    }
    public static int _wstrdate_s ( Addressable _Buffer,  long _SizeInWords) {
        var mh$ = _wstrdate_s$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _SizeInWords);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wstrdate$MH() {
        return RuntimeHelper.requireNonNull(constants$55._wstrdate$MH,"_wstrdate");
    }
    public static MemoryAddress _wstrdate ( Addressable _Buffer) {
        var mh$ = _wstrdate$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wstrtime_s$MH() {
        return RuntimeHelper.requireNonNull(constants$55._wstrtime_s$MH,"_wstrtime_s");
    }
    public static int _wstrtime_s ( Addressable _Buffer,  long _SizeInWords) {
        var mh$ = _wstrtime_s$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _SizeInWords);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wstrtime$MH() {
        return RuntimeHelper.requireNonNull(constants$55._wstrtime$MH,"_wstrtime");
    }
    public static MemoryAddress _wstrtime ( Addressable _Buffer) {
        var mh$ = _wstrtime$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wctime$MH() {
        return RuntimeHelper.requireNonNull(constants$55._wctime$MH,"_wctime");
    }
    public static MemoryAddress _wctime ( Addressable _Time) {
        var mh$ = _wctime$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Time);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wctime_s$MH() {
        return RuntimeHelper.requireNonNull(constants$56._wctime_s$MH,"_wctime_s");
    }
    public static int _wctime_s ( Addressable _Buffer,  long _SizeInWords,  Addressable _Time) {
        var mh$ = _wctime_s$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _SizeInWords, _Time);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfInt clock_t = Constants$root.C_LONG$LAYOUT;
    public static MethodHandle __daylight$MH() {
        return RuntimeHelper.requireNonNull(constants$56.__daylight$MH,"__daylight");
    }
    public static MemoryAddress __daylight () {
        var mh$ = __daylight$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __dstbias$MH() {
        return RuntimeHelper.requireNonNull(constants$56.__dstbias$MH,"__dstbias");
    }
    public static MemoryAddress __dstbias () {
        var mh$ = __dstbias$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __timezone$MH() {
        return RuntimeHelper.requireNonNull(constants$56.__timezone$MH,"__timezone");
    }
    public static MemoryAddress __timezone () {
        var mh$ = __timezone$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __tzname$MH() {
        return RuntimeHelper.requireNonNull(constants$56.__tzname$MH,"__tzname");
    }
    public static MemoryAddress __tzname () {
        var mh$ = __tzname$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _get_daylight$MH() {
        return RuntimeHelper.requireNonNull(constants$56._get_daylight$MH,"_get_daylight");
    }
    public static int _get_daylight ( Addressable _Daylight) {
        var mh$ = _get_daylight$MH();
        try {
            return (int)mh$.invokeExact(_Daylight);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _get_dstbias$MH() {
        return RuntimeHelper.requireNonNull(constants$57._get_dstbias$MH,"_get_dstbias");
    }
    public static int _get_dstbias ( Addressable _DaylightSavingsBias) {
        var mh$ = _get_dstbias$MH();
        try {
            return (int)mh$.invokeExact(_DaylightSavingsBias);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _get_timezone$MH() {
        return RuntimeHelper.requireNonNull(constants$57._get_timezone$MH,"_get_timezone");
    }
    public static int _get_timezone ( Addressable _TimeZone) {
        var mh$ = _get_timezone$MH();
        try {
            return (int)mh$.invokeExact(_TimeZone);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _get_tzname$MH() {
        return RuntimeHelper.requireNonNull(constants$57._get_tzname$MH,"_get_tzname");
    }
    public static int _get_tzname ( Addressable _ReturnValue,  Addressable _Buffer,  long _SizeInBytes,  int _Index) {
        var mh$ = _get_tzname$MH();
        try {
            return (int)mh$.invokeExact(_ReturnValue, _Buffer, _SizeInBytes, _Index);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle asctime$MH() {
        return RuntimeHelper.requireNonNull(constants$57.asctime$MH,"asctime");
    }
    public static MemoryAddress asctime ( Addressable _Tm) {
        var mh$ = asctime$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Tm);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle asctime_s$MH() {
        return RuntimeHelper.requireNonNull(constants$57.asctime_s$MH,"asctime_s");
    }
    public static int asctime_s ( Addressable _Buffer,  long _SizeInBytes,  Addressable _Tm) {
        var mh$ = asctime_s$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _SizeInBytes, _Tm);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle clock$MH() {
        return RuntimeHelper.requireNonNull(constants$57.clock$MH,"clock");
    }
    public static int clock () {
        var mh$ = clock$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _ctime32$MH() {
        return RuntimeHelper.requireNonNull(constants$58._ctime32$MH,"_ctime32");
    }
    public static MemoryAddress _ctime32 ( Addressable _Time) {
        var mh$ = _ctime32$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Time);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _ctime32_s$MH() {
        return RuntimeHelper.requireNonNull(constants$58._ctime32_s$MH,"_ctime32_s");
    }
    public static int _ctime32_s ( Addressable _Buffer,  long _SizeInBytes,  Addressable _Time) {
        var mh$ = _ctime32_s$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _SizeInBytes, _Time);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _ctime64$MH() {
        return RuntimeHelper.requireNonNull(constants$58._ctime64$MH,"_ctime64");
    }
    public static MemoryAddress _ctime64 ( Addressable _Time) {
        var mh$ = _ctime64$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Time);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _ctime64_s$MH() {
        return RuntimeHelper.requireNonNull(constants$58._ctime64_s$MH,"_ctime64_s");
    }
    public static int _ctime64_s ( Addressable _Buffer,  long _SizeInBytes,  Addressable _Time) {
        var mh$ = _ctime64_s$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _SizeInBytes, _Time);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _difftime32$MH() {
        return RuntimeHelper.requireNonNull(constants$58._difftime32$MH,"_difftime32");
    }
    public static double _difftime32 ( int _Time1,  int _Time2) {
        var mh$ = _difftime32$MH();
        try {
            return (double)mh$.invokeExact(_Time1, _Time2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _difftime64$MH() {
        return RuntimeHelper.requireNonNull(constants$58._difftime64$MH,"_difftime64");
    }
    public static double _difftime64 ( long _Time1,  long _Time2) {
        var mh$ = _difftime64$MH();
        try {
            return (double)mh$.invokeExact(_Time1, _Time2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _gmtime32$MH() {
        return RuntimeHelper.requireNonNull(constants$59._gmtime32$MH,"_gmtime32");
    }
    public static MemoryAddress _gmtime32 ( Addressable _Time) {
        var mh$ = _gmtime32$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Time);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _gmtime32_s$MH() {
        return RuntimeHelper.requireNonNull(constants$59._gmtime32_s$MH,"_gmtime32_s");
    }
    public static int _gmtime32_s ( Addressable _Tm,  Addressable _Time) {
        var mh$ = _gmtime32_s$MH();
        try {
            return (int)mh$.invokeExact(_Tm, _Time);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _gmtime64$MH() {
        return RuntimeHelper.requireNonNull(constants$59._gmtime64$MH,"_gmtime64");
    }
    public static MemoryAddress _gmtime64 ( Addressable _Time) {
        var mh$ = _gmtime64$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Time);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _gmtime64_s$MH() {
        return RuntimeHelper.requireNonNull(constants$59._gmtime64_s$MH,"_gmtime64_s");
    }
    public static int _gmtime64_s ( Addressable _Tm,  Addressable _Time) {
        var mh$ = _gmtime64_s$MH();
        try {
            return (int)mh$.invokeExact(_Tm, _Time);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _localtime32$MH() {
        return RuntimeHelper.requireNonNull(constants$59._localtime32$MH,"_localtime32");
    }
    public static MemoryAddress _localtime32 ( Addressable _Time) {
        var mh$ = _localtime32$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Time);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _localtime32_s$MH() {
        return RuntimeHelper.requireNonNull(constants$59._localtime32_s$MH,"_localtime32_s");
    }
    public static int _localtime32_s ( Addressable _Tm,  Addressable _Time) {
        var mh$ = _localtime32_s$MH();
        try {
            return (int)mh$.invokeExact(_Tm, _Time);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _localtime64$MH() {
        return RuntimeHelper.requireNonNull(constants$60._localtime64$MH,"_localtime64");
    }
    public static MemoryAddress _localtime64 ( Addressable _Time) {
        var mh$ = _localtime64$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Time);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _localtime64_s$MH() {
        return RuntimeHelper.requireNonNull(constants$60._localtime64_s$MH,"_localtime64_s");
    }
    public static int _localtime64_s ( Addressable _Tm,  Addressable _Time) {
        var mh$ = _localtime64_s$MH();
        try {
            return (int)mh$.invokeExact(_Tm, _Time);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mkgmtime32$MH() {
        return RuntimeHelper.requireNonNull(constants$60._mkgmtime32$MH,"_mkgmtime32");
    }
    public static int _mkgmtime32 ( Addressable _Tm) {
        var mh$ = _mkgmtime32$MH();
        try {
            return (int)mh$.invokeExact(_Tm);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mkgmtime64$MH() {
        return RuntimeHelper.requireNonNull(constants$60._mkgmtime64$MH,"_mkgmtime64");
    }
    public static long _mkgmtime64 ( Addressable _Tm) {
        var mh$ = _mkgmtime64$MH();
        try {
            return (long)mh$.invokeExact(_Tm);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mktime32$MH() {
        return RuntimeHelper.requireNonNull(constants$60._mktime32$MH,"_mktime32");
    }
    public static int _mktime32 ( Addressable _Tm) {
        var mh$ = _mktime32$MH();
        try {
            return (int)mh$.invokeExact(_Tm);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mktime64$MH() {
        return RuntimeHelper.requireNonNull(constants$60._mktime64$MH,"_mktime64");
    }
    public static long _mktime64 ( Addressable _Tm) {
        var mh$ = _mktime64$MH();
        try {
            return (long)mh$.invokeExact(_Tm);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strftime$MH() {
        return RuntimeHelper.requireNonNull(constants$61.strftime$MH,"strftime");
    }
    public static long strftime ( Addressable _Buffer,  long _SizeInBytes,  Addressable _Format,  Addressable _Tm) {
        var mh$ = strftime$MH();
        try {
            return (long)mh$.invokeExact(_Buffer, _SizeInBytes, _Format, _Tm);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strftime_l$MH() {
        return RuntimeHelper.requireNonNull(constants$61._strftime_l$MH,"_strftime_l");
    }
    public static long _strftime_l ( Addressable _Buffer,  long _MaxSize,  Addressable _Format,  Addressable _Tm,  Addressable _Locale) {
        var mh$ = _strftime_l$MH();
        try {
            return (long)mh$.invokeExact(_Buffer, _MaxSize, _Format, _Tm, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strdate_s$MH() {
        return RuntimeHelper.requireNonNull(constants$61._strdate_s$MH,"_strdate_s");
    }
    public static int _strdate_s ( Addressable _Buffer,  long _SizeInBytes) {
        var mh$ = _strdate_s$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _SizeInBytes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strdate$MH() {
        return RuntimeHelper.requireNonNull(constants$61._strdate$MH,"_strdate");
    }
    public static MemoryAddress _strdate ( Addressable _Buffer) {
        var mh$ = _strdate$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strtime_s$MH() {
        return RuntimeHelper.requireNonNull(constants$61._strtime_s$MH,"_strtime_s");
    }
    public static int _strtime_s ( Addressable _Buffer,  long _SizeInBytes) {
        var mh$ = _strtime_s$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _SizeInBytes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strtime$MH() {
        return RuntimeHelper.requireNonNull(constants$61._strtime$MH,"_strtime");
    }
    public static MemoryAddress _strtime ( Addressable _Buffer) {
        var mh$ = _strtime$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _time32$MH() {
        return RuntimeHelper.requireNonNull(constants$62._time32$MH,"_time32");
    }
    public static int _time32 ( Addressable _Time) {
        var mh$ = _time32$MH();
        try {
            return (int)mh$.invokeExact(_Time);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _time64$MH() {
        return RuntimeHelper.requireNonNull(constants$62._time64$MH,"_time64");
    }
    public static long _time64 ( Addressable _Time) {
        var mh$ = _time64$MH();
        try {
            return (long)mh$.invokeExact(_Time);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _timespec32_get$MH() {
        return RuntimeHelper.requireNonNull(constants$62._timespec32_get$MH,"_timespec32_get");
    }
    public static int _timespec32_get ( Addressable _Ts,  int _Base) {
        var mh$ = _timespec32_get$MH();
        try {
            return (int)mh$.invokeExact(_Ts, _Base);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _timespec64_get$MH() {
        return RuntimeHelper.requireNonNull(constants$62._timespec64_get$MH,"_timespec64_get");
    }
    public static int _timespec64_get ( Addressable _Ts,  int _Base) {
        var mh$ = _timespec64_get$MH();
        try {
            return (int)mh$.invokeExact(_Ts, _Base);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _tzset$MH() {
        return RuntimeHelper.requireNonNull(constants$62._tzset$MH,"_tzset");
    }
    public static void _tzset () {
        var mh$ = _tzset$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _getsystime$MH() {
        return RuntimeHelper.requireNonNull(constants$62._getsystime$MH,"_getsystime");
    }
    public static int _getsystime ( Addressable _Tm) {
        var mh$ = _getsystime$MH();
        try {
            return (int)mh$.invokeExact(_Tm);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _setsystime$MH() {
        return RuntimeHelper.requireNonNull(constants$63._setsystime$MH,"_setsystime");
    }
    public static int _setsystime ( Addressable _Tm,  int _Milliseconds) {
        var mh$ = _setsystime$MH();
        try {
            return (int)mh$.invokeExact(_Tm, _Milliseconds);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ctime$MH() {
        return RuntimeHelper.requireNonNull(constants$63.ctime$MH,"ctime");
    }
    public static MemoryAddress ctime ( Addressable _Time) {
        var mh$ = ctime$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Time);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle difftime$MH() {
        return RuntimeHelper.requireNonNull(constants$63.difftime$MH,"difftime");
    }
    public static double difftime ( long _Time1,  long _Time2) {
        var mh$ = difftime$MH();
        try {
            return (double)mh$.invokeExact(_Time1, _Time2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gmtime$MH() {
        return RuntimeHelper.requireNonNull(constants$63.gmtime$MH,"gmtime");
    }
    public static MemoryAddress gmtime ( Addressable _Time) {
        var mh$ = gmtime$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Time);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle localtime$MH() {
        return RuntimeHelper.requireNonNull(constants$63.localtime$MH,"localtime");
    }
    public static MemoryAddress localtime ( Addressable _Time) {
        var mh$ = localtime$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_Time);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mkgmtime$MH() {
        return RuntimeHelper.requireNonNull(constants$63._mkgmtime$MH,"_mkgmtime");
    }
    public static long _mkgmtime ( Addressable _Tm) {
        var mh$ = _mkgmtime$MH();
        try {
            return (long)mh$.invokeExact(_Tm);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mktime$MH() {
        return RuntimeHelper.requireNonNull(constants$64.mktime$MH,"mktime");
    }
    public static long mktime ( Addressable _Tm) {
        var mh$ = mktime$MH();
        try {
            return (long)mh$.invokeExact(_Tm);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle time$MH() {
        return RuntimeHelper.requireNonNull(constants$64.time$MH,"time");
    }
    public static long time ( Addressable _Time) {
        var mh$ = time$MH();
        try {
            return (long)mh$.invokeExact(_Time);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle timespec_get$MH() {
        return RuntimeHelper.requireNonNull(constants$64.timespec_get$MH,"timespec_get");
    }
    public static int timespec_get ( Addressable _Ts,  int _Base) {
        var mh$ = timespec_get$MH();
        try {
            return (int)mh$.invokeExact(_Ts, _Base);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ctime_s$MH() {
        return RuntimeHelper.requireNonNull(constants$64.ctime_s$MH,"ctime_s");
    }
    public static int ctime_s ( Addressable _Buffer,  long _SizeInBytes,  Addressable _Time) {
        var mh$ = ctime_s$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _SizeInBytes, _Time);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gmtime_s$MH() {
        return RuntimeHelper.requireNonNull(constants$64.gmtime_s$MH,"gmtime_s");
    }
    public static int gmtime_s ( Addressable _Tm,  Addressable _Time) {
        var mh$ = gmtime_s$MH();
        try {
            return (int)mh$.invokeExact(_Tm, _Time);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle localtime_s$MH() {
        return RuntimeHelper.requireNonNull(constants$64.localtime_s$MH,"localtime_s");
    }
    public static int localtime_s ( Addressable _Tm,  Addressable _Time) {
        var mh$ = localtime_s$MH();
        try {
            return (int)mh$.invokeExact(_Tm, _Time);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle tzset$MH() {
        return RuntimeHelper.requireNonNull(constants$65.tzset$MH,"tzset");
    }
    public static void tzset () {
        var mh$ = tzset$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int ExceptionContinueExecution() {
        return (int)0L;
    }
    public static int ExceptionContinueSearch() {
        return (int)1L;
    }
    public static int ExceptionNestedException() {
        return (int)2L;
    }
    public static int ExceptionCollidedUnwind() {
        return (int)3L;
    }
    public static MethodHandle __C_specific_handler$MH() {
        return RuntimeHelper.requireNonNull(constants$65.__C_specific_handler$MH,"__C_specific_handler");
    }
    public static int __C_specific_handler ( Addressable ExceptionRecord,  Addressable EstablisherFrame,  Addressable ContextRecord,  Addressable DispatcherContext) {
        var mh$ = __C_specific_handler$MH();
        try {
            return (int)mh$.invokeExact(ExceptionRecord, EstablisherFrame, ContextRecord, DispatcherContext);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _exception_code$MH() {
        return RuntimeHelper.requireNonNull(constants$65._exception_code$MH,"_exception_code");
    }
    public static int _exception_code () {
        var mh$ = _exception_code$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _exception_info$MH() {
        return RuntimeHelper.requireNonNull(constants$65._exception_info$MH,"_exception_info");
    }
    public static MemoryAddress _exception_info () {
        var mh$ = _exception_info$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _abnormal_termination$MH() {
        return RuntimeHelper.requireNonNull(constants$65._abnormal_termination$MH,"_abnormal_termination");
    }
    public static int _abnormal_termination () {
        var mh$ = _abnormal_termination$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress va_list$0 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress __gnuc_va_list = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PULONG = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PUSHORT = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PUCHAR = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PSZ = Constants$root.C_POINTER$LAYOUT;
    public static OfInt BOOL = Constants$root.C_LONG$LAYOUT;
    public static OfFloat FLOAT = Constants$root.C_FLOAT$LAYOUT;
    public static OfAddress PFLOAT = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PBOOL = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPBOOL = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PBYTE = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPBYTE = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PINT = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPINT = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PWORD = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPWORD = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPLONG = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PDWORD = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPDWORD = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPVOID = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPCVOID = Constants$root.C_POINTER$LAYOUT;
    public static OfInt INT = Constants$root.C_LONG$LAYOUT;
    public static OfAddress PUINT = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle __pctype_func$MH() {
        return RuntimeHelper.requireNonNull(constants$65.__pctype_func$MH,"__pctype_func");
    }
    public static MemoryAddress __pctype_func () {
        var mh$ = __pctype_func$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __pwctype_func$MH() {
        return RuntimeHelper.requireNonNull(constants$66.__pwctype_func$MH,"__pwctype_func");
    }
    public static MemoryAddress __pwctype_func () {
        var mh$ = __pwctype_func$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle iswalnum$MH() {
        return RuntimeHelper.requireNonNull(constants$66.iswalnum$MH,"iswalnum");
    }
    public static int iswalnum ( short _C) {
        var mh$ = iswalnum$MH();
        try {
            return (int)mh$.invokeExact(_C);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle iswalpha$MH() {
        return RuntimeHelper.requireNonNull(constants$66.iswalpha$MH,"iswalpha");
    }
    public static int iswalpha ( short _C) {
        var mh$ = iswalpha$MH();
        try {
            return (int)mh$.invokeExact(_C);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle iswascii$MH() {
        return RuntimeHelper.requireNonNull(constants$66.iswascii$MH,"iswascii");
    }
    public static int iswascii ( short _C) {
        var mh$ = iswascii$MH();
        try {
            return (int)mh$.invokeExact(_C);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle iswblank$MH() {
        return RuntimeHelper.requireNonNull(constants$66.iswblank$MH,"iswblank");
    }
    public static int iswblank ( short _C) {
        var mh$ = iswblank$MH();
        try {
            return (int)mh$.invokeExact(_C);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle iswcntrl$MH() {
        return RuntimeHelper.requireNonNull(constants$66.iswcntrl$MH,"iswcntrl");
    }
    public static int iswcntrl ( short _C) {
        var mh$ = iswcntrl$MH();
        try {
            return (int)mh$.invokeExact(_C);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle iswdigit$MH() {
        return RuntimeHelper.requireNonNull(constants$67.iswdigit$MH,"iswdigit");
    }
    public static int iswdigit ( short _C) {
        var mh$ = iswdigit$MH();
        try {
            return (int)mh$.invokeExact(_C);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle iswgraph$MH() {
        return RuntimeHelper.requireNonNull(constants$67.iswgraph$MH,"iswgraph");
    }
    public static int iswgraph ( short _C) {
        var mh$ = iswgraph$MH();
        try {
            return (int)mh$.invokeExact(_C);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle iswlower$MH() {
        return RuntimeHelper.requireNonNull(constants$67.iswlower$MH,"iswlower");
    }
    public static int iswlower ( short _C) {
        var mh$ = iswlower$MH();
        try {
            return (int)mh$.invokeExact(_C);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle iswprint$MH() {
        return RuntimeHelper.requireNonNull(constants$67.iswprint$MH,"iswprint");
    }
    public static int iswprint ( short _C) {
        var mh$ = iswprint$MH();
        try {
            return (int)mh$.invokeExact(_C);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle iswpunct$MH() {
        return RuntimeHelper.requireNonNull(constants$67.iswpunct$MH,"iswpunct");
    }
    public static int iswpunct ( short _C) {
        var mh$ = iswpunct$MH();
        try {
            return (int)mh$.invokeExact(_C);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle iswspace$MH() {
        return RuntimeHelper.requireNonNull(constants$67.iswspace$MH,"iswspace");
    }
    public static int iswspace ( short _C) {
        var mh$ = iswspace$MH();
        try {
            return (int)mh$.invokeExact(_C);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle iswupper$MH() {
        return RuntimeHelper.requireNonNull(constants$68.iswupper$MH,"iswupper");
    }
    public static int iswupper ( short _C) {
        var mh$ = iswupper$MH();
        try {
            return (int)mh$.invokeExact(_C);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle iswxdigit$MH() {
        return RuntimeHelper.requireNonNull(constants$68.iswxdigit$MH,"iswxdigit");
    }
    public static int iswxdigit ( short _C) {
        var mh$ = iswxdigit$MH();
        try {
            return (int)mh$.invokeExact(_C);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __iswcsymf$MH() {
        return RuntimeHelper.requireNonNull(constants$68.__iswcsymf$MH,"__iswcsymf");
    }
    public static int __iswcsymf ( short _C) {
        var mh$ = __iswcsymf$MH();
        try {
            return (int)mh$.invokeExact(_C);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __iswcsym$MH() {
        return RuntimeHelper.requireNonNull(constants$68.__iswcsym$MH,"__iswcsym");
    }
    public static int __iswcsym ( short _C) {
        var mh$ = __iswcsym$MH();
        try {
            return (int)mh$.invokeExact(_C);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _iswalnum_l$MH() {
        return RuntimeHelper.requireNonNull(constants$68._iswalnum_l$MH,"_iswalnum_l");
    }
    public static int _iswalnum_l ( short _C,  Addressable _Locale) {
        var mh$ = _iswalnum_l$MH();
        try {
            return (int)mh$.invokeExact(_C, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _iswalpha_l$MH() {
        return RuntimeHelper.requireNonNull(constants$68._iswalpha_l$MH,"_iswalpha_l");
    }
    public static int _iswalpha_l ( short _C,  Addressable _Locale) {
        var mh$ = _iswalpha_l$MH();
        try {
            return (int)mh$.invokeExact(_C, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _iswblank_l$MH() {
        return RuntimeHelper.requireNonNull(constants$69._iswblank_l$MH,"_iswblank_l");
    }
    public static int _iswblank_l ( short _C,  Addressable _Locale) {
        var mh$ = _iswblank_l$MH();
        try {
            return (int)mh$.invokeExact(_C, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _iswcntrl_l$MH() {
        return RuntimeHelper.requireNonNull(constants$69._iswcntrl_l$MH,"_iswcntrl_l");
    }
    public static int _iswcntrl_l ( short _C,  Addressable _Locale) {
        var mh$ = _iswcntrl_l$MH();
        try {
            return (int)mh$.invokeExact(_C, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _iswdigit_l$MH() {
        return RuntimeHelper.requireNonNull(constants$69._iswdigit_l$MH,"_iswdigit_l");
    }
    public static int _iswdigit_l ( short _C,  Addressable _Locale) {
        var mh$ = _iswdigit_l$MH();
        try {
            return (int)mh$.invokeExact(_C, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _iswgraph_l$MH() {
        return RuntimeHelper.requireNonNull(constants$69._iswgraph_l$MH,"_iswgraph_l");
    }
    public static int _iswgraph_l ( short _C,  Addressable _Locale) {
        var mh$ = _iswgraph_l$MH();
        try {
            return (int)mh$.invokeExact(_C, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _iswlower_l$MH() {
        return RuntimeHelper.requireNonNull(constants$69._iswlower_l$MH,"_iswlower_l");
    }
    public static int _iswlower_l ( short _C,  Addressable _Locale) {
        var mh$ = _iswlower_l$MH();
        try {
            return (int)mh$.invokeExact(_C, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _iswprint_l$MH() {
        return RuntimeHelper.requireNonNull(constants$69._iswprint_l$MH,"_iswprint_l");
    }
    public static int _iswprint_l ( short _C,  Addressable _Locale) {
        var mh$ = _iswprint_l$MH();
        try {
            return (int)mh$.invokeExact(_C, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _iswpunct_l$MH() {
        return RuntimeHelper.requireNonNull(constants$70._iswpunct_l$MH,"_iswpunct_l");
    }
    public static int _iswpunct_l ( short _C,  Addressable _Locale) {
        var mh$ = _iswpunct_l$MH();
        try {
            return (int)mh$.invokeExact(_C, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _iswspace_l$MH() {
        return RuntimeHelper.requireNonNull(constants$70._iswspace_l$MH,"_iswspace_l");
    }
    public static int _iswspace_l ( short _C,  Addressable _Locale) {
        var mh$ = _iswspace_l$MH();
        try {
            return (int)mh$.invokeExact(_C, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _iswupper_l$MH() {
        return RuntimeHelper.requireNonNull(constants$70._iswupper_l$MH,"_iswupper_l");
    }
    public static int _iswupper_l ( short _C,  Addressable _Locale) {
        var mh$ = _iswupper_l$MH();
        try {
            return (int)mh$.invokeExact(_C, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _iswxdigit_l$MH() {
        return RuntimeHelper.requireNonNull(constants$70._iswxdigit_l$MH,"_iswxdigit_l");
    }
    public static int _iswxdigit_l ( short _C,  Addressable _Locale) {
        var mh$ = _iswxdigit_l$MH();
        try {
            return (int)mh$.invokeExact(_C, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _iswcsymf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$70._iswcsymf_l$MH,"_iswcsymf_l");
    }
    public static int _iswcsymf_l ( short _C,  Addressable _Locale) {
        var mh$ = _iswcsymf_l$MH();
        try {
            return (int)mh$.invokeExact(_C, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _iswcsym_l$MH() {
        return RuntimeHelper.requireNonNull(constants$70._iswcsym_l$MH,"_iswcsym_l");
    }
    public static int _iswcsym_l ( short _C,  Addressable _Locale) {
        var mh$ = _iswcsym_l$MH();
        try {
            return (int)mh$.invokeExact(_C, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle towupper$MH() {
        return RuntimeHelper.requireNonNull(constants$71.towupper$MH,"towupper");
    }
    public static short towupper ( short _C) {
        var mh$ = towupper$MH();
        try {
            return (short)mh$.invokeExact(_C);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle towlower$MH() {
        return RuntimeHelper.requireNonNull(constants$71.towlower$MH,"towlower");
    }
    public static short towlower ( short _C) {
        var mh$ = towlower$MH();
        try {
            return (short)mh$.invokeExact(_C);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle iswctype$MH() {
        return RuntimeHelper.requireNonNull(constants$71.iswctype$MH,"iswctype");
    }
    public static int iswctype ( short _C,  short _Type) {
        var mh$ = iswctype$MH();
        try {
            return (int)mh$.invokeExact(_C, _Type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _towupper_l$MH() {
        return RuntimeHelper.requireNonNull(constants$71._towupper_l$MH,"_towupper_l");
    }
    public static short _towupper_l ( short _C,  Addressable _Locale) {
        var mh$ = _towupper_l$MH();
        try {
            return (short)mh$.invokeExact(_C, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _towlower_l$MH() {
        return RuntimeHelper.requireNonNull(constants$71._towlower_l$MH,"_towlower_l");
    }
    public static short _towlower_l ( short _C,  Addressable _Locale) {
        var mh$ = _towlower_l$MH();
        try {
            return (short)mh$.invokeExact(_C, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _iswctype_l$MH() {
        return RuntimeHelper.requireNonNull(constants$71._iswctype_l$MH,"_iswctype_l");
    }
    public static int _iswctype_l ( short _C,  short _Type,  Addressable _Locale) {
        var mh$ = _iswctype_l$MH();
        try {
            return (int)mh$.invokeExact(_C, _Type, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle isleadbyte$MH() {
        return RuntimeHelper.requireNonNull(constants$72.isleadbyte$MH,"isleadbyte");
    }
    public static int isleadbyte ( int _C) {
        var mh$ = isleadbyte$MH();
        try {
            return (int)mh$.invokeExact(_C);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _isleadbyte_l$MH() {
        return RuntimeHelper.requireNonNull(constants$72._isleadbyte_l$MH,"_isleadbyte_l");
    }
    public static int _isleadbyte_l ( int _C,  Addressable _Locale) {
        var mh$ = _isleadbyte_l$MH();
        try {
            return (int)mh$.invokeExact(_C, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle is_wctype$MH() {
        return RuntimeHelper.requireNonNull(constants$72.is_wctype$MH,"is_wctype");
    }
    public static int is_wctype ( short _C,  short _Type) {
        var mh$ = is_wctype$MH();
        try {
            return (int)mh$.invokeExact(_C, _Type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _isctype$MH() {
        return RuntimeHelper.requireNonNull(constants$72._isctype$MH,"_isctype");
    }
    public static int _isctype ( int _C,  int _Type) {
        var mh$ = _isctype$MH();
        try {
            return (int)mh$.invokeExact(_C, _Type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _isctype_l$MH() {
        return RuntimeHelper.requireNonNull(constants$72._isctype_l$MH,"_isctype_l");
    }
    public static int _isctype_l ( int _C,  int _Type,  Addressable _Locale) {
        var mh$ = _isctype_l$MH();
        try {
            return (int)mh$.invokeExact(_C, _Type, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle isalpha$MH() {
        return RuntimeHelper.requireNonNull(constants$72.isalpha$MH,"isalpha");
    }
    public static int isalpha ( int _C) {
        var mh$ = isalpha$MH();
        try {
            return (int)mh$.invokeExact(_C);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _isalpha_l$MH() {
        return RuntimeHelper.requireNonNull(constants$73._isalpha_l$MH,"_isalpha_l");
    }
    public static int _isalpha_l ( int _C,  Addressable _Locale) {
        var mh$ = _isalpha_l$MH();
        try {
            return (int)mh$.invokeExact(_C, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle isupper$MH() {
        return RuntimeHelper.requireNonNull(constants$73.isupper$MH,"isupper");
    }
    public static int isupper ( int _C) {
        var mh$ = isupper$MH();
        try {
            return (int)mh$.invokeExact(_C);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _isupper_l$MH() {
        return RuntimeHelper.requireNonNull(constants$73._isupper_l$MH,"_isupper_l");
    }
    public static int _isupper_l ( int _C,  Addressable _Locale) {
        var mh$ = _isupper_l$MH();
        try {
            return (int)mh$.invokeExact(_C, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle islower$MH() {
        return RuntimeHelper.requireNonNull(constants$73.islower$MH,"islower");
    }
    public static int islower ( int _C) {
        var mh$ = islower$MH();
        try {
            return (int)mh$.invokeExact(_C);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _islower_l$MH() {
        return RuntimeHelper.requireNonNull(constants$73._islower_l$MH,"_islower_l");
    }
    public static int _islower_l ( int _C,  Addressable _Locale) {
        var mh$ = _islower_l$MH();
        try {
            return (int)mh$.invokeExact(_C, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle isdigit$MH() {
        return RuntimeHelper.requireNonNull(constants$73.isdigit$MH,"isdigit");
    }
    public static int isdigit ( int _C) {
        var mh$ = isdigit$MH();
        try {
            return (int)mh$.invokeExact(_C);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _isdigit_l$MH() {
        return RuntimeHelper.requireNonNull(constants$74._isdigit_l$MH,"_isdigit_l");
    }
    public static int _isdigit_l ( int _C,  Addressable _Locale) {
        var mh$ = _isdigit_l$MH();
        try {
            return (int)mh$.invokeExact(_C, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle isxdigit$MH() {
        return RuntimeHelper.requireNonNull(constants$74.isxdigit$MH,"isxdigit");
    }
    public static int isxdigit ( int _C) {
        var mh$ = isxdigit$MH();
        try {
            return (int)mh$.invokeExact(_C);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _isxdigit_l$MH() {
        return RuntimeHelper.requireNonNull(constants$74._isxdigit_l$MH,"_isxdigit_l");
    }
    public static int _isxdigit_l ( int _C,  Addressable _Locale) {
        var mh$ = _isxdigit_l$MH();
        try {
            return (int)mh$.invokeExact(_C, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle isspace$MH() {
        return RuntimeHelper.requireNonNull(constants$74.isspace$MH,"isspace");
    }
    public static int isspace ( int _C) {
        var mh$ = isspace$MH();
        try {
            return (int)mh$.invokeExact(_C);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _isspace_l$MH() {
        return RuntimeHelper.requireNonNull(constants$74._isspace_l$MH,"_isspace_l");
    }
    public static int _isspace_l ( int _C,  Addressable _Locale) {
        var mh$ = _isspace_l$MH();
        try {
            return (int)mh$.invokeExact(_C, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ispunct$MH() {
        return RuntimeHelper.requireNonNull(constants$74.ispunct$MH,"ispunct");
    }
    public static int ispunct ( int _C) {
        var mh$ = ispunct$MH();
        try {
            return (int)mh$.invokeExact(_C);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _ispunct_l$MH() {
        return RuntimeHelper.requireNonNull(constants$75._ispunct_l$MH,"_ispunct_l");
    }
    public static int _ispunct_l ( int _C,  Addressable _Locale) {
        var mh$ = _ispunct_l$MH();
        try {
            return (int)mh$.invokeExact(_C, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle isblank$MH() {
        return RuntimeHelper.requireNonNull(constants$75.isblank$MH,"isblank");
    }
    public static int isblank ( int _C) {
        var mh$ = isblank$MH();
        try {
            return (int)mh$.invokeExact(_C);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _isblank_l$MH() {
        return RuntimeHelper.requireNonNull(constants$75._isblank_l$MH,"_isblank_l");
    }
    public static int _isblank_l ( int _C,  Addressable _Locale) {
        var mh$ = _isblank_l$MH();
        try {
            return (int)mh$.invokeExact(_C, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle isalnum$MH() {
        return RuntimeHelper.requireNonNull(constants$75.isalnum$MH,"isalnum");
    }
    public static int isalnum ( int _C) {
        var mh$ = isalnum$MH();
        try {
            return (int)mh$.invokeExact(_C);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _isalnum_l$MH() {
        return RuntimeHelper.requireNonNull(constants$75._isalnum_l$MH,"_isalnum_l");
    }
    public static int _isalnum_l ( int _C,  Addressable _Locale) {
        var mh$ = _isalnum_l$MH();
        try {
            return (int)mh$.invokeExact(_C, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle isprint$MH() {
        return RuntimeHelper.requireNonNull(constants$75.isprint$MH,"isprint");
    }
    public static int isprint ( int _C) {
        var mh$ = isprint$MH();
        try {
            return (int)mh$.invokeExact(_C);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _isprint_l$MH() {
        return RuntimeHelper.requireNonNull(constants$76._isprint_l$MH,"_isprint_l");
    }
    public static int _isprint_l ( int _C,  Addressable _Locale) {
        var mh$ = _isprint_l$MH();
        try {
            return (int)mh$.invokeExact(_C, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle isgraph$MH() {
        return RuntimeHelper.requireNonNull(constants$76.isgraph$MH,"isgraph");
    }
    public static int isgraph ( int _C) {
        var mh$ = isgraph$MH();
        try {
            return (int)mh$.invokeExact(_C);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _isgraph_l$MH() {
        return RuntimeHelper.requireNonNull(constants$76._isgraph_l$MH,"_isgraph_l");
    }
    public static int _isgraph_l ( int _C,  Addressable _Locale) {
        var mh$ = _isgraph_l$MH();
        try {
            return (int)mh$.invokeExact(_C, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle iscntrl$MH() {
        return RuntimeHelper.requireNonNull(constants$76.iscntrl$MH,"iscntrl");
    }
    public static int iscntrl ( int _C) {
        var mh$ = iscntrl$MH();
        try {
            return (int)mh$.invokeExact(_C);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _iscntrl_l$MH() {
        return RuntimeHelper.requireNonNull(constants$76._iscntrl_l$MH,"_iscntrl_l");
    }
    public static int _iscntrl_l ( int _C,  Addressable _Locale) {
        var mh$ = _iscntrl_l$MH();
        try {
            return (int)mh$.invokeExact(_C, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle toupper$MH() {
        return RuntimeHelper.requireNonNull(constants$76.toupper$MH,"toupper");
    }
    public static int toupper ( int _C) {
        var mh$ = toupper$MH();
        try {
            return (int)mh$.invokeExact(_C);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle tolower$MH() {
        return RuntimeHelper.requireNonNull(constants$77.tolower$MH,"tolower");
    }
    public static int tolower ( int _C) {
        var mh$ = tolower$MH();
        try {
            return (int)mh$.invokeExact(_C);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _tolower$MH() {
        return RuntimeHelper.requireNonNull(constants$77._tolower$MH,"_tolower");
    }
    public static int _tolower ( int _C) {
        var mh$ = _tolower$MH();
        try {
            return (int)mh$.invokeExact(_C);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _tolower_l$MH() {
        return RuntimeHelper.requireNonNull(constants$77._tolower_l$MH,"_tolower_l");
    }
    public static int _tolower_l ( int _C,  Addressable _Locale) {
        var mh$ = _tolower_l$MH();
        try {
            return (int)mh$.invokeExact(_C, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _toupper$MH() {
        return RuntimeHelper.requireNonNull(constants$77._toupper$MH,"_toupper");
    }
    public static int _toupper ( int _C) {
        var mh$ = _toupper$MH();
        try {
            return (int)mh$.invokeExact(_C);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _toupper_l$MH() {
        return RuntimeHelper.requireNonNull(constants$77._toupper_l$MH,"_toupper_l");
    }
    public static int _toupper_l ( int _C,  Addressable _Locale) {
        var mh$ = _toupper_l$MH();
        try {
            return (int)mh$.invokeExact(_C, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __isascii$MH() {
        return RuntimeHelper.requireNonNull(constants$77.__isascii$MH,"__isascii");
    }
    public static int __isascii ( int _C) {
        var mh$ = __isascii$MH();
        try {
            return (int)mh$.invokeExact(_C);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __toascii$MH() {
        return RuntimeHelper.requireNonNull(constants$78.__toascii$MH,"__toascii");
    }
    public static int __toascii ( int _C) {
        var mh$ = __toascii$MH();
        try {
            return (int)mh$.invokeExact(_C);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __iscsymf$MH() {
        return RuntimeHelper.requireNonNull(constants$78.__iscsymf$MH,"__iscsymf");
    }
    public static int __iscsymf ( int _C) {
        var mh$ = __iscsymf$MH();
        try {
            return (int)mh$.invokeExact(_C);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __iscsym$MH() {
        return RuntimeHelper.requireNonNull(constants$78.__iscsym$MH,"__iscsym");
    }
    public static int __iscsym ( int _C) {
        var mh$ = __iscsym$MH();
        try {
            return (int)mh$.invokeExact(_C);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __acrt_locale_get_ctype_array_value$MH() {
        return RuntimeHelper.requireNonNull(constants$78.__acrt_locale_get_ctype_array_value$MH,"__acrt_locale_get_ctype_array_value");
    }
    public static int __acrt_locale_get_ctype_array_value ( Addressable _Locale_pctype_array,  int _Char_value,  int _Mask) {
        var mh$ = __acrt_locale_get_ctype_array_value$MH();
        try {
            return (int)mh$.invokeExact(_Locale_pctype_array, _Char_value, _Mask);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ___mb_cur_max_func$MH() {
        return RuntimeHelper.requireNonNull(constants$78.___mb_cur_max_func$MH,"___mb_cur_max_func");
    }
    public static int ___mb_cur_max_func () {
        var mh$ = ___mb_cur_max_func$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ___mb_cur_max_l_func$MH() {
        return RuntimeHelper.requireNonNull(constants$78.___mb_cur_max_l_func$MH,"___mb_cur_max_l_func");
    }
    public static int ___mb_cur_max_l_func ( Addressable _Locale) {
        var mh$ = ___mb_cur_max_l_func$MH();
        try {
            return (int)mh$.invokeExact(_Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __ascii_tolower$MH() {
        return RuntimeHelper.requireNonNull(constants$79.__ascii_tolower$MH,"__ascii_tolower");
    }
    public static int __ascii_tolower ( int _C) {
        var mh$ = __ascii_tolower$MH();
        try {
            return (int)mh$.invokeExact(_C);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __ascii_toupper$MH() {
        return RuntimeHelper.requireNonNull(constants$79.__ascii_toupper$MH,"__ascii_toupper");
    }
    public static int __ascii_toupper ( int _C) {
        var mh$ = __ascii_toupper$MH();
        try {
            return (int)mh$.invokeExact(_C);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __ascii_iswalpha$MH() {
        return RuntimeHelper.requireNonNull(constants$79.__ascii_iswalpha$MH,"__ascii_iswalpha");
    }
    public static int __ascii_iswalpha ( int _C) {
        var mh$ = __ascii_iswalpha$MH();
        try {
            return (int)mh$.invokeExact(_C);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __ascii_iswdigit$MH() {
        return RuntimeHelper.requireNonNull(constants$79.__ascii_iswdigit$MH,"__ascii_iswdigit");
    }
    public static int __ascii_iswdigit ( int _C) {
        var mh$ = __ascii_iswdigit$MH();
        try {
            return (int)mh$.invokeExact(_C);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __ascii_towlower$MH() {
        return RuntimeHelper.requireNonNull(constants$79.__ascii_towlower$MH,"__ascii_towlower");
    }
    public static int __ascii_towlower ( int _C) {
        var mh$ = __ascii_towlower$MH();
        try {
            return (int)mh$.invokeExact(_C);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __ascii_towupper$MH() {
        return RuntimeHelper.requireNonNull(constants$79.__ascii_towupper$MH,"__ascii_towupper");
    }
    public static int __ascii_towupper ( int _C) {
        var mh$ = __ascii_towupper$MH();
        try {
            return (int)mh$.invokeExact(_C);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __acrt_get_locale_data_prefix$MH() {
        return RuntimeHelper.requireNonNull(constants$80.__acrt_get_locale_data_prefix$MH,"__acrt_get_locale_data_prefix");
    }
    public static MemoryAddress __acrt_get_locale_data_prefix ( Addressable _LocalePointers) {
        var mh$ = __acrt_get_locale_data_prefix$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(_LocalePointers);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _chvalidchk_l$MH() {
        return RuntimeHelper.requireNonNull(constants$80._chvalidchk_l$MH,"_chvalidchk_l");
    }
    public static int _chvalidchk_l ( int _C,  int _Mask,  Addressable _Locale) {
        var mh$ = _chvalidchk_l$MH();
        try {
            return (int)mh$.invokeExact(_C, _Mask, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _ischartype_l$MH() {
        return RuntimeHelper.requireNonNull(constants$80._ischartype_l$MH,"_ischartype_l");
    }
    public static int _ischartype_l ( int _C,  int _Mask,  Addressable _Locale) {
        var mh$ = _ischartype_l$MH();
        try {
            return (int)mh$.invokeExact(_C, _Mask, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress PINT8 = Constants$root.C_POINTER$LAYOUT;
    public static OfShort INT16 = Constants$root.C_SHORT$LAYOUT;
    public static OfAddress PINT16 = Constants$root.C_POINTER$LAYOUT;
    public static OfInt INT32 = Constants$root.C_LONG$LAYOUT;
    public static OfAddress PINT32 = Constants$root.C_POINTER$LAYOUT;
    public static OfLong INT64 = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfAddress PINT64 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PUINT8 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PUINT16 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PUINT32 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PUINT64 = Constants$root.C_POINTER$LAYOUT;
    public static OfInt LONG32 = Constants$root.C_LONG$LAYOUT;
    public static OfAddress PLONG32 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PULONG32 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PDWORD32 = Constants$root.C_POINTER$LAYOUT;
    public static OfLong INT_PTR = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfAddress PINT_PTR = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PUINT_PTR = Constants$root.C_POINTER$LAYOUT;
    public static OfLong LONG_PTR = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfAddress PLONG_PTR = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PULONG_PTR = Constants$root.C_POINTER$LAYOUT;
    public static OfLong SHANDLE_PTR = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfAddress PUHALF_PTR = Constants$root.C_POINTER$LAYOUT;
    public static OfInt HALF_PTR = Constants$root.C_LONG$LAYOUT;
    public static OfAddress PHALF_PTR = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle HandleToULong$MH() {
        return RuntimeHelper.requireNonNull(constants$80.HandleToULong$MH,"HandleToULong");
    }
    public static int HandleToULong ( Addressable h) {
        var mh$ = HandleToULong$MH();
        try {
            return (int)mh$.invokeExact(h);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle HandleToLong$MH() {
        return RuntimeHelper.requireNonNull(constants$80.HandleToLong$MH,"HandleToLong");
    }
    public static int HandleToLong ( Addressable h) {
        var mh$ = HandleToLong$MH();
        try {
            return (int)mh$.invokeExact(h);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ULongToHandle$MH() {
        return RuntimeHelper.requireNonNull(constants$80.ULongToHandle$MH,"ULongToHandle");
    }
    public static MemoryAddress ULongToHandle ( int h) {
        var mh$ = ULongToHandle$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(h);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle LongToHandle$MH() {
        return RuntimeHelper.requireNonNull(constants$81.LongToHandle$MH,"LongToHandle");
    }
    public static MemoryAddress LongToHandle ( int h) {
        var mh$ = LongToHandle$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(h);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PtrToUlong$MH() {
        return RuntimeHelper.requireNonNull(constants$81.PtrToUlong$MH,"PtrToUlong");
    }
    public static int PtrToUlong ( Addressable p) {
        var mh$ = PtrToUlong$MH();
        try {
            return (int)mh$.invokeExact(p);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PtrToUint$MH() {
        return RuntimeHelper.requireNonNull(constants$81.PtrToUint$MH,"PtrToUint");
    }
    public static int PtrToUint ( Addressable p) {
        var mh$ = PtrToUint$MH();
        try {
            return (int)mh$.invokeExact(p);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PtrToUshort$MH() {
        return RuntimeHelper.requireNonNull(constants$81.PtrToUshort$MH,"PtrToUshort");
    }
    public static short PtrToUshort ( Addressable p) {
        var mh$ = PtrToUshort$MH();
        try {
            return (short)mh$.invokeExact(p);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PtrToLong$MH() {
        return RuntimeHelper.requireNonNull(constants$81.PtrToLong$MH,"PtrToLong");
    }
    public static int PtrToLong ( Addressable p) {
        var mh$ = PtrToLong$MH();
        try {
            return (int)mh$.invokeExact(p);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PtrToInt$MH() {
        return RuntimeHelper.requireNonNull(constants$81.PtrToInt$MH,"PtrToInt");
    }
    public static int PtrToInt ( Addressable p) {
        var mh$ = PtrToInt$MH();
        try {
            return (int)mh$.invokeExact(p);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PtrToShort$MH() {
        return RuntimeHelper.requireNonNull(constants$82.PtrToShort$MH,"PtrToShort");
    }
    public static short PtrToShort ( Addressable p) {
        var mh$ = PtrToShort$MH();
        try {
            return (short)mh$.invokeExact(p);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IntToPtr$MH() {
        return RuntimeHelper.requireNonNull(constants$82.IntToPtr$MH,"IntToPtr");
    }
    public static MemoryAddress IntToPtr ( int i) {
        var mh$ = IntToPtr$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(i);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle UIntToPtr$MH() {
        return RuntimeHelper.requireNonNull(constants$82.UIntToPtr$MH,"UIntToPtr");
    }
    public static MemoryAddress UIntToPtr ( int ui) {
        var mh$ = UIntToPtr$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ui);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle LongToPtr$MH() {
        return RuntimeHelper.requireNonNull(constants$82.LongToPtr$MH,"LongToPtr");
    }
    public static MemoryAddress LongToPtr ( int l) {
        var mh$ = LongToPtr$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ULongToPtr$MH() {
        return RuntimeHelper.requireNonNull(constants$82.ULongToPtr$MH,"ULongToPtr");
    }
    public static MemoryAddress ULongToPtr ( int ul) {
        var mh$ = ULongToPtr$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ul);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle Ptr32ToPtr$MH() {
        return RuntimeHelper.requireNonNull(constants$82.Ptr32ToPtr$MH,"Ptr32ToPtr");
    }
    public static MemoryAddress Ptr32ToPtr ( Addressable p) {
        var mh$ = Ptr32ToPtr$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(p);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle Handle32ToHandle$MH() {
        return RuntimeHelper.requireNonNull(constants$83.Handle32ToHandle$MH,"Handle32ToHandle");
    }
    public static MemoryAddress Handle32ToHandle ( Addressable h) {
        var mh$ = Handle32ToHandle$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(h);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PtrToPtr32$MH() {
        return RuntimeHelper.requireNonNull(constants$83.PtrToPtr32$MH,"PtrToPtr32");
    }
    public static MemoryAddress PtrToPtr32 ( Addressable p) {
        var mh$ = PtrToPtr32$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(p);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress PSIZE_T = Constants$root.C_POINTER$LAYOUT;
    public static OfLong SSIZE_T = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfAddress PSSIZE_T = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PDWORD_PTR = Constants$root.C_POINTER$LAYOUT;
    public static OfLong LONG64 = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfAddress PLONG64 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PULONG64 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PDWORD64 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PKAFFINITY = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PVOID = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PVOID64 = Constants$root.C_POINTER$LAYOUT;
    public static OfByte CHAR = Constants$root.C_CHAR$LAYOUT;
    public static OfShort SHORT = Constants$root.C_SHORT$LAYOUT;
    public static OfInt LONG = Constants$root.C_LONG$LAYOUT;
    public static OfInt INT$1 = Constants$root.C_LONG$LAYOUT;
    public static OfAddress PWCHAR = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPWCH = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PWCH = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPCWCH = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PCWCH = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress NWPSTR = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPWSTR = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PWSTR = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PZPWSTR = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PCZPWSTR = Constants$root.C_POINTER$LAYOUT;
}


