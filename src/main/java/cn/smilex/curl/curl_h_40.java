// Generated by jextract

package cn.smilex;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
 class curl_h_40 extends curl_h_39 {

    public static int PSM_ISDIALOGMESSAGE() {
        return (int)1141L;
    }
    public static int PSM_GETCURRENTPAGEHWND() {
        return (int)1142L;
    }
    public static int PSM_INSERTPAGE() {
        return (int)1143L;
    }
    public static int PSWIZF_SETCOLOR() {
        return (int)4294967295L;
    }
    public static int PSM_SETHEADERTITLEA() {
        return (int)1149L;
    }
    public static int PSM_SETHEADERTITLEW() {
        return (int)1150L;
    }
    public static int PSM_SETHEADERTITLE() {
        return (int)1149L;
    }
    public static int PSM_SETHEADERSUBTITLEA() {
        return (int)1151L;
    }
    public static int PSM_SETHEADERSUBTITLEW() {
        return (int)1152L;
    }
    public static int PSM_SETHEADERSUBTITLE() {
        return (int)1151L;
    }
    public static int PSM_HWNDTOINDEX() {
        return (int)1153L;
    }
    public static int PSM_INDEXTOHWND() {
        return (int)1154L;
    }
    public static int PSM_PAGETOINDEX() {
        return (int)1155L;
    }
    public static int PSM_INDEXTOPAGE() {
        return (int)1156L;
    }
    public static int PSM_IDTOINDEX() {
        return (int)1157L;
    }
    public static int PSM_INDEXTOID() {
        return (int)1158L;
    }
    public static int PSM_GETRESULT() {
        return (int)1159L;
    }
    public static int PSM_RECALCPAGESIZES() {
        return (int)1160L;
    }
    public static int PSM_SETNEXTTEXTW() {
        return (int)1161L;
    }
    public static int PSM_SETNEXTTEXT() {
        return (int)1161L;
    }
    public static int PSM_SHOWWIZBUTTONS() {
        return (int)1162L;
    }
    public static int PSM_ENABLEWIZBUTTONS() {
        return (int)1163L;
    }
    public static int PSM_SETBUTTONTEXTW() {
        return (int)1164L;
    }
    public static int PSM_SETBUTTONTEXT() {
        return (int)1164L;
    }
    public static int ID_PSREBOOTSYSTEM() {
        return (int)3L;
    }
    public static int DSPRINT_PENDING() {
        return (int)2147483648L;
    }
    public static int MAX_FORM_KEYWORD_LENGTH() {
        return (int)64L;
    }
    public static int NORMAL_PRINT() {
        return (int)0L;
    }
    public static int REVERSE_PRINT() {
        return (int)1L;
    }
    public static int PPCAPS_RIGHT_THEN_DOWN() {
        return (int)1L;
    }
    public static int PPCAPS_DOWN_THEN_RIGHT() {
        return (int)2L;
    }
    public static int PPCAPS_LEFT_THEN_DOWN() {
        return (int)4L;
    }
    public static int PPCAPS_DOWN_THEN_LEFT() {
        return (int)8L;
    }
    public static int PPCAPS_BORDER_PRINT() {
        return (int)1L;
    }
    public static int PPCAPS_BOOKLET_EDGE() {
        return (int)1L;
    }
    public static int PPCAPS_REVERSE_PAGES_FOR_REVERSE_DUPLEX() {
        return (int)1L;
    }
    public static int PPCAPS_DONT_SEND_EXTRA_PAGES_FOR_DUPLEX() {
        return (int)2L;
    }
    public static int PPCAPS_SQUARE_SCALING() {
        return (int)1L;
    }
    public static MemorySegment BIDI_ACTION_ENUM_SCHEMA() {
        return constants$1667.BIDI_ACTION_ENUM_SCHEMA$SEGMENT;
    }
    public static MemorySegment BIDI_ACTION_GET() {
        return constants$1667.BIDI_ACTION_GET$SEGMENT;
    }
    public static MemorySegment BIDI_ACTION_SET() {
        return constants$1667.BIDI_ACTION_SET$SEGMENT;
    }
    public static MemorySegment BIDI_ACTION_GET_ALL() {
        return constants$1667.BIDI_ACTION_GET_ALL$SEGMENT;
    }
    public static MemorySegment BIDI_ACTION_GET_WITH_ARGUMENT() {
        return constants$1668.BIDI_ACTION_GET_WITH_ARGUMENT$SEGMENT;
    }
    public static int ERROR_BIDI_NOT_SUPPORTED() {
        return (int)50L;
    }
    public static int ERROR_BIDI_STATUS_WARNING() {
        return (int)13001L;
    }
    public static int ERROR_BIDI_SCHEMA_READ_ONLY() {
        return (int)13002L;
    }
    public static int ERROR_BIDI_SERVER_OFFLINE() {
        return (int)13003L;
    }
    public static int ERROR_BIDI_DEVICE_OFFLINE() {
        return (int)13004L;
    }
    public static int ERROR_BIDI_SCHEMA_NOT_SUPPORTED() {
        return (int)13005L;
    }
    public static int ERROR_BIDI_SET_DIFFERENT_TYPE() {
        return (int)13006L;
    }
    public static int ERROR_BIDI_SET_MULTIPLE_SCHEMAPATH() {
        return (int)13007L;
    }
    public static int ERROR_BIDI_SET_INVALID_SCHEMAPATH() {
        return (int)13008L;
    }
    public static int ERROR_BIDI_SET_UNKNOWN_FAILURE() {
        return (int)13009L;
    }
    public static int ERROR_BIDI_SCHEMA_WRITE_ONLY() {
        return (int)13010L;
    }
    public static int ERROR_BIDI_GET_REQUIRES_ARGUMENT() {
        return (int)13011L;
    }
    public static int ERROR_BIDI_GET_ARGUMENT_NOT_SUPPORTED() {
        return (int)13012L;
    }
    public static int ERROR_BIDI_GET_MISSING_ARGUMENT() {
        return (int)13013L;
    }
    public static int ERROR_BIDI_DEVICE_CONFIG_UNCHANGED() {
        return (int)13014L;
    }
    public static int ERROR_BIDI_NO_LOCALIZED_RESOURCES() {
        return (int)13015L;
    }
    public static int ERROR_BIDI_NO_BIDI_SCHEMA_EXTENSIONS() {
        return (int)13016L;
    }
    public static int ERROR_BIDI_UNSUPPORTED_CLIENT_LANGUAGE() {
        return (int)13017L;
    }
    public static int ERROR_BIDI_UNSUPPORTED_RESOURCE_FORMAT() {
        return (int)13018L;
    }
    public static int PRINTER_CHANGE_TIMEOUT() {
        return (int)2147483648L;
    }
    public static int PRINTER_ERROR_INFORMATION() {
        return (int)2147483648L;
    }
    public static MemorySegment SPLREG_DEFAULT_SPOOL_DIRECTORY() {
        return constants$1668.SPLREG_DEFAULT_SPOOL_DIRECTORY$SEGMENT;
    }
    public static MemorySegment SPLREG_PORT_THREAD_PRIORITY_DEFAULT() {
        return constants$1668.SPLREG_PORT_THREAD_PRIORITY_DEFAULT$SEGMENT;
    }
    public static MemorySegment SPLREG_PORT_THREAD_PRIORITY() {
        return constants$1668.SPLREG_PORT_THREAD_PRIORITY$SEGMENT;
    }
    public static MemorySegment SPLREG_SCHEDULER_THREAD_PRIORITY_DEFAULT() {
        return constants$1668.SPLREG_SCHEDULER_THREAD_PRIORITY_DEFAULT$SEGMENT;
    }
    public static MemorySegment SPLREG_SCHEDULER_THREAD_PRIORITY() {
        return constants$1668.SPLREG_SCHEDULER_THREAD_PRIORITY$SEGMENT;
    }
    public static MemorySegment SPLREG_BEEP_ENABLED() {
        return constants$1669.SPLREG_BEEP_ENABLED$SEGMENT;
    }
    public static MemorySegment SPLREG_NET_POPUP() {
        return constants$1669.SPLREG_NET_POPUP$SEGMENT;
    }
    public static MemorySegment SPLREG_RETRY_POPUP() {
        return constants$1669.SPLREG_RETRY_POPUP$SEGMENT;
    }
    public static MemorySegment SPLREG_NET_POPUP_TO_COMPUTER() {
        return constants$1669.SPLREG_NET_POPUP_TO_COMPUTER$SEGMENT;
    }
    public static MemorySegment SPLREG_EVENT_LOG() {
        return constants$1669.SPLREG_EVENT_LOG$SEGMENT;
    }
    public static MemorySegment SPLREG_MAJOR_VERSION() {
        return constants$1669.SPLREG_MAJOR_VERSION$SEGMENT;
    }
    public static MemorySegment SPLREG_MINOR_VERSION() {
        return constants$1670.SPLREG_MINOR_VERSION$SEGMENT;
    }
    public static MemorySegment SPLREG_ARCHITECTURE() {
        return constants$1670.SPLREG_ARCHITECTURE$SEGMENT;
    }
    public static MemorySegment SPLREG_OS_VERSION() {
        return constants$1670.SPLREG_OS_VERSION$SEGMENT;
    }
    public static MemorySegment SPLREG_OS_VERSIONEX() {
        return constants$1670.SPLREG_OS_VERSIONEX$SEGMENT;
    }
    public static MemorySegment SPLREG_DS_PRESENT() {
        return constants$1670.SPLREG_DS_PRESENT$SEGMENT;
    }
    public static MemorySegment SPLREG_DS_PRESENT_FOR_USER() {
        return constants$1670.SPLREG_DS_PRESENT_FOR_USER$SEGMENT;
    }
    public static MemorySegment SPLREG_REMOTE_FAX() {
        return constants$1671.SPLREG_REMOTE_FAX$SEGMENT;
    }
    public static MemorySegment SPLREG_RESTART_JOB_ON_POOL_ERROR() {
        return constants$1671.SPLREG_RESTART_JOB_ON_POOL_ERROR$SEGMENT;
    }
    public static MemorySegment SPLREG_RESTART_JOB_ON_POOL_ENABLED() {
        return constants$1671.SPLREG_RESTART_JOB_ON_POOL_ENABLED$SEGMENT;
    }
    public static MemorySegment SPLREG_DNS_MACHINE_NAME() {
        return constants$1671.SPLREG_DNS_MACHINE_NAME$SEGMENT;
    }
    public static MemorySegment SPLREG_ALLOW_USER_MANAGEFORMS() {
        return constants$1671.SPLREG_ALLOW_USER_MANAGEFORMS$SEGMENT;
    }
    public static MemorySegment SPLREG_WEBSHAREMGMT() {
        return constants$1671.SPLREG_WEBSHAREMGMT$SEGMENT;
    }
    public static short SPLREG_PRINT_DRIVER_ISOLATION_GROUPS_SEPARATOR() {
        return (short)92L;
    }
    public static MemorySegment SPLREG_PRINT_DRIVER_ISOLATION_GROUPS() {
        return constants$1672.SPLREG_PRINT_DRIVER_ISOLATION_GROUPS$SEGMENT;
    }
    public static MemorySegment SPLREG_PRINT_DRIVER_ISOLATION_TIME_BEFORE_RECYCLE() {
        return constants$1672.SPLREG_PRINT_DRIVER_ISOLATION_TIME_BEFORE_RECYCLE$SEGMENT;
    }
    public static MemorySegment SPLREG_PRINT_DRIVER_ISOLATION_MAX_OBJECTS_BEFORE_RECYCLE() {
        return constants$1672.SPLREG_PRINT_DRIVER_ISOLATION_MAX_OBJECTS_BEFORE_RECYCLE$SEGMENT;
    }
    public static MemorySegment SPLREG_PRINT_DRIVER_ISOLATION_IDLE_TIMEOUT() {
        return constants$1672.SPLREG_PRINT_DRIVER_ISOLATION_IDLE_TIMEOUT$SEGMENT;
    }
    public static MemorySegment SPLREG_PRINT_DRIVER_ISOLATION_EXECUTION_POLICY() {
        return constants$1672.SPLREG_PRINT_DRIVER_ISOLATION_EXECUTION_POLICY$SEGMENT;
    }
    public static MemorySegment SPLREG_PRINT_DRIVER_ISOLATION_OVERRIDE_POLICY() {
        return constants$1672.SPLREG_PRINT_DRIVER_ISOLATION_OVERRIDE_POLICY$SEGMENT;
    }
    public static MemorySegment SPLREG_PRINT_QUEUE_V4_DRIVER_DIRECTORY() {
        return constants$1673.SPLREG_PRINT_QUEUE_V4_DRIVER_DIRECTORY$SEGMENT;
    }
    public static int SERVER_ALL_ACCESS() {
        return (int)983043L;
    }
    public static int SERVER_READ() {
        return (int)131074L;
    }
    public static int SERVER_WRITE() {
        return (int)131075L;
    }
    public static int SERVER_EXECUTE() {
        return (int)131074L;
    }
    public static int PRINTER_ALL_ACCESS() {
        return (int)983052L;
    }
    public static int PRINTER_READ() {
        return (int)131080L;
    }
    public static int PRINTER_WRITE() {
        return (int)131080L;
    }
    public static int PRINTER_EXECUTE() {
        return (int)131080L;
    }
    public static int JOB_ALL_ACCESS() {
        return (int)983088L;
    }
    public static int JOB_READ() {
        return (int)131104L;
    }
    public static int JOB_WRITE() {
        return (int)131088L;
    }
    public static int JOB_EXECUTE() {
        return (int)131088L;
    }
    public static MemorySegment SPLDS_SPOOLER_KEY() {
        return constants$1673.SPLDS_SPOOLER_KEY$SEGMENT;
    }
    public static MemorySegment SPLDS_DRIVER_KEY() {
        return constants$1673.SPLDS_DRIVER_KEY$SEGMENT;
    }
    public static MemorySegment SPLDS_USER_KEY() {
        return constants$1673.SPLDS_USER_KEY$SEGMENT;
    }
    public static MemorySegment SPLDS_ASSET_NUMBER() {
        return constants$1673.SPLDS_ASSET_NUMBER$SEGMENT;
    }
    public static MemorySegment SPLDS_BYTES_PER_MINUTE() {
        return constants$1673.SPLDS_BYTES_PER_MINUTE$SEGMENT;
    }
    public static MemorySegment SPLDS_DESCRIPTION() {
        return constants$1674.SPLDS_DESCRIPTION$SEGMENT;
    }
    public static MemorySegment SPLDS_DRIVER_NAME() {
        return constants$1674.SPLDS_DRIVER_NAME$SEGMENT;
    }
    public static MemorySegment SPLDS_DRIVER_VERSION() {
        return constants$1674.SPLDS_DRIVER_VERSION$SEGMENT;
    }
    public static MemorySegment SPLDS_LOCATION() {
        return constants$1674.SPLDS_LOCATION$SEGMENT;
    }
    public static MemorySegment SPLDS_PORT_NAME() {
        return constants$1674.SPLDS_PORT_NAME$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_ATTRIBUTES() {
        return constants$1674.SPLDS_PRINT_ATTRIBUTES$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_BIN_NAMES() {
        return constants$1675.SPLDS_PRINT_BIN_NAMES$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_COLLATE() {
        return constants$1675.SPLDS_PRINT_COLLATE$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_COLOR() {
        return constants$1675.SPLDS_PRINT_COLOR$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_DUPLEX_SUPPORTED() {
        return constants$1675.SPLDS_PRINT_DUPLEX_SUPPORTED$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_END_TIME() {
        return constants$1675.SPLDS_PRINT_END_TIME$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINTER_CLASS() {
        return constants$1675.SPLDS_PRINTER_CLASS$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINTER_NAME() {
        return constants$1676.SPLDS_PRINTER_NAME$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_KEEP_PRINTED_JOBS() {
        return constants$1676.SPLDS_PRINT_KEEP_PRINTED_JOBS$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_LANGUAGE() {
        return constants$1676.SPLDS_PRINT_LANGUAGE$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_MAC_ADDRESS() {
        return constants$1676.SPLDS_PRINT_MAC_ADDRESS$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_MAX_X_EXTENT() {
        return constants$1676.SPLDS_PRINT_MAX_X_EXTENT$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_MAX_Y_EXTENT() {
        return constants$1676.SPLDS_PRINT_MAX_Y_EXTENT$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_MAX_RESOLUTION_SUPPORTED() {
        return constants$1677.SPLDS_PRINT_MAX_RESOLUTION_SUPPORTED$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_MEDIA_READY() {
        return constants$1677.SPLDS_PRINT_MEDIA_READY$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_MEDIA_SUPPORTED() {
        return constants$1677.SPLDS_PRINT_MEDIA_SUPPORTED$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_MEMORY() {
        return constants$1677.SPLDS_PRINT_MEMORY$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_MIN_X_EXTENT() {
        return constants$1677.SPLDS_PRINT_MIN_X_EXTENT$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_MIN_Y_EXTENT() {
        return constants$1677.SPLDS_PRINT_MIN_Y_EXTENT$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_NETWORK_ADDRESS() {
        return constants$1678.SPLDS_PRINT_NETWORK_ADDRESS$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_NOTIFY() {
        return constants$1678.SPLDS_PRINT_NOTIFY$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_NUMBER_UP() {
        return constants$1678.SPLDS_PRINT_NUMBER_UP$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_ORIENTATIONS_SUPPORTED() {
        return constants$1678.SPLDS_PRINT_ORIENTATIONS_SUPPORTED$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_OWNER() {
        return constants$1678.SPLDS_PRINT_OWNER$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_PAGES_PER_MINUTE() {
        return constants$1678.SPLDS_PRINT_PAGES_PER_MINUTE$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_RATE() {
        return constants$1679.SPLDS_PRINT_RATE$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_RATE_UNIT() {
        return constants$1679.SPLDS_PRINT_RATE_UNIT$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_SEPARATOR_FILE() {
        return constants$1679.SPLDS_PRINT_SEPARATOR_FILE$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_SHARE_NAME() {
        return constants$1679.SPLDS_PRINT_SHARE_NAME$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_SPOOLING() {
        return constants$1679.SPLDS_PRINT_SPOOLING$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_STAPLING_SUPPORTED() {
        return constants$1679.SPLDS_PRINT_STAPLING_SUPPORTED$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_START_TIME() {
        return constants$1680.SPLDS_PRINT_START_TIME$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_STATUS() {
        return constants$1680.SPLDS_PRINT_STATUS$SEGMENT;
    }
    public static MemorySegment SPLDS_PRIORITY() {
        return constants$1680.SPLDS_PRIORITY$SEGMENT;
    }
    public static MemorySegment SPLDS_SERVER_NAME() {
        return constants$1680.SPLDS_SERVER_NAME$SEGMENT;
    }
    public static MemorySegment SPLDS_SHORT_SERVER_NAME() {
        return constants$1680.SPLDS_SHORT_SERVER_NAME$SEGMENT;
    }
    public static MemorySegment SPLDS_UNC_NAME() {
        return constants$1680.SPLDS_UNC_NAME$SEGMENT;
    }
    public static MemorySegment SPLDS_URL() {
        return constants$1681.SPLDS_URL$SEGMENT;
    }
    public static MemorySegment SPLDS_FLAGS() {
        return constants$1681.SPLDS_FLAGS$SEGMENT;
    }
    public static MemorySegment SPLDS_VERSION_NUMBER() {
        return constants$1681.SPLDS_VERSION_NUMBER$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINTER_NAME_ALIASES() {
        return constants$1681.SPLDS_PRINTER_NAME_ALIASES$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINTER_LOCATIONS() {
        return constants$1681.SPLDS_PRINTER_LOCATIONS$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINTER_MODEL() {
        return constants$1681.SPLDS_PRINTER_MODEL$SEGMENT;
    }
    public static MemorySegment MS_PRINT_JOB_OUTPUT_FILE() {
        return constants$1682.MS_PRINT_JOB_OUTPUT_FILE$SEGMENT;
    }
    public static int _MAX_ITOSTR_BASE16_COUNT() {
        return (int)9L;
    }
    public static int _MAX_ITOSTR_BASE10_COUNT() {
        return (int)12L;
    }
    public static int _MAX_ITOSTR_BASE8_COUNT() {
        return (int)12L;
    }
    public static int _MAX_ITOSTR_BASE2_COUNT() {
        return (int)33L;
    }
    public static int _MAX_LTOSTR_BASE16_COUNT() {
        return (int)9L;
    }
    public static int _MAX_LTOSTR_BASE10_COUNT() {
        return (int)12L;
    }
    public static int _MAX_LTOSTR_BASE8_COUNT() {
        return (int)12L;
    }
    public static int _MAX_LTOSTR_BASE2_COUNT() {
        return (int)33L;
    }
    public static int _MAX_ULTOSTR_BASE16_COUNT() {
        return (int)9L;
    }
    public static int _MAX_ULTOSTR_BASE10_COUNT() {
        return (int)11L;
    }
    public static int _MAX_ULTOSTR_BASE8_COUNT() {
        return (int)12L;
    }
    public static int _MAX_ULTOSTR_BASE2_COUNT() {
        return (int)33L;
    }
    public static int _MAX_I64TOSTR_BASE16_COUNT() {
        return (int)17L;
    }
    public static int _MAX_I64TOSTR_BASE10_COUNT() {
        return (int)21L;
    }
    public static int _MAX_I64TOSTR_BASE8_COUNT() {
        return (int)23L;
    }
    public static int _MAX_I64TOSTR_BASE2_COUNT() {
        return (int)65L;
    }
    public static int _MAX_U64TOSTR_BASE16_COUNT() {
        return (int)17L;
    }
    public static int _MAX_U64TOSTR_BASE10_COUNT() {
        return (int)21L;
    }
    public static int _MAX_U64TOSTR_BASE8_COUNT() {
        return (int)23L;
    }
    public static int _MAX_U64TOSTR_BASE2_COUNT() {
        return (int)65L;
    }
    public static int _CVTBUFSIZE() {
        return (int)349L;
    }
    public static int CLSCTX_INPROC() {
        return (int)3L;
    }
    public static int CLSCTX_ALL() {
        return (int)23L;
    }
    public static int CLSCTX_SERVER() {
        return (int)21L;
    }
    public static MemoryAddress COLE_DEFAULT_PRINCIPAL() {
        return constants$1682.COLE_DEFAULT_PRINCIPAL$ADDR;
    }
    public static MemoryAddress COLE_DEFAULT_AUTHINFO() {
        return constants$1682.COLE_DEFAULT_AUTHINFO$ADDR;
    }
    public static MemorySegment _CRT_INTERNAL_COMBASE_SYMBOL_PREFIX() {
        return constants$1682._CRT_INTERNAL_COMBASE_SYMBOL_PREFIX$SEGMENT;
    }
    public static int FADF_AUTO() {
        return (int)1L;
    }
    public static int FADF_STATIC() {
        return (int)2L;
    }
    public static int FADF_EMBEDDED() {
        return (int)4L;
    }
    public static int FADF_FIXEDSIZE() {
        return (int)16L;
    }
    public static int FADF_RECORD() {
        return (int)32L;
    }
    public static int FADF_HAVEIID() {
        return (int)64L;
    }
    public static int FADF_HAVEVARTYPE() {
        return (int)128L;
    }
    public static int FADF_BSTR() {
        return (int)256L;
    }
    public static int FADF_UNKNOWN() {
        return (int)512L;
    }
    public static int FADF_DISPATCH() {
        return (int)1024L;
    }
    public static int FADF_VARIANT() {
        return (int)2048L;
    }
    public static int FADF_RESERVED() {
        return (int)61448L;
    }
    public static int PARAMFLAG_NONE() {
        return (int)0L;
    }
    public static int PARAMFLAG_FIN() {
        return (int)1L;
    }
    public static int PARAMFLAG_FOUT() {
        return (int)2L;
    }
    public static int PARAMFLAG_FLCID() {
        return (int)4L;
    }
    public static int PARAMFLAG_FRETVAL() {
        return (int)8L;
    }
    public static int PARAMFLAG_FOPT() {
        return (int)16L;
    }
    public static int PARAMFLAG_FHASDEFAULT() {
        return (int)32L;
    }
    public static int PARAMFLAG_FHASCUSTDATA() {
        return (int)64L;
    }
    public static int IDLFLAG_NONE() {
        return (int)0L;
    }
    public static int IDLFLAG_FIN() {
        return (int)1L;
    }
    public static int IDLFLAG_FOUT() {
        return (int)2L;
    }
    public static int IDLFLAG_FLCID() {
        return (int)4L;
    }
    public static int IDLFLAG_FRETVAL() {
        return (int)8L;
    }
    public static int IMPLTYPEFLAG_FDEFAULT() {
        return (int)1L;
    }
    public static int IMPLTYPEFLAG_FSOURCE() {
        return (int)2L;
    }
    public static int IMPLTYPEFLAG_FRESTRICTED() {
        return (int)4L;
    }
    public static int IMPLTYPEFLAG_FDEFAULTVTABLE() {
        return (int)8L;
    }
    public static int DISPID_UNKNOWN() {
        return (int)-1L;
    }
    public static int DISPID_VALUE() {
        return (int)0L;
    }
    public static int DISPID_PROPERTYPUT() {
        return (int)-3L;
    }
    public static int DISPID_NEWENUM() {
        return (int)-4L;
    }
    public static int DISPID_EVALUATE() {
        return (int)-5L;
    }
    public static int DISPID_CONSTRUCTOR() {
        return (int)-6L;
    }
    public static int DISPID_DESTRUCTOR() {
        return (int)-7L;
    }
    public static int DISPID_COLLECT() {
        return (int)-8L;
    }
    public static int PROPSETFLAG_DEFAULT() {
        return (int)0L;
    }
    public static int PROPSETFLAG_NONSIMPLE() {
        return (int)1L;
    }
    public static int PROPSETFLAG_ANSI() {
        return (int)2L;
    }
    public static int PROPSETFLAG_UNBUFFERED() {
        return (int)4L;
    }
    public static int PROPSETFLAG_CASE_SENSITIVE() {
        return (int)8L;
    }
    public static int PROPSET_BEHAVIOR_CASE_SENSITIVE() {
        return (int)1L;
    }
    public static int PID_DICTIONARY() {
        return (int)0L;
    }
    public static int PID_CODEPAGE() {
        return (int)1L;
    }
    public static int PID_FIRST_USABLE() {
        return (int)2L;
    }
    public static int PID_FIRST_NAME_DEFAULT() {
        return (int)4095L;
    }
    public static int PID_LOCALE() {
        return (int)2147483648L;
    }
    public static int PID_MODIFY_TIME() {
        return (int)2147483649L;
    }
    public static int PID_SECURITY() {
        return (int)2147483650L;
    }
    public static int PID_BEHAVIOR() {
        return (int)2147483651L;
    }
    public static int PID_ILLEGAL() {
        return (int)4294967295L;
    }
    public static int PID_MIN_READONLY() {
        return (int)2147483648L;
    }
    public static int PID_MAX_READONLY() {
        return (int)3221225471L;
    }
    public static int PRSPEC_INVALID() {
        return (int)4294967295L;
    }
    public static int PRSPEC_LPWSTR() {
        return (int)0L;
    }
    public static int PRSPEC_PROPID() {
        return (int)1L;
    }
    public static int PROPSETHDR_OSVERSION_UNKNOWN() {
        return (int)4294967295L;
    }
    public static int STGM_DIRECT() {
        return (int)0L;
    }
    public static int STGM_TRANSACTED() {
        return (int)65536L;
    }
    public static int STGM_SIMPLE() {
        return (int)134217728L;
    }
    public static int STGM_READ() {
        return (int)0L;
    }
    public static int STGM_WRITE() {
        return (int)1L;
    }
    public static int STGM_READWRITE() {
        return (int)2L;
    }
    public static int STGM_SHARE_DENY_NONE() {
        return (int)64L;
    }
    public static int STGM_SHARE_DENY_READ() {
        return (int)48L;
    }
    public static int STGM_SHARE_DENY_WRITE() {
        return (int)32L;
    }
    public static int STGM_SHARE_EXCLUSIVE() {
        return (int)16L;
    }
    public static int STGM_PRIORITY() {
        return (int)262144L;
    }
    public static int STGM_DELETEONRELEASE() {
        return (int)67108864L;
    }
    public static int STGM_NOSCRATCH() {
        return (int)1048576L;
    }
    public static int STGM_CREATE() {
        return (int)4096L;
    }
    public static int STGM_CONVERT() {
        return (int)131072L;
    }
    public static int STGM_FAILIFTHERE() {
        return (int)0L;
    }
    public static int STGM_NOSNAPSHOT() {
        return (int)2097152L;
    }
    public static int STGM_DIRECT_SWMR() {
        return (int)4194304L;
    }
    public static int ASYNC_MODE_COMPATIBILITY() {
        return (int)1L;
    }
    public static int ASYNC_MODE_DEFAULT() {
        return (int)0L;
    }
    public static int STGTY_REPEAT() {
        return (int)256L;
    }
    public static int STG_TOEND() {
        return (int)4294967295L;
    }
    public static int STG_LAYOUT_SEQUENTIAL() {
        return (int)0L;
    }
    public static int STG_LAYOUT_INTERLEAVED() {
        return (int)1L;
    }
    public static int UPDFCACHE_NODATACACHE() {
        return (int)1L;
    }
    public static int UPDFCACHE_ONSAVECACHE() {
        return (int)2L;
    }
    public static int UPDFCACHE_ONSTOPCACHE() {
        return (int)4L;
    }
    public static int UPDFCACHE_NORMALCACHE() {
        return (int)8L;
    }
    public static int UPDFCACHE_IFBLANK() {
        return (int)16L;
    }
    public static int UPDFCACHE_ONLYIFBLANK() {
        return (int)2147483648L;
    }
    public static int UPDFCACHE_IFBLANKORONSAVECACHE() {
        return (int)18L;
    }
    public static int UPDFCACHE_ALL() {
        return (int)2147483647L;
    }
    public static int UPDFCACHE_ALLBUTNODATACACHE() {
        return (int)2147483646L;
    }
    public static int MK_ALT() {
        return (int)32L;
    }
    public static int DROPEFFECT_NONE() {
        return (int)0L;
    }
    public static int DROPEFFECT_COPY() {
        return (int)1L;
    }
    public static int DROPEFFECT_MOVE() {
        return (int)2L;
    }
    public static int DROPEFFECT_LINK() {
        return (int)4L;
    }
    public static int DROPEFFECT_SCROLL() {
        return (int)2147483648L;
    }
    public static int DD_DEFSCROLLINSET() {
        return (int)11L;
    }
    public static int DD_DEFSCROLLDELAY() {
        return (int)50L;
    }
    public static int DD_DEFSCROLLINTERVAL() {
        return (int)50L;
    }
    public static int DD_DEFDRAGDELAY() {
        return (int)200L;
    }
    public static int DD_DEFDRAGMINDIST() {
        return (int)2L;
    }
    public static int BINDF_DONTUSECACHE() {
        return (int)16L;
    }
    public static int BINDF_DONTPUTINCACHE() {
        return (int)32L;
    }
    public static int BINDF_NOCOPYDATA() {
        return (int)128L;
    }
    public static MemoryAddress INVALID_P_ROOT_SECURITY_ID() {
        return constants$1682.INVALID_P_ROOT_SECURITY_ID$ADDR;
    }
    public static int PI_DOCFILECLSIDLOOKUP() {
        return (int)32L;
    }
    public static MemorySegment SZ_URLCONTEXT() {
        return constants$1682.SZ_URLCONTEXT$SEGMENT;
    }
    public static MemorySegment SZ_ASYNC_CALLEE() {
        return constants$1683.SZ_ASYNC_CALLEE$SEGMENT;
    }
    public static MemoryAddress CFSTR_MIME_NULL() {
        return constants$1683.CFSTR_MIME_NULL$ADDR;
    }
    public static int MK_S_ASYNCHRONOUS() {
        return (int)262632L;
    }
    public static int S_ASYNCHRONOUS() {
        return (int)262632L;
    }
    public static int INET_E_CANNOT_LOCK_REQUEST() {
        return (int)-2146697194L;
    }
    public static int INET_E_USE_EXTEND_BINDING() {
        return (int)-2146697193L;
    }
    public static int INET_E_TERMINATED_BIND() {
        return (int)-2146697192L;
    }
    public static int INET_E_RESERVED_1() {
        return (int)-2146697190L;
    }
    public static int INET_E_BLOCKED_REDIRECT_XSECURITYID() {
        return (int)-2146697189L;
    }
    public static int INET_E_DOMINJECTIONVALIDATION() {
        return (int)-2146697188L;
    }
    public static int INET_E_VTAB_SWITCH_FORCE_ENGINE() {
        return (int)-2146697187L;
    }
    public static int INET_E_HSTS_CERTIFICATE_ERROR() {
        return (int)-2146697186L;
    }
    public static int INET_E_RESERVED_2() {
        return (int)-2146697185L;
    }
    public static int INET_E_RESERVED_3() {
        return (int)-2146697184L;
    }
    public static int INET_E_RESERVED_4() {
        return (int)-2146697183L;
    }
    public static int INET_E_RESERVED_5() {
        return (int)-2146697182L;
    }
    public static int INET_E_ERROR_FIRST() {
        return (int)-2146697214L;
    }
    public static int INET_E_CODE_DOWNLOAD_DECLINED() {
        return (int)-2146696960L;
    }
    public static int INET_E_RESULT_DISPATCHED() {
        return (int)-2146696704L;
    }
    public static int INET_E_CANNOT_REPLACE_SFP_FILE() {
        return (int)-2146696448L;
    }
    public static int INET_E_CODE_INSTALL_SUPPRESSED() {
        return (int)-2146696192L;
    }
    public static int INET_E_CODE_INSTALL_BLOCKED_BY_HASH_POLICY() {
        return (int)-2146695936L;
    }
    public static int INET_E_DOWNLOAD_BLOCKED_BY_INPRIVATE() {
        return (int)-2146695935L;
    }
    public static int INET_E_CODE_INSTALL_BLOCKED_IMMERSIVE() {
        return (int)-2146695934L;
    }
    public static int INET_E_FORBIDFRAMING() {
        return (int)-2146695933L;
    }
    public static int INET_E_CODE_INSTALL_BLOCKED_ARM() {
        return (int)-2146695932L;
    }
    public static int INET_E_BLOCKED_PLUGGABLE_PROTOCOL() {
        return (int)-2146695931L;
    }
    public static int INET_E_BLOCKED_ENHANCEDPROTECTEDMODE() {
        return (int)-2146695930L;
    }
    public static int INET_E_CODE_INSTALL_BLOCKED_BITNESS() {
        return (int)-2146695929L;
    }
    public static int INET_E_DOWNLOAD_BLOCKED_BY_CSP() {
        return (int)-2146695928L;
    }
    public static int INET_E_ERROR_LAST() {
        return (int)-2146695928L;
    }
    public static int Uri_HAS_ABSOLUTE_URI() {
        return (int)1L;
    }
    public static int Uri_HAS_AUTHORITY() {
        return (int)2L;
    }
    public static int Uri_HAS_DISPLAY_URI() {
        return (int)4L;
    }
    public static int Uri_HAS_DOMAIN() {
        return (int)8L;
    }
    public static int Uri_HAS_EXTENSION() {
        return (int)16L;
    }
    public static int Uri_HAS_FRAGMENT() {
        return (int)32L;
    }
    public static int Uri_HAS_HOST() {
        return (int)64L;
    }
    public static int Uri_HAS_PASSWORD() {
        return (int)128L;
    }
    public static int Uri_HAS_PATH() {
        return (int)256L;
    }
    public static int Uri_HAS_QUERY() {
        return (int)1024L;
    }
    public static int Uri_HAS_RAW_URI() {
        return (int)2048L;
    }
    public static int Uri_HAS_SCHEME_NAME() {
        return (int)4096L;
    }
    public static int Uri_HAS_USER_NAME() {
        return (int)16384L;
    }
    public static int Uri_HAS_PATH_AND_QUERY() {
        return (int)512L;
    }
    public static int Uri_HAS_USER_INFO() {
        return (int)8192L;
    }
    public static int Uri_HAS_HOST_TYPE() {
        return (int)32768L;
    }
    public static int Uri_HAS_PORT() {
        return (int)65536L;
    }
    public static int Uri_HAS_SCHEME() {
        return (int)131072L;
    }
    public static int Uri_HAS_ZONE() {
        return (int)262144L;
    }
    public static int Uri_ENCODING_RFC() {
        return (int)41L;
    }
    public static int PARSE_ENCODE() {
        return (int)7L;
    }
    public static int PARSE_DECODE() {
        return (int)8L;
    }
    public static int INET_E_USE_DEFAULT_PROTOCOLHANDLER() {
        return (int)-2146697199L;
    }
    public static int INET_E_USE_DEFAULT_SETTING() {
        return (int)-2146697198L;
    }
    public static int INET_E_DEFAULT_ACTION() {
        return (int)-2146697199L;
    }
    public static int INET_E_QUERYOPTION_UNKNOWN() {
        return (int)-2146697197L;
    }
    public static int INET_E_REDIRECTING() {
        return (int)-2146697196L;
    }
    public static int PIDDI_THUMBNAIL() {
        return (int)2L;
    }
    public static int PIDSI_TITLE() {
        return (int)2L;
    }
    public static int PIDSI_SUBJECT() {
        return (int)3L;
    }
    public static int PIDSI_AUTHOR() {
        return (int)4L;
    }
    public static int PIDSI_KEYWORDS() {
        return (int)5L;
    }
    public static int PIDSI_COMMENTS() {
        return (int)6L;
    }
    public static int PIDSI_TEMPLATE() {
        return (int)7L;
    }
    public static int PIDSI_LASTAUTHOR() {
        return (int)8L;
    }
    public static int PIDSI_REVNUMBER() {
        return (int)9L;
    }
    public static int PIDSI_EDITTIME() {
        return (int)10L;
    }
    public static int PIDSI_LASTPRINTED() {
        return (int)11L;
    }
    public static int PIDSI_CREATE_DTM() {
        return (int)12L;
    }
    public static int PIDSI_LASTSAVE_DTM() {
        return (int)13L;
    }
    public static int PIDSI_PAGECOUNT() {
        return (int)14L;
    }
    public static int PIDSI_WORDCOUNT() {
        return (int)15L;
    }
    public static int PIDSI_CHARCOUNT() {
        return (int)16L;
    }
    public static int PIDSI_THUMBNAIL() {
        return (int)17L;
    }
    public static int PIDSI_APPNAME() {
        return (int)18L;
    }
    public static int PIDSI_DOC_SECURITY() {
        return (int)19L;
    }
    public static int PIDMSI_EDITOR() {
        return (int)2L;
    }
    public static int PIDMSI_SUPPLIER() {
        return (int)3L;
    }
    public static int PIDMSI_SOURCE() {
        return (int)4L;
    }
    public static int PIDMSI_SEQUENCE_NO() {
        return (int)5L;
    }
    public static int PIDMSI_PROJECT() {
        return (int)6L;
    }
    public static int PIDMSI_STATUS() {
        return (int)7L;
    }
    public static int PIDMSI_OWNER() {
        return (int)8L;
    }
    public static int PIDMSI_RATING() {
        return (int)9L;
    }
    public static int PIDMSI_PRODUCTION() {
        return (int)10L;
    }
    public static int PIDMSI_COPYRIGHT() {
        return (int)11L;
    }
    public static int VAR_TIMEVALUEONLY() {
        return (int)1L;
    }
    public static int VAR_DATEVALUEONLY() {
        return (int)2L;
    }
    public static int VAR_VALIDDATE() {
        return (int)4L;
    }
    public static int VAR_CALENDAR_HIJRI() {
        return (int)8L;
    }
    public static int VAR_LOCALBOOL() {
        return (int)16L;
    }
    public static int VAR_FORMAT_NOSUBSTITUTE() {
        return (int)32L;
    }
    public static int VAR_FOURDIGITYEARS() {
        return (int)64L;
    }
    public static int VAR_CALENDAR_THAI() {
        return (int)128L;
    }
    public static int VAR_CALENDAR_GREGORIAN() {
        return (int)256L;
    }
    public static int VTDATEGRE_MIN() {
        return (int)-657434L;
    }
    public static int VTBIT_I1() {
        return (int)65536L;
    }
    public static int VTBIT_UI1() {
        return (int)131072L;
    }
    public static int VTBIT_I2() {
        return (int)4L;
    }
    public static int VTBIT_UI2() {
        return (int)262144L;
    }
    public static int VTBIT_I4() {
        return (int)8L;
    }
    public static int VTBIT_UI4() {
        return (int)524288L;
    }
    public static int VTBIT_I8() {
        return (int)1048576L;
    }
    public static int VTBIT_UI8() {
        return (int)2097152L;
    }
    public static int VTBIT_R4() {
        return (int)16L;
    }
    public static int VTBIT_R8() {
        return (int)32L;
    }
    public static int VTBIT_CY() {
        return (int)64L;
    }
    public static int VTBIT_DECIMAL() {
        return (int)16384L;
    }
    public static int VT_HARDTYPE() {
        return (int)32768L;
    }
    public static int MEMBERID_NIL() {
        return (int)-1L;
    }
    public static int ID_DEFAULTINST() {
        return (int)-2L;
    }
    public static int MASK_TO_RESET_TLB_BITS() {
        return (int)-97L;
    }
    public static int E_DRAW() {
        return (int)-2147221184L;
    }
    public static int DATA_E_FORMATETC() {
        return (int)-2147221404L;
    }
    public static int OLEIVERB_PRIMARY() {
        return (int)0L;
    }
    public static int OLEIVERB_SHOW() {
        return (int)-1L;
    }
    public static int OLEIVERB_OPEN() {
        return (int)-2L;
    }
    public static int OLEIVERB_HIDE() {
        return (int)-3L;
    }
    public static int OLEIVERB_UIACTIVATE() {
        return (int)-4L;
    }
    public static int OLEIVERB_INPLACEACTIVATE() {
        return (int)-5L;
    }
    public static int OLEIVERB_DISCARDUNDOSTATE() {
        return (int)-6L;
    }
    public static int EMBDHLP_INPROC_HANDLER() {
        return (int)0L;
    }
    public static int EMBDHLP_INPROC_SERVER() {
        return (int)1L;
    }
    public static int EMBDHLP_CREATENOW() {
        return (int)0L;
    }
    public static int EMBDHLP_DELAYCREATE() {
        return (int)65536L;
    }
    public static long OPENFILENAME_SIZE_VERSION_400A() {
        return 136L;
    }
    public static long OPENFILENAME_SIZE_VERSION_400W() {
        return 136L;
    }
    public static long OPENFILENAME_SIZE_VERSION_400() {
        return 136L;
    }
    public static int CDN_FIRST() {
        return (int)4294966695L;
    }
    public static int CDN_LAST() {
        return (int)4294966597L;
    }
    public static int CDN_INITDONE() {
        return (int)4294966695L;
    }
    public static int CDN_SELCHANGE() {
        return (int)4294966694L;
    }
    public static int CDN_FOLDERCHANGE() {
        return (int)4294966693L;
    }
    public static int CDN_SHAREVIOLATION() {
        return (int)4294966692L;
    }
    public static int CDN_HELP() {
        return (int)4294966691L;
    }
    public static int CDN_FILEOK() {
        return (int)4294966690L;
    }
    public static int CDN_TYPECHANGE() {
        return (int)4294966689L;
    }
    public static int CDN_INCLUDEITEM() {
        return (int)4294966688L;
    }
    public static int CDM_FIRST() {
        return (int)1124L;
    }
    public static int CDM_LAST() {
        return (int)1224L;
    }
    public static int CDM_GETSPEC() {
        return (int)1124L;
    }
    public static int CDM_GETFILEPATH() {
        return (int)1125L;
    }
    public static int CDM_GETFOLDERPATH() {
        return (int)1126L;
    }
    public static int CDM_GETFOLDERIDLIST() {
        return (int)1127L;
    }
    public static int CDM_SETCONTROLTEXT() {
        return (int)1128L;
    }
    public static int CDM_HIDECONTROL() {
        return (int)1129L;
    }
    public static int CDM_SETDEFEXT() {
        return (int)1130L;
    }
    public static int FR_MATCHALEFHAMZA() {
        return (int)2147483648L;
    }
    public static int FRM_FIRST() {
        return (int)1124L;
    }
    public static int FRM_LAST() {
        return (int)1224L;
    }
    public static int FRM_SETOPERATIONRESULT() {
        return (int)1124L;
    }
    public static int FRM_SETOPERATIONRESULTTEXT() {
        return (int)1125L;
    }
    public static int CF_BOTH() {
        return (int)3L;
    }
    public static int CF_SHOWHELP() {
        return (int)4L;
    }
    public static int CF_ENABLEHOOK() {
        return (int)8L;
    }
    public static int CF_ENABLETEMPLATE() {
        return (int)16L;
    }
    public static int CF_ENABLETEMPLATEHANDLE() {
        return (int)32L;
    }
    public static int CF_INITTOLOGFONTSTRUCT() {
        return (int)64L;
    }
    public static int CF_USESTYLE() {
        return (int)128L;
    }
    public static int CF_EFFECTS() {
        return (int)256L;
    }
    public static int CF_APPLY() {
        return (int)512L;
    }
    public static int CF_ANSIONLY() {
        return (int)1024L;
    }
    public static int CF_SCRIPTSONLY() {
        return (int)1024L;
    }
    public static int CF_NOVECTORFONTS() {
        return (int)2048L;
    }
    public static int CF_NOOEMFONTS() {
        return (int)2048L;
    }
    public static int CF_NOSIMULATIONS() {
        return (int)4096L;
    }
    public static int CF_LIMITSIZE() {
        return (int)8192L;
    }
    public static int CF_FIXEDPITCHONLY() {
        return (int)16384L;
    }
    public static int CF_WYSIWYG() {
        return (int)32768L;
    }
    public static int CF_FORCEFONTEXIST() {
        return (int)65536L;
    }
    public static int CF_SCALABLEONLY() {
        return (int)131072L;
    }
    public static int CF_TTONLY() {
        return (int)262144L;
    }
    public static int CF_NOFACESEL() {
        return (int)524288L;
    }
    public static int CF_NOSTYLESEL() {
        return (int)1048576L;
    }
    public static int CF_NOSIZESEL() {
        return (int)2097152L;
    }
    public static int CF_SELECTSCRIPT() {
        return (int)4194304L;
    }
    public static int CF_NOSCRIPTSEL() {
        return (int)8388608L;
    }
    public static int CF_NOVERTFONTS() {
        return (int)16777216L;
    }
    public static int CF_INACTIVEFONTS() {
        return (int)33554432L;
    }
    public static int WM_CHOOSEFONT_GETLOGFONT() {
        return (int)1025L;
    }
    public static int WM_CHOOSEFONT_SETLOGFONT() {
        return (int)1125L;
    }
    public static int WM_CHOOSEFONT_SETFLAGS() {
        return (int)1126L;
    }
    public static MemorySegment LBSELCHSTRINGA() {
        return constants$1683.LBSELCHSTRINGA$SEGMENT;
    }
    public static MemorySegment SHAREVISTRINGA() {
        return constants$1683.SHAREVISTRINGA$SEGMENT;
    }
    public static MemorySegment FILEOKSTRINGA() {
        return constants$1683.FILEOKSTRINGA$SEGMENT;
    }
    public static MemorySegment COLOROKSTRINGA() {
        return constants$1683.COLOROKSTRINGA$SEGMENT;
    }
    public static MemorySegment SETRGBSTRINGA() {
        return constants$1684.SETRGBSTRINGA$SEGMENT;
    }
    public static MemorySegment HELPMSGSTRINGA() {
        return constants$1684.HELPMSGSTRINGA$SEGMENT;
    }
    public static MemorySegment FINDMSGSTRINGA() {
        return constants$1684.FINDMSGSTRINGA$SEGMENT;
    }
    public static MemorySegment LBSELCHSTRINGW() {
        return constants$1684.LBSELCHSTRINGW$SEGMENT;
    }
    public static MemorySegment SHAREVISTRINGW() {
        return constants$1684.SHAREVISTRINGW$SEGMENT;
    }
    public static MemorySegment FILEOKSTRINGW() {
        return constants$1684.FILEOKSTRINGW$SEGMENT;
    }
    public static MemorySegment COLOROKSTRINGW() {
        return constants$1685.COLOROKSTRINGW$SEGMENT;
    }
    public static MemorySegment SETRGBSTRINGW() {
        return constants$1685.SETRGBSTRINGW$SEGMENT;
    }
    public static MemorySegment HELPMSGSTRINGW() {
        return constants$1685.HELPMSGSTRINGW$SEGMENT;
    }
    public static MemorySegment FINDMSGSTRINGW() {
        return constants$1685.FINDMSGSTRINGW$SEGMENT;
    }
    public static MemorySegment LBSELCHSTRING() {
        return constants$1685.LBSELCHSTRING$SEGMENT;
    }
    public static MemorySegment SHAREVISTRING() {
        return constants$1685.SHAREVISTRING$SEGMENT;
    }
    public static MemorySegment FILEOKSTRING() {
        return constants$1686.FILEOKSTRING$SEGMENT;
    }
    public static MemorySegment COLOROKSTRING() {
        return constants$1686.COLOROKSTRING$SEGMENT;
    }
    public static MemorySegment SETRGBSTRING() {
        return constants$1686.SETRGBSTRING$SEGMENT;
    }
    public static MemorySegment HELPMSGSTRING() {
        return constants$1686.HELPMSGSTRING$SEGMENT;
    }
    public static MemorySegment FINDMSGSTRING() {
        return constants$1686.FINDMSGSTRING$SEGMENT;
    }
    public static int CD_LBSELNOITEMS() {
        return (int)-1L;
    }
    public static int PD_EXCL_COPIESANDCOLLATE() {
        return (int)33024L;
    }
    public static int START_PAGE_GENERAL() {
        return (int)4294967295L;
    }
    public static int WM_PSD_PAGESETUPDLG() {
        return (int)1024L;
    }
    public static int WM_PSD_FULLPAGERECT() {
        return (int)1025L;
    }
    public static int WM_PSD_MINMARGINRECT() {
        return (int)1026L;
    }
    public static int WM_PSD_MARGINRECT() {
        return (int)1027L;
    }
    public static int WM_PSD_GREEKTEXTRECT() {
        return (int)1028L;
    }
    public static int WM_PSD_ENVSTAMPRECT() {
        return (int)1029L;
    }
    public static int WM_PSD_YAFULLPAGERECT() {
        return (int)1030L;
    }
    public static MemorySegment SERVICES_ACTIVE_DATABASEW() {
        return constants$1686.SERVICES_ACTIVE_DATABASEW$SEGMENT;
    }
    public static MemorySegment SERVICES_FAILED_DATABASEW() {
        return constants$1687.SERVICES_FAILED_DATABASEW$SEGMENT;
    }
    public static MemorySegment SERVICES_ACTIVE_DATABASEA() {
        return constants$1687.SERVICES_ACTIVE_DATABASEA$SEGMENT;
    }
    public static MemorySegment SERVICES_FAILED_DATABASEA() {
        return constants$1687.SERVICES_FAILED_DATABASEA$SEGMENT;
    }
    public static short SC_GROUP_IDENTIFIERW() {
        return (short)43L;
    }
    public static int SC_GROUP_IDENTIFIERA() {
        return (int)43L;
    }
    public static MemorySegment SERVICES_ACTIVE_DATABASE() {
        return constants$1687.SERVICES_ACTIVE_DATABASE$SEGMENT;
    }
    public static MemorySegment SERVICES_FAILED_DATABASE() {
        return constants$1687.SERVICES_FAILED_DATABASE$SEGMENT;
    }
    public static int SC_GROUP_IDENTIFIER() {
        return (int)43L;
    }
    public static int SERVICE_NO_CHANGE() {
        return (int)4294967295L;
    }
    public static int SERVICE_STATE_ALL() {
        return (int)3L;
    }
    public static int SC_MANAGER_ALL_ACCESS() {
        return (int)983103L;
    }
    public static int SERVICE_ALL_ACCESS() {
        return (int)983551L;
    }
    public static int SERVICE_NOTIFY_STATUS_CHANGE() {
        return (int)2L;
    }
    public static int SERVICE_STOP_REASON_FLAG_MAX() {
        return (int)2147483648L;
    }
    public static int SERVICE_SID_TYPE_RESTRICTED() {
        return (int)3L;
    }
    public static MemorySegment SERVICE_TRIGGER_STARTED_ARGUMENT() {
        return constants$1687.SERVICE_TRIGGER_STARTED_ARGUMENT$SEGMENT;
    }
    public static MemorySegment SC_AGGREGATE_STORAGE_KEY() {
        return constants$1688.SC_AGGREGATE_STORAGE_KEY$SEGMENT;
    }
    public static int MDM_MASK_PROTOCOLINFO() {
        return (int)268369920L;
    }
    public static int MDM_SHIFT_PROTOCOLINFO() {
        return (int)16L;
    }
    public static int MDM_MASK_EXTENDEDINFO() {
        return (int)268431360L;
    }
    public static int MDM_SHIFT_EXTENDEDINFO() {
        return (int)12L;
    }
    public static int MDM_MASK_HDLCPPP_AUTH() {
        return (int)56L;
    }
    public static int MDM_MASK_HDLCPPP_ML() {
        return (int)192L;
    }
    public static int MDM_PROTOCOL_HDLCPPP_64K() {
        return (int)1114112L;
    }
    public static int MDM_PROTOCOL_HDLCPPP_56K() {
        return (int)2162688L;
    }
    public static int MDM_PROTOCOL_HDLCPPP_112K() {
        return (int)136380416L;
    }
    public static int MDM_PROTOCOL_HDLCPPP_112K_PAP() {
        return (int)153157632L;
    }
    public static int MDM_PROTOCOL_HDLCPPP_112K_CHAP() {
        return (int)161546240L;
    }
    public static int MDM_PROTOCOL_HDLCPPP_112K_MSCHAP() {
        return (int)169934848L;
    }
    public static int MDM_PROTOCOL_HDLCPPP_128K() {
        return (int)135331840L;
    }
    public static int MDM_PROTOCOL_HDLCPPP_128K_PAP() {
        return (int)152109056L;
    }
    public static int MDM_PROTOCOL_HDLCPPP_128K_CHAP() {
        return (int)160497664L;
    }
    public static int MDM_PROTOCOL_HDLCPPP_128K_MSCHAP() {
        return (int)168886272L;
    }
    public static int MDM_MASK_V120_ML() {
        return (int)192L;
    }
    public static int MDM_PROTOCOL_V120_64K() {
        return (int)68485120L;
    }
    public static int MDM_PROTOCOL_V120_56K() {
        return (int)69533696L;
    }
    public static int MDM_PROTOCOL_V120_112K() {
        return (int)136642560L;
    }
    public static int MDM_PROTOCOL_V120_128K() {
        return (int)135593984L;
    }
    public static int MDM_PROTOCOL_X75_64K() {
        return (int)1245184L;
    }
    public static int MDM_PROTOCOL_X75_128K() {
        return (int)2293760L;
    }
    public static int MDM_PROTOCOL_X75_T_70() {
        return (int)3342336L;
    }
    public static int MDM_PROTOCOL_X75_BTX() {
        return (int)4390912L;
    }
    public static int MDM_PROTOCOL_V110_1DOT2K() {
        return (int)1310720L;
    }
    public static int MDM_PROTOCOL_V110_2DOT4K() {
        return (int)2359296L;
    }
    public static int MDM_PROTOCOL_V110_4DOT8K() {
        return (int)3407872L;
    }
    public static int MDM_PROTOCOL_V110_9DOT6K() {
        return (int)4456448L;
    }
    public static int MDM_PROTOCOL_V110_12DOT0K() {
        return (int)5505024L;
    }
    public static int MDM_PROTOCOL_V110_14DOT4K() {
        return (int)6553600L;
    }
    public static int MDM_PROTOCOL_V110_19DOT2K() {
        return (int)7602176L;
    }
    public static int MDM_PROTOCOL_V110_28DOT8K() {
        return (int)8650752L;
    }
    public static int MDM_PROTOCOL_V110_38DOT4K() {
        return (int)9699328L;
    }
    public static int MDM_PROTOCOL_V110_57DOT6K() {
        return (int)10747904L;
    }
    public static int MDM_MASK_AUTO_ML() {
        return (int)192L;
    }
    public static int MDM_PROTOCOL_AUTO_1CH() {
        return (int)67502080L;
    }
    public static int MDM_PROTOCOL_AUTO_2CH() {
        return (int)134610944L;
    }
    public static int MDM_PROTOCOL_ANALOG_RLP() {
        return (int)458752L;
    }
    public static int MDM_PROTOCOL_ANALOG_NRLP() {
        return (int)1507328L;
    }
    public static int MDM_PROTOCOL_ANALOG_V34() {
        return (int)2555904L;
    }
    public static int MDM_PROTOCOL_GPRS() {
        return (int)524288L;
    }
    public static int MDM_PROTOCOL_PIAFS_INCOMING() {
        return (int)589824L;
    }
    public static int MDM_PROTOCOL_PIAFS_OUTGOING() {
        return (int)1638400L;
    }
    public static int ISC_SHOWUICOMPOSITIONWINDOW() {
        return (int)2147483648L;
    }
    public static int ISC_SHOWUIALL() {
        return (int)3221225487L;
    }
    public static int IGP_GETIMEVERSION() {
        return (int)4294967292L;
    }
    public static int SCS_SETSTR() {
        return (int)9L;
    }
    public static int SCS_CHANGEATTR() {
        return (int)18L;
    }
    public static int SCS_CHANGECLAUSE() {
        return (int)36L;
    }
    public static int IME_CMODE_CHINESE() {
        return (int)1L;
    }
    public static int IME_CMODE_HANGUL() {
        return (int)1L;
    }
    public static int IME_CMODE_JAPANESE() {
        return (int)1L;
    }
    public static int IME_CMODE_HANGEUL() {
        return (int)1L;
    }
    public static int IME_CMODE_RESERVED() {
        return (int)4026531840L;
    }
    public static int IMM_ERROR_NODATA() {
        return (int)-1L;
    }
    public static int IMM_ERROR_GENERAL() {
        return (int)-2L;
    }
    public static int IME_REGWORD_STYLE_USER_FIRST() {
        return (int)2147483648L;
    }
    public static int IME_REGWORD_STYLE_USER_LAST() {
        return (int)4294967295L;
    }
    public static int IMFS_GRAYED() {
        return (int)3L;
    }
    public static int IMFS_DISABLED() {
        return (int)3L;
    }
    public static int IMFS_CHECKED() {
        return (int)8L;
    }
    public static int IMFS_HILITE() {
        return (int)128L;
    }
    public static int IMFS_ENABLED() {
        return (int)0L;
    }
    public static int IMFS_UNCHECKED() {
        return (int)0L;
    }
    public static int IMFS_UNHILITE() {
        return (int)0L;
    }
    public static int IMFS_DEFAULT() {
        return (int)4096L;
    }
    public static short WINSOCK_VERSION() {
        return (short)514L;
    }
    public static int AF_IPX() {
        return (int)6L;
    }
    public static int AF_OSI() {
        return (int)7L;
    }
    public static int SOL_IP() {
        return (int)65531L;
    }
    public static int SOL_IPV6() {
        return (int)65530L;
    }
    public static int SO_DONTLINGER() {
        return (int)-129L;
    }
    public static int SO_EXCLUSIVEADDRUSE() {
        return (int)-5L;
    }
    public static int IP6T_SO_ORIGINAL_DST() {
        return (int)12303L;
    }
    public static long _SS_ALIGNSIZE() {
        return 8L;
    }
    public static long _SS_PAD1SIZE() {
        return 6L;
    }
    public static long _SS_PAD2SIZE() {
        return 112L;
    }
    public static int IOC_WSK() {
        return (int)251658240L;
    }
    public static int SIO_ASSOCIATE_HANDLE() {
        return (int)2281701377L;
    }
    public static int SIO_ENABLE_CIRCULAR_QUEUEING() {
        return (int)671088642L;
    }
    public static int SIO_FIND_ROUTE() {
        return (int)1207959555L;
    }
    public static int SIO_FLUSH() {
        return (int)671088644L;
    }
    public static int SIO_GET_BROADCAST_ADDRESS() {
        return (int)1207959557L;
    }
    public static int SIO_GET_EXTENSION_FUNCTION_POINTER() {
        return (int)3355443206L;
    }
    public static int SIO_GET_QOS() {
        return (int)3355443207L;
    }
    public static int SIO_GET_GROUP_QOS() {
        return (int)3355443208L;
    }
    public static int SIO_MULTIPOINT_LOOPBACK() {
        return (int)2281701385L;
    }
    public static int SIO_MULTICAST_SCOPE() {
        return (int)2281701386L;
    }
    public static int SIO_SET_QOS() {
        return (int)2281701387L;
    }
    public static int SIO_SET_GROUP_QOS() {
        return (int)2281701388L;
    }
    public static int SIO_TRANSLATE_HANDLE() {
        return (int)3355443213L;
    }
    public static int SIO_ROUTING_INTERFACE_QUERY() {
        return (int)3355443220L;
    }
    public static int SIO_ROUTING_INTERFACE_CHANGE() {
        return (int)2281701397L;
    }
    public static int SIO_ADDRESS_LIST_QUERY() {
        return (int)1207959574L;
    }
    public static int SIO_ADDRESS_LIST_CHANGE() {
        return (int)671088663L;
    }
    public static int SIO_QUERY_TARGET_PNP_HANDLE() {
        return (int)1207959576L;
    }
    public static int SIO_QUERY_RSS_PROCESSOR_INFO() {
        return (int)1207959589L;
    }
    public static int SIO_ADDRESS_LIST_SORT() {
        return (int)3355443225L;
    }
    public static int SIO_RESERVED_1() {
        return (int)2281701402L;
    }
    public static int SIO_RESERVED_2() {
        return (int)2281701409L;
    }
    public static int SIO_GET_MULTIPLE_EXTENSION_FUNCTION_POINTER() {
        return (int)3355443236L;
    }
    public static int IPPORT_REGISTERED_MIN() {
        return (int)1024L;
    }
    public static int IN_CLASSA_NET() {
        return (int)4278190080L;
    }
    public static int IN_CLASSB_NET() {
        return (int)4294901760L;
    }
    public static int IN_CLASSC_NET() {
        return (int)4294967040L;
    }
    public static int IN_CLASSD_NET() {
        return (int)4026531840L;
    }
    public static int INADDR_ANY() {
        return (int)0L;
    }
    public static int INADDR_BROADCAST() {
        return (int)4294967295L;
    }
    public static int INADDR_NONE() {
        return (int)4294967295L;
    }
    public static int IOC_IN() {
        return (int)2147483648L;
    }
    public static int IOC_INOUT() {
        return (int)3221225472L;
    }
    public static int AI_EXTENDED() {
        return (int)2147483648L;
    }
    public static int NS_ALL() {
        return (int)0L;
    }
    public static int NS_SAP() {
        return (int)1L;
    }
    public static int NS_NDS() {
        return (int)2L;
    }
    public static int NS_PEER_BROWSE() {
        return (int)3L;
    }
    public static int NS_SLP() {
        return (int)5L;
    }
    public static int NS_DHCP() {
        return (int)6L;
    }
    public static int NS_TCPIP_LOCAL() {
        return (int)10L;
    }
    public static int NS_TCPIP_HOSTS() {
        return (int)11L;
    }
    public static int NS_DNS() {
        return (int)12L;
    }
    public static int NS_NETBT() {
        return (int)13L;
    }
    public static int NS_WINS() {
        return (int)14L;
    }
    public static int NS_NLA() {
        return (int)15L;
    }
    public static int NS_BTH() {
        return (int)16L;
    }
    public static int NS_NBP() {
        return (int)20L;
    }
    public static int NS_MS() {
        return (int)30L;
    }
    public static int NS_STDA() {
        return (int)31L;
    }
    public static int NS_NTDS() {
        return (int)32L;
    }
    public static int NS_EMAIL() {
        return (int)37L;
    }
    public static int NS_PNRPNAME() {
        return (int)38L;
    }
    public static int NS_PNRPCLOUD() {
        return (int)39L;
    }
    public static int NS_X500() {
        return (int)40L;
    }
    public static int NS_NIS() {
        return (int)41L;
    }
    public static int NS_NISPLUS() {
        return (int)42L;
    }
    public static int NS_WRQ() {
        return (int)50L;
    }
    public static int NS_NETDES() {
        return (int)60L;
    }
    public static int FIONREAD() {
        return (int)1074030207L;
    }
    public static int FIONBIO() {
        return (int)2147772030L;
    }
    public static int FIOASYNC() {
        return (int)2147772029L;
    }
    public static int SIOCSHIWAT() {
        return (int)2147775232L;
    }
    public static int SIOCGHIWAT() {
        return (int)1074033409L;
    }
    public static int SIOCSLOWAT() {
        return (int)2147775234L;
    }
    public static int SIOCGLOWAT() {
        return (int)1074033411L;
    }
    public static int SIOCATMARK() {
        return (int)1074033415L;
    }
    public static int ADDR_ANY() {
        return (int)0L;
    }
    public static long INVALID_SOCKET() {
        return -1L;
    }
    public static int SOCKET_ERROR() {
        return (int)-1L;
    }
    public static int FROM_PROTOCOL_INFO() {
        return (int)-1L;
    }
    public static int SO_PROTOCOL_INFO() {
        return (int)8196L;
    }
    public static int PF_UNSPEC() {
        return (int)0L;
    }
    public static int PF_UNIX() {
        return (int)1L;
    }
    public static int PF_INET() {
        return (int)2L;
    }
    public static int PF_IMPLINK() {
        return (int)3L;
    }
    public static int PF_PUP() {
        return (int)4L;
    }
    public static int PF_CHAOS() {
        return (int)5L;
    }
    public static int PF_NS() {
        return (int)6L;
    }
    public static int PF_IPX() {
        return (int)6L;
    }
    public static int PF_ISO() {
        return (int)7L;
    }
    public static int PF_OSI() {
        return (int)7L;
    }
    public static int PF_ECMA() {
        return (int)8L;
    }
    public static int PF_DATAKIT() {
        return (int)9L;
    }
    public static int PF_CCITT() {
        return (int)10L;
    }
    public static int PF_SNA() {
        return (int)11L;
    }
    public static int PF_DECnet() {
        return (int)12L;
    }
    public static int PF_DLI() {
        return (int)13L;
    }
    public static int PF_LAT() {
        return (int)14L;
    }
    public static int PF_HYLINK() {
        return (int)15L;
    }
    public static int PF_APPLETALK() {
        return (int)16L;
    }
    public static int PF_VOICEVIEW() {
        return (int)18L;
    }
    public static int PF_FIREFOX() {
        return (int)19L;
    }
    public static int PF_UNKNOWN1() {
        return (int)20L;
    }
    public static int PF_BAN() {
        return (int)21L;
    }
    public static int PF_ATM() {
        return (int)22L;
    }
    public static int PF_INET6() {
        return (int)23L;
    }
    public static int PF_BTH() {
        return (int)32L;
    }
    public static int PF_MAX() {
        return (int)35L;
    }
    public static int FD_READ() {
        return (int)1L;
    }
    public static int FD_WRITE() {
        return (int)2L;
    }
    public static int FD_OOB() {
        return (int)4L;
    }
    public static int FD_ACCEPT() {
        return (int)8L;
    }
    public static int FD_CONNECT() {
        return (int)16L;
    }
    public static int FD_CLOSE() {
        return (int)32L;
    }
    public static int FD_QOS() {
        return (int)64L;
    }
    public static int FD_GROUP_QOS() {
        return (int)128L;
    }
    public static int FD_ROUTING_INTERFACE_CHANGE() {
        return (int)256L;
    }
    public static int FD_ADDRESS_LIST_CHANGE() {
        return (int)512L;
    }
    public static int FD_ALL_EVENTS() {
        return (int)1023L;
    }
    public static int HOST_NOT_FOUND() {
        return (int)11001L;
    }
    public static int TRY_AGAIN() {
        return (int)11002L;
    }
    public static int NO_RECOVERY() {
        return (int)11003L;
    }
    public static int NO_DATA() {
        return (int)11004L;
    }
    public static int WSANO_ADDRESS() {
        return (int)11004L;
    }
    public static int NO_ADDRESS() {
        return (int)11004L;
    }
    public static int WSA_IO_PENDING() {
        return (int)997L;
    }
    public static int WSA_IO_INCOMPLETE() {
        return (int)996L;
    }
    public static int WSA_INVALID_HANDLE() {
        return (int)6L;
    }
    public static int WSA_INVALID_PARAMETER() {
        return (int)87L;
    }
    public static int WSA_NOT_ENOUGH_MEMORY() {
        return (int)8L;
    }
    public static int WSA_OPERATION_ABORTED() {
        return (int)995L;
    }
    public static MemoryAddress WSA_INVALID_EVENT() {
        return constants$1688.WSA_INVALID_EVENT$ADDR;
    }
    public static int WSA_MAXIMUM_WAIT_EVENTS() {
        return (int)64L;
    }
    public static int WSA_WAIT_FAILED() {
        return (int)4294967295L;
    }
    public static int WSA_WAIT_EVENT_0() {
        return (int)0L;
    }
    public static int WSA_WAIT_IO_COMPLETION() {
        return (int)192L;
    }
    public static int WSA_WAIT_TIMEOUT() {
        return (int)258L;
    }
    public static int WSA_INFINITE() {
        return (int)4294967295L;
    }
    public static int SERVICE_BESTEFFORT() {
        return (int)2147549184L;
    }
    public static int SERVICE_CONTROLLEDLOAD() {
        return (int)2147614720L;
    }
    public static int SERVICE_GUARANTEED() {
        return (int)2147745792L;
    }
    public static int SERVICE_QUALITATIVE() {
        return (int)2149580800L;
    }
    public static int SERVICE_NO_TRAFFIC_CONTROL() {
        return (int)2164260864L;
    }
    public static int QOS_NOT_SPECIFIED() {
        return (int)4294967295L;
    }
    public static int POSITIVE_INFINITY_RATE() {
        return (int)4294967294L;
    }
    public static int QOS_OBJECT_END_OF_LIST() {
        return (int)2001L;
    }
    public static int QOS_OBJECT_SD_MODE() {
        return (int)2002L;
    }
    public static int QOS_OBJECT_SHAPING_RATE() {
        return (int)2003L;
    }
    public static int QOS_OBJECT_DESTADDR() {
        return (int)2004L;
    }
    public static int SIO_NSP_NOTIFY_CHANGE() {
        return (int)2281701401L;
    }
    public static int SERVICE_MULTIPLE() {
        return (int)1L;
    }
    public static int NS_LOCALNAME() {
        return (int)19L;
    }
    public static int RES_UNUSED_1() {
        return (int)1L;
    }
    public static int RES_FLUSH_CACHE() {
        return (int)2L;
    }
    public static int RES_SERVICE() {
        return (int)4L;
    }
    public static MemorySegment SERVICE_TYPE_VALUE_IPXPORTA() {
        return constants$1688.SERVICE_TYPE_VALUE_IPXPORTA$SEGMENT;
    }
    public static MemorySegment SERVICE_TYPE_VALUE_IPXPORTW() {
        return constants$1688.SERVICE_TYPE_VALUE_IPXPORTW$SEGMENT;
    }
    public static MemorySegment SERVICE_TYPE_VALUE_SAPIDA() {
        return constants$1688.SERVICE_TYPE_VALUE_SAPIDA$SEGMENT;
    }
    public static MemorySegment SERVICE_TYPE_VALUE_SAPIDW() {
        return constants$1688.SERVICE_TYPE_VALUE_SAPIDW$SEGMENT;
    }
    public static MemorySegment SERVICE_TYPE_VALUE_TCPPORTA() {
        return constants$1689.SERVICE_TYPE_VALUE_TCPPORTA$SEGMENT;
    }
    public static MemorySegment SERVICE_TYPE_VALUE_TCPPORTW() {
        return constants$1689.SERVICE_TYPE_VALUE_TCPPORTW$SEGMENT;
    }
    public static MemorySegment SERVICE_TYPE_VALUE_UDPPORTA() {
        return constants$1689.SERVICE_TYPE_VALUE_UDPPORTA$SEGMENT;
    }
    public static MemorySegment SERVICE_TYPE_VALUE_UDPPORTW() {
        return constants$1689.SERVICE_TYPE_VALUE_UDPPORTW$SEGMENT;
    }
    public static MemorySegment SERVICE_TYPE_VALUE_OBJECTIDA() {
        return constants$1689.SERVICE_TYPE_VALUE_OBJECTIDA$SEGMENT;
    }
    public static MemorySegment SERVICE_TYPE_VALUE_OBJECTIDW() {
        return constants$1689.SERVICE_TYPE_VALUE_OBJECTIDW$SEGMENT;
    }
    public static MemorySegment SERVICE_TYPE_VALUE_SAPID() {
        return constants$1690.SERVICE_TYPE_VALUE_SAPID$SEGMENT;
    }
    public static MemorySegment SERVICE_TYPE_VALUE_TCPPORT() {
        return constants$1690.SERVICE_TYPE_VALUE_TCPPORT$SEGMENT;
    }
    public static MemorySegment SERVICE_TYPE_VALUE_UDPPORT() {
        return constants$1690.SERVICE_TYPE_VALUE_UDPPORT$SEGMENT;
    }
    public static MemorySegment SERVICE_TYPE_VALUE_OBJECTID() {
        return constants$1690.SERVICE_TYPE_VALUE_OBJECTID$SEGMENT;
    }
    public static int LUP_RESOLUTION_HANDLE() {
        return (int)2147483648L;
    }
    public static int POLLIN() {
        return (int)768L;
    }
    public static int POLLOUT() {
        return (int)16L;
    }
    public static int IP_UNSPECIFIED_TYPE_OF_SERVICE() {
        return (int)-1L;
    }
    public static long IPV6_ADDRESS_BITS() {
        return 128L;
    }
    public static int SIO_GET_INTERFACE_LIST() {
        return (int)1074033791L;
    }
    public static int SIO_GET_INTERFACE_LIST_EX() {
        return (int)1074033790L;
    }
    public static int SIO_SET_MULTICAST_FILTER() {
        return (int)2147775613L;
    }
    public static int SIO_GET_MULTICAST_FILTER() {
        return (int)2147775612L;
    }
    public static int SIOCSIPMSFILTER() {
        return (int)2147775613L;
    }
    public static int SIOCGIPMSFILTER() {
        return (int)2147775612L;
    }
    public static int SIOCSMSFILTER() {
        return (int)2147775614L;
    }
    public static int SIOCGMSFILTER() {
        return (int)2147775615L;
    }
    public static int SIO_IDEAL_SEND_BACKLOG_QUERY() {
        return (int)1074033787L;
    }
    public static int SIO_IDEAL_SEND_BACKLOG_CHANGE() {
        return (int)536900730L;
    }
    public static int IPV6_JOIN_GROUP() {
        return (int)12L;
    }
    public static int IPV6_LEAVE_GROUP() {
        return (int)13L;
    }
    public static int IP_UNSPECIFIED_HOP_LIMIT() {
        return (int)-1L;
    }
    public static int IP_PROTECTION_LEVEL() {
        return (int)23L;
    }
    public static int PROTECTION_LEVEL_DEFAULT() {
        return (int)4294967295L;
    }
    public static int TCP_KEEPIDLE() {
        return (int)3L;
    }
    public static int EAI_AGAIN() {
        return (int)11002L;
    }
    public static int EAI_BADFLAGS() {
        return (int)10022L;
    }
    public static int EAI_FAIL() {
        return (int)11003L;
    }
    public static int EAI_FAMILY() {
        return (int)10047L;
    }
    public static int EAI_MEMORY() {
        return (int)8L;
    }
    public static int EAI_NOSECURENAME() {
        return (int)11032L;
    }
    public static int EAI_NONAME() {
        return (int)11001L;
    }
    public static int EAI_SERVICE() {
        return (int)10109L;
    }
    public static int EAI_SOCKTYPE() {
        return (int)10044L;
    }
    public static int EAI_IPSECPOLICY() {
        return (int)11033L;
    }
    public static int EAI_NODATA() {
        return (int)11001L;
    }
    public static long CURL_SOCKET_BAD() {
        return -1L;
    }
    public static int CURLSSLBACKEND_LIBRESSL() {
        return (int)1L;
    }
    public static int CURLSSLBACKEND_BORINGSSL() {
        return (int)1L;
    }
    public static int CURLSSLBACKEND_CYASSL() {
        return (int)7L;
    }
    public static int CURLSSLBACKEND_DARWINSSL() {
        return (int)9L;
    }
    public static int CURL_HTTPPOST_FILENAME() {
        return (int)1L;
    }
    public static int CURL_HTTPPOST_READFILE() {
        return (int)2L;
    }
    public static int CURL_HTTPPOST_PTRNAME() {
        return (int)4L;
    }
    public static int CURL_HTTPPOST_PTRCONTENTS() {
        return (int)8L;
    }
    public static int CURL_HTTPPOST_BUFFER() {
        return (int)16L;
    }
    public static int CURL_HTTPPOST_PTRBUFFER() {
        return (int)32L;
    }
    public static int CURL_HTTPPOST_CALLBACK() {
        return (int)64L;
    }
    public static int CURL_HTTPPOST_LARGE() {
        return (int)128L;
    }
    public static int CURL_MAX_HTTP_HEADER() {
        return (int)102400L;
    }
    public static int CURLFINFOFLAG_KNOWN_FILENAME() {
        return (int)1L;
    }
    public static int CURLFINFOFLAG_KNOWN_FILETYPE() {
        return (int)2L;
    }
    public static int CURLFINFOFLAG_KNOWN_TIME() {
        return (int)4L;
    }
    public static int CURLFINFOFLAG_KNOWN_PERM() {
        return (int)8L;
    }
    public static int CURLFINFOFLAG_KNOWN_UID() {
        return (int)16L;
    }
    public static int CURLFINFOFLAG_KNOWN_GID() {
        return (int)32L;
    }
    public static int CURLFINFOFLAG_KNOWN_SIZE() {
        return (int)64L;
    }
    public static int CURLFINFOFLAG_KNOWN_HLINKCOUNT() {
        return (int)128L;
    }
    public static int CURLE_OBSOLETE16() {
        return (int)16L;
    }
    public static int CURLE_OBSOLETE10() {
        return (int)10L;
    }
    public static int CURLE_OBSOLETE12() {
        return (int)12L;
    }
    public static int CURLOPT_ENCODING() {
        return (int)10102L;
    }
    public static int CURLE_FTP_WEIRD_SERVER_REPLY() {
        return (int)8L;
    }
    public static int CURLE_SSL_CACERT() {
        return (int)60L;
    }
    public static int CURLE_UNKNOWN_TELNET_OPTION() {
        return (int)48L;
    }
    public static int CURLE_TELNET_OPTION_SYNTAX() {
        return (int)49L;
    }
    public static int CURLE_SSL_PEER_CERTIFICATE() {
        return (int)60L;
    }
    public static int CURLE_OBSOLETE() {
        return (int)50L;
    }
    public static int CURLE_BAD_PASSWORD_ENTERED() {
        return (int)46L;
    }
    public static int CURLE_BAD_CALLING_ORDER() {
        return (int)44L;
    }
    public static int CURLE_FTP_USER_PASSWORD_INCORRECT() {
        return (int)10L;
    }
    public static int CURLE_FTP_CANT_RECONNECT() {
        return (int)16L;
    }
    public static int CURLE_FTP_COULDNT_GET_SIZE() {
        return (int)32L;
    }
    public static int CURLE_FTP_COULDNT_SET_ASCII() {
        return (int)29L;
    }
    public static int CURLE_FTP_WEIRD_USER_REPLY() {
        return (int)12L;
    }
    public static int CURLE_FTP_WRITE_ERROR() {
        return (int)20L;
    }
    public static int CURLE_LIBRARY_NOT_FOUND() {
        return (int)40L;
    }
    public static int CURLE_MALFORMAT_USER() {
        return (int)24L;
    }
    public static int CURLE_SHARE_IN_USE() {
        return (int)57L;
    }
    public static int CURLE_URL_MALFORMAT_USER() {
        return (int)4L;
    }
    public static int CURLE_FTP_ACCESS_DENIED() {
        return (int)9L;
    }
    public static int CURLE_FTP_COULDNT_SET_BINARY() {
        return (int)17L;
    }
    public static int CURLE_FTP_QUOTE_ERROR() {
        return (int)21L;
    }
    public static int CURLE_TFTP_DISKFULL() {
        return (int)70L;
    }
    public static int CURLE_TFTP_EXISTS() {
        return (int)73L;
    }
    public static int CURLE_HTTP_RANGE_ERROR() {
        return (int)33L;
    }
    public static int CURLE_FTP_SSL_FAILED() {
        return (int)64L;
    }
    public static int CURLE_OPERATION_TIMEOUTED() {
        return (int)28L;
    }
    public static int CURLE_HTTP_NOT_FOUND() {
        return (int)22L;
    }
    public static int CURLE_HTTP_PORT_FAILED() {
        return (int)45L;
    }
    public static int CURLE_FTP_COULDNT_STOR_FILE() {
        return (int)25L;
    }
    public static int CURLE_FTP_PARTIAL_FILE() {
        return (int)18L;
    }
    public static int CURLE_FTP_BAD_DOWNLOAD_RESUME() {
        return (int)36L;
    }
    public static int CURLE_LDAP_INVALID_URL() {
        return (int)62L;
    }
    public static int CURLE_CONV_REQD() {
        return (int)76L;
    }
    public static int CURLE_CONV_FAILED() {
        return (int)75L;
    }
    public static int CURLOPT_FILE() {
        return (int)10001L;
    }
    public static int CURLOPT_INFILE() {
        return (int)10009L;
    }
    public static int CURLOPT_WRITEHEADER() {
        return (int)10029L;
    }
    public static int CURLOPT_WRITEINFO() {
        return (int)10040L;
    }
    public static int CURLOPT_CLOSEPOLICY() {
        return (int)72L;
    }
    public static int CURLAUTH_NONE() {
        return (int)0L;
    }
    public static int CURLAUTH_BASIC() {
        return (int)1L;
    }
    public static int CURLAUTH_DIGEST() {
        return (int)2L;
    }
    public static int CURLAUTH_NEGOTIATE() {
        return (int)4L;
    }
    public static int CURLAUTH_GSSNEGOTIATE() {
        return (int)4L;
    }
    public static int CURLAUTH_GSSAPI() {
        return (int)4L;
    }
    public static int CURLAUTH_NTLM() {
        return (int)8L;
    }
    public static int CURLAUTH_DIGEST_IE() {
        return (int)16L;
    }
    public static int CURLAUTH_NTLM_WB() {
        return (int)32L;
    }
    public static int CURLAUTH_BEARER() {
        return (int)64L;
    }
    public static int CURLAUTH_AWS_SIGV4() {
        return (int)128L;
    }
    public static int CURLAUTH_ONLY() {
        return (int)2147483648L;
    }
    public static int CURLAUTH_ANY() {
        return (int)4294967279L;
    }
    public static int CURLAUTH_ANYSAFE() {
        return (int)4294967278L;
    }
    public static int CURLSSH_AUTH_ANY() {
        return (int)-1L;
    }
    public static int CURLSSH_AUTH_PUBLICKEY() {
        return (int)1L;
    }
    public static int CURLSSH_AUTH_PASSWORD() {
        return (int)2L;
    }
    public static int CURLSSH_AUTH_HOST() {
        return (int)4L;
    }
    public static int CURLSSH_AUTH_KEYBOARD() {
        return (int)8L;
    }
    public static int CURLSSH_AUTH_AGENT() {
        return (int)16L;
    }
    public static int CURLSSH_AUTH_GSSAPI() {
        return (int)32L;
    }
    public static int CURLSSH_AUTH_DEFAULT() {
        return (int)-1L;
    }
    public static int CURLGSSAPI_DELEGATION_POLICY_FLAG() {
        return (int)1L;
    }
    public static int CURLGSSAPI_DELEGATION_FLAG() {
        return (int)2L;
    }
    public static int CURLSSLOPT_ALLOW_BEAST() {
        return (int)1L;
    }
    public static int CURLSSLOPT_NO_REVOKE() {
        return (int)2L;
    }
    public static int CURLSSLOPT_NO_PARTIALCHAIN() {
        return (int)4L;
    }
    public static int CURLSSLOPT_REVOKE_BEST_EFFORT() {
        return (int)8L;
    }
    public static int CURLSSLOPT_NATIVE_CA() {
        return (int)16L;
    }
    public static int CURLSSLOPT_AUTO_CLIENT_CERT() {
        return (int)32L;
    }
    public static int CURL_HET_DEFAULT() {
        return (int)200L;
    }
    public static int CURL_UPKEEP_INTERVAL_DEFAULT() {
        return (int)60000L;
    }
    public static int CURLFTPSSL_NONE() {
        return (int)0L;
    }
    public static int CURLFTPSSL_TRY() {
        return (int)1L;
    }
    public static int CURLFTPSSL_CONTROL() {
        return (int)2L;
    }
    public static int CURLFTPSSL_ALL() {
        return (int)3L;
    }
    public static int CURLFTPSSL_LAST() {
        return (int)4L;
    }
    public static int CURLHEADER_SEPARATE() {
        return (int)1L;
    }
    public static int CURLALTSVC_READONLYFILE() {
        return (int)4L;
    }
    public static int CURLALTSVC_H1() {
        return (int)8L;
    }
    public static int CURLALTSVC_H2() {
        return (int)16L;
    }
    public static int CURLALTSVC_H3() {
        return (int)32L;
    }
    public static int CURLHSTS_ENABLE() {
        return (int)1L;
    }
    public static int CURLHSTS_READONLYFILE() {
        return (int)2L;
    }
    public static int CURLPROTO_HTTP() {
        return (int)1L;
    }
    public static int CURLPROTO_HTTPS() {
        return (int)2L;
    }
    public static int CURLPROTO_FTP() {
        return (int)4L;
    }
    public static int CURLPROTO_FTPS() {
        return (int)8L;
    }
    public static int CURLPROTO_SCP() {
        return (int)16L;
    }
    public static int CURLPROTO_SFTP() {
        return (int)32L;
    }
    public static int CURLPROTO_TELNET() {
        return (int)64L;
    }
    public static int CURLPROTO_LDAP() {
        return (int)128L;
    }
    public static int CURLPROTO_LDAPS() {
        return (int)256L;
    }
    public static int CURLPROTO_DICT() {
        return (int)512L;
    }
    public static int CURLPROTO_FILE() {
        return (int)1024L;
    }
    public static int CURLPROTO_TFTP() {
        return (int)2048L;
    }
    public static int CURLPROTO_IMAP() {
        return (int)4096L;
    }
    public static int CURLPROTO_IMAPS() {
        return (int)8192L;
    }
    public static int CURLPROTO_POP3() {
        return (int)16384L;
    }
    public static int CURLPROTO_POP3S() {
        return (int)32768L;
    }
    public static int CURLPROTO_SMTP() {
        return (int)65536L;
    }
    public static int CURLPROTO_SMTPS() {
        return (int)131072L;
    }
    public static int CURLPROTO_RTSP() {
        return (int)262144L;
    }
    public static int CURLPROTO_RTMP() {
        return (int)524288L;
    }
    public static int CURLPROTO_RTMPT() {
        return (int)1048576L;
    }
    public static int CURLPROTO_RTMPE() {
        return (int)2097152L;
    }
    public static int CURLPROTO_RTMPTE() {
        return (int)4194304L;
    }
    public static int CURLPROTO_RTMPS() {
        return (int)8388608L;
    }
    public static int CURLPROTO_RTMPTS() {
        return (int)16777216L;
    }
    public static int CURLPROTO_GOPHER() {
        return (int)33554432L;
    }
    public static int CURLPROTO_SMB() {
        return (int)67108864L;
    }
    public static int CURLPROTO_SMBS() {
        return (int)134217728L;
    }
    public static int CURLPROTO_MQTT() {
        return (int)268435456L;
    }
    public static int CURLPROTO_GOPHERS() {
        return (int)536870912L;
    }
    public static int CURLPROTO_ALL() {
        return (int)-1L;
    }
    public static int CURLOPTTYPE_STRINGPOINT() {
        return (int)10000L;
    }
    public static int CURLOPTTYPE_SLISTPOINT() {
        return (int)10000L;
    }
    public static int CURLOPTTYPE_CBPOINT() {
        return (int)10000L;
    }
    public static int CURLOPTTYPE_VALUES() {
        return (int)0L;
    }
    public static int CURLOPT_PROGRESSDATA() {
        return (int)10057L;
    }
    public static int CURLOPT_POST301() {
        return (int)161L;
    }
    public static int CURLOPT_SSLKEYPASSWD() {
        return (int)10026L;
    }
    public static int CURLOPT_FTPAPPEND() {
        return (int)50L;
    }
    public static int CURLOPT_FTPLISTONLY() {
        return (int)48L;
    }
    public static int CURLOPT_FTP_SSL() {
        return (int)119L;
    }
    public static int CURLOPT_SSLCERTPASSWD() {
        return (int)10026L;
    }
    public static int CURLOPT_KRB4LEVEL() {
        return (int)10063L;
    }
    public static int CURLOPT_FTP_RESPONSE_TIMEOUT() {
        return (int)112L;
    }
    public static int CURLOPT_RTSPHEADER() {
        return (int)10023L;
    }
    public static int CURL_HTTP_VERSION_2() {
        return (int)3L;
    }
    public static int CURL_REDIR_POST_ALL() {
        return (int)7L;
    }
    public static long CURL_ZERO_TERMINATED() {
        return -1L;
    }
    public static int CURLMIMEOPT_FORMESCAPE() {
        return (int)1L;
    }
    public static int CURLINFO_HTTP_CODE() {
        return (int)2097154L;
    }
    public static int CURL_GLOBAL_SSL() {
        return (int)1L;
    }
    public static int CURL_GLOBAL_WIN32() {
        return (int)2L;
    }
    public static int CURL_GLOBAL_ALL() {
        return (int)3L;
    }
    public static int CURL_GLOBAL_DEFAULT() {
        return (int)3L;
    }
    public static int CURL_GLOBAL_ACK_EINTR() {
        return (int)4L;
    }
    public static int CURLVERSION_NOW() {
        return (int)9L;
    }
    public static int CURL_VERSION_IPV6() {
        return (int)1L;
    }
    public static int CURL_VERSION_KERBEROS4() {
        return (int)2L;
    }
    public static int CURL_VERSION_SSL() {
        return (int)4L;
    }
    public static int CURL_VERSION_LIBZ() {
        return (int)8L;
    }
    public static int CURL_VERSION_NTLM() {
        return (int)16L;
    }
    public static int CURL_VERSION_GSSNEGOTIATE() {
        return (int)32L;
    }
    public static int CURL_VERSION_DEBUG() {
        return (int)64L;
    }
    public static int CURL_VERSION_ASYNCHDNS() {
        return (int)128L;
    }
    public static int CURL_VERSION_SPNEGO() {
        return (int)256L;
    }
    public static int CURL_VERSION_LARGEFILE() {
        return (int)512L;
    }
    public static int CURL_VERSION_IDN() {
        return (int)1024L;
    }
    public static int CURL_VERSION_SSPI() {
        return (int)2048L;
    }
    public static int CURL_VERSION_CONV() {
        return (int)4096L;
    }
    public static int CURL_VERSION_CURLDEBUG() {
        return (int)8192L;
    }
    public static int CURL_VERSION_TLSAUTH_SRP() {
        return (int)16384L;
    }
    public static int CURL_VERSION_NTLM_WB() {
        return (int)32768L;
    }
    public static int CURL_VERSION_HTTP2() {
        return (int)65536L;
    }
    public static int CURL_VERSION_GSSAPI() {
        return (int)131072L;
    }
    public static int CURL_VERSION_KERBEROS5() {
        return (int)262144L;
    }
    public static int CURL_VERSION_UNIX_SOCKETS() {
        return (int)524288L;
    }
    public static int CURL_VERSION_PSL() {
        return (int)1048576L;
    }
    public static int CURL_VERSION_HTTPS_PROXY() {
        return (int)2097152L;
    }
    public static int CURL_VERSION_MULTI_SSL() {
        return (int)4194304L;
    }
    public static int CURL_VERSION_BROTLI() {
        return (int)8388608L;
    }
    public static int CURL_VERSION_ALTSVC() {
        return (int)16777216L;
    }
    public static int CURL_VERSION_HTTP3() {
        return (int)33554432L;
    }
    public static int CURL_VERSION_ZSTD() {
        return (int)67108864L;
    }
    public static int CURL_VERSION_UNICODE() {
        return (int)134217728L;
    }
    public static int CURL_VERSION_HSTS() {
        return (int)268435456L;
    }
    public static int CURL_VERSION_GSASL() {
        return (int)536870912L;
    }
    public static int CURL_VERSION_THREADSAFE() {
        return (int)1073741824L;
    }
    public static int CURLPAUSE_RECV() {
        return (int)1L;
    }
    public static int CURLPAUSE_RECV_CONT() {
        return (int)0L;
    }
    public static int CURLPAUSE_SEND() {
        return (int)4L;
    }
    public static int CURLPAUSE_SEND_CONT() {
        return (int)0L;
    }
    public static int CURLPAUSE_ALL() {
        return (int)5L;
    }
}


