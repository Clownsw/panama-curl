// Generated by jextract

package cn.smilex;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
 class curl_h_25 extends curl_h_24 {

    public static int PI_NOMIMEHANDLER() {
        return (int)32768L;
    }
    public static int PI_LOADAPPDIRECT() {
        return (int)16384L;
    }
    public static int PD_FORCE_SWITCH() {
        return (int)65536L;
    }
    public static int PI_PREFERDEFAULTHANDLER() {
        return (int)131072L;
    }
    public static MemorySegment IID_IInternetProtocolRoot$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1216.IID_IInternetProtocolRoot$SEGMENT,"IID_IInternetProtocolRoot");
    }
    public static MemoryLayout __MIDL_itf_urlmon_0000_0029_v0_0_c_ifspec$LAYOUT() {
        return constants$1216.__MIDL_itf_urlmon_0000_0029_v0_0_c_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_urlmon_0000_0029_v0_0_c_ifspec$VH() {
        return constants$1216.__MIDL_itf_urlmon_0000_0029_v0_0_c_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_urlmon_0000_0029_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1216.__MIDL_itf_urlmon_0000_0029_v0_0_c_ifspec$SEGMENT,"__MIDL_itf_urlmon_0000_0029_v0_0_c_ifspec");
    }
    public static MemoryAddress __MIDL_itf_urlmon_0000_0029_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1216.__MIDL_itf_urlmon_0000_0029_v0_0_c_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1216.__MIDL_itf_urlmon_0000_0029_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0029_v0_0_c_ifspec"));
    }
    public static void __MIDL_itf_urlmon_0000_0029_v0_0_c_ifspec$set( MemoryAddress x) {
        constants$1216.__MIDL_itf_urlmon_0000_0029_v0_0_c_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1216.__MIDL_itf_urlmon_0000_0029_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0029_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_urlmon_0000_0029_v0_0_s_ifspec$LAYOUT() {
        return constants$1216.__MIDL_itf_urlmon_0000_0029_v0_0_s_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_urlmon_0000_0029_v0_0_s_ifspec$VH() {
        return constants$1216.__MIDL_itf_urlmon_0000_0029_v0_0_s_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_urlmon_0000_0029_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1216.__MIDL_itf_urlmon_0000_0029_v0_0_s_ifspec$SEGMENT,"__MIDL_itf_urlmon_0000_0029_v0_0_s_ifspec");
    }
    public static MemoryAddress __MIDL_itf_urlmon_0000_0029_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1216.__MIDL_itf_urlmon_0000_0029_v0_0_s_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1216.__MIDL_itf_urlmon_0000_0029_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0029_v0_0_s_ifspec"));
    }
    public static void __MIDL_itf_urlmon_0000_0029_v0_0_s_ifspec$set( MemoryAddress x) {
        constants$1216.__MIDL_itf_urlmon_0000_0029_v0_0_s_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1216.__MIDL_itf_urlmon_0000_0029_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0029_v0_0_s_ifspec"), x);
    }
    public static OfAddress LPIINTERNETPROTOCOL = Constants$root.C_POINTER$LAYOUT;
    public static MemorySegment IID_IInternetProtocol$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1217.IID_IInternetProtocol$SEGMENT,"IID_IInternetProtocol");
    }
    public static MemoryLayout __MIDL_itf_urlmon_0000_0030_v0_0_c_ifspec$LAYOUT() {
        return constants$1217.__MIDL_itf_urlmon_0000_0030_v0_0_c_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_urlmon_0000_0030_v0_0_c_ifspec$VH() {
        return constants$1217.__MIDL_itf_urlmon_0000_0030_v0_0_c_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_urlmon_0000_0030_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1217.__MIDL_itf_urlmon_0000_0030_v0_0_c_ifspec$SEGMENT,"__MIDL_itf_urlmon_0000_0030_v0_0_c_ifspec");
    }
    public static MemoryAddress __MIDL_itf_urlmon_0000_0030_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1217.__MIDL_itf_urlmon_0000_0030_v0_0_c_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1217.__MIDL_itf_urlmon_0000_0030_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0030_v0_0_c_ifspec"));
    }
    public static void __MIDL_itf_urlmon_0000_0030_v0_0_c_ifspec$set( MemoryAddress x) {
        constants$1217.__MIDL_itf_urlmon_0000_0030_v0_0_c_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1217.__MIDL_itf_urlmon_0000_0030_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0030_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_urlmon_0000_0030_v0_0_s_ifspec$LAYOUT() {
        return constants$1217.__MIDL_itf_urlmon_0000_0030_v0_0_s_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_urlmon_0000_0030_v0_0_s_ifspec$VH() {
        return constants$1217.__MIDL_itf_urlmon_0000_0030_v0_0_s_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_urlmon_0000_0030_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1217.__MIDL_itf_urlmon_0000_0030_v0_0_s_ifspec$SEGMENT,"__MIDL_itf_urlmon_0000_0030_v0_0_s_ifspec");
    }
    public static MemoryAddress __MIDL_itf_urlmon_0000_0030_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1217.__MIDL_itf_urlmon_0000_0030_v0_0_s_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1217.__MIDL_itf_urlmon_0000_0030_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0030_v0_0_s_ifspec"));
    }
    public static void __MIDL_itf_urlmon_0000_0030_v0_0_s_ifspec$set( MemoryAddress x) {
        constants$1217.__MIDL_itf_urlmon_0000_0030_v0_0_s_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1217.__MIDL_itf_urlmon_0000_0030_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0030_v0_0_s_ifspec"), x);
    }
    public static MemorySegment IID_IInternetProtocolEx$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1217.IID_IInternetProtocolEx$SEGMENT,"IID_IInternetProtocolEx");
    }
    public static MemoryLayout __MIDL_itf_urlmon_0000_0031_v0_0_c_ifspec$LAYOUT() {
        return constants$1217.__MIDL_itf_urlmon_0000_0031_v0_0_c_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_urlmon_0000_0031_v0_0_c_ifspec$VH() {
        return constants$1217.__MIDL_itf_urlmon_0000_0031_v0_0_c_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_urlmon_0000_0031_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1217.__MIDL_itf_urlmon_0000_0031_v0_0_c_ifspec$SEGMENT,"__MIDL_itf_urlmon_0000_0031_v0_0_c_ifspec");
    }
    public static MemoryAddress __MIDL_itf_urlmon_0000_0031_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1217.__MIDL_itf_urlmon_0000_0031_v0_0_c_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1217.__MIDL_itf_urlmon_0000_0031_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0031_v0_0_c_ifspec"));
    }
    public static void __MIDL_itf_urlmon_0000_0031_v0_0_c_ifspec$set( MemoryAddress x) {
        constants$1217.__MIDL_itf_urlmon_0000_0031_v0_0_c_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1217.__MIDL_itf_urlmon_0000_0031_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0031_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_urlmon_0000_0031_v0_0_s_ifspec$LAYOUT() {
        return constants$1217.__MIDL_itf_urlmon_0000_0031_v0_0_s_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_urlmon_0000_0031_v0_0_s_ifspec$VH() {
        return constants$1217.__MIDL_itf_urlmon_0000_0031_v0_0_s_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_urlmon_0000_0031_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1217.__MIDL_itf_urlmon_0000_0031_v0_0_s_ifspec$SEGMENT,"__MIDL_itf_urlmon_0000_0031_v0_0_s_ifspec");
    }
    public static MemoryAddress __MIDL_itf_urlmon_0000_0031_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1217.__MIDL_itf_urlmon_0000_0031_v0_0_s_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1217.__MIDL_itf_urlmon_0000_0031_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0031_v0_0_s_ifspec"));
    }
    public static void __MIDL_itf_urlmon_0000_0031_v0_0_s_ifspec$set( MemoryAddress x) {
        constants$1217.__MIDL_itf_urlmon_0000_0031_v0_0_s_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1217.__MIDL_itf_urlmon_0000_0031_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0031_v0_0_s_ifspec"), x);
    }
    public static OfAddress LPIINTERNETPROTOCOLSINK = Constants$root.C_POINTER$LAYOUT;
    public static MemorySegment IID_IInternetProtocolSink$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1218.IID_IInternetProtocolSink$SEGMENT,"IID_IInternetProtocolSink");
    }
    public static MemoryLayout __MIDL_itf_urlmon_0000_0032_v0_0_c_ifspec$LAYOUT() {
        return constants$1218.__MIDL_itf_urlmon_0000_0032_v0_0_c_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_urlmon_0000_0032_v0_0_c_ifspec$VH() {
        return constants$1218.__MIDL_itf_urlmon_0000_0032_v0_0_c_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_urlmon_0000_0032_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1218.__MIDL_itf_urlmon_0000_0032_v0_0_c_ifspec$SEGMENT,"__MIDL_itf_urlmon_0000_0032_v0_0_c_ifspec");
    }
    public static MemoryAddress __MIDL_itf_urlmon_0000_0032_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1218.__MIDL_itf_urlmon_0000_0032_v0_0_c_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1218.__MIDL_itf_urlmon_0000_0032_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0032_v0_0_c_ifspec"));
    }
    public static void __MIDL_itf_urlmon_0000_0032_v0_0_c_ifspec$set( MemoryAddress x) {
        constants$1218.__MIDL_itf_urlmon_0000_0032_v0_0_c_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1218.__MIDL_itf_urlmon_0000_0032_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0032_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_urlmon_0000_0032_v0_0_s_ifspec$LAYOUT() {
        return constants$1218.__MIDL_itf_urlmon_0000_0032_v0_0_s_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_urlmon_0000_0032_v0_0_s_ifspec$VH() {
        return constants$1218.__MIDL_itf_urlmon_0000_0032_v0_0_s_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_urlmon_0000_0032_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1218.__MIDL_itf_urlmon_0000_0032_v0_0_s_ifspec$SEGMENT,"__MIDL_itf_urlmon_0000_0032_v0_0_s_ifspec");
    }
    public static MemoryAddress __MIDL_itf_urlmon_0000_0032_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1218.__MIDL_itf_urlmon_0000_0032_v0_0_s_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1218.__MIDL_itf_urlmon_0000_0032_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0032_v0_0_s_ifspec"));
    }
    public static void __MIDL_itf_urlmon_0000_0032_v0_0_s_ifspec$set( MemoryAddress x) {
        constants$1218.__MIDL_itf_urlmon_0000_0032_v0_0_s_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1218.__MIDL_itf_urlmon_0000_0032_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0032_v0_0_s_ifspec"), x);
    }
    public static OfAddress LPIINTERNETPROTOCOLSINKStackable = Constants$root.C_POINTER$LAYOUT;
    public static MemorySegment IID_IInternetProtocolSinkStackable$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1218.IID_IInternetProtocolSinkStackable$SEGMENT,"IID_IInternetProtocolSinkStackable");
    }
    public static MemoryLayout __MIDL_itf_urlmon_0000_0033_v0_0_c_ifspec$LAYOUT() {
        return constants$1218.__MIDL_itf_urlmon_0000_0033_v0_0_c_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_urlmon_0000_0033_v0_0_c_ifspec$VH() {
        return constants$1218.__MIDL_itf_urlmon_0000_0033_v0_0_c_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_urlmon_0000_0033_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1218.__MIDL_itf_urlmon_0000_0033_v0_0_c_ifspec$SEGMENT,"__MIDL_itf_urlmon_0000_0033_v0_0_c_ifspec");
    }
    public static MemoryAddress __MIDL_itf_urlmon_0000_0033_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1218.__MIDL_itf_urlmon_0000_0033_v0_0_c_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1218.__MIDL_itf_urlmon_0000_0033_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0033_v0_0_c_ifspec"));
    }
    public static void __MIDL_itf_urlmon_0000_0033_v0_0_c_ifspec$set( MemoryAddress x) {
        constants$1218.__MIDL_itf_urlmon_0000_0033_v0_0_c_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1218.__MIDL_itf_urlmon_0000_0033_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0033_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_urlmon_0000_0033_v0_0_s_ifspec$LAYOUT() {
        return constants$1218.__MIDL_itf_urlmon_0000_0033_v0_0_s_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_urlmon_0000_0033_v0_0_s_ifspec$VH() {
        return constants$1218.__MIDL_itf_urlmon_0000_0033_v0_0_s_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_urlmon_0000_0033_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1218.__MIDL_itf_urlmon_0000_0033_v0_0_s_ifspec$SEGMENT,"__MIDL_itf_urlmon_0000_0033_v0_0_s_ifspec");
    }
    public static MemoryAddress __MIDL_itf_urlmon_0000_0033_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1218.__MIDL_itf_urlmon_0000_0033_v0_0_s_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1218.__MIDL_itf_urlmon_0000_0033_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0033_v0_0_s_ifspec"));
    }
    public static void __MIDL_itf_urlmon_0000_0033_v0_0_s_ifspec$set( MemoryAddress x) {
        constants$1218.__MIDL_itf_urlmon_0000_0033_v0_0_s_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1218.__MIDL_itf_urlmon_0000_0033_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0033_v0_0_s_ifspec"), x);
    }
    public static OfAddress LPIINTERNETSESSION = Constants$root.C_POINTER$LAYOUT;
    public static int OIBDG_APARTMENTTHREADED() {
        return (int)256L;
    }
    public static int OIBDG_DATAONLY() {
        return (int)4096L;
    }
    public static MemorySegment IID_IInternetSession$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1219.IID_IInternetSession$SEGMENT,"IID_IInternetSession");
    }
    public static MemoryLayout __MIDL_itf_urlmon_0000_0034_v0_0_c_ifspec$LAYOUT() {
        return constants$1219.__MIDL_itf_urlmon_0000_0034_v0_0_c_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_urlmon_0000_0034_v0_0_c_ifspec$VH() {
        return constants$1219.__MIDL_itf_urlmon_0000_0034_v0_0_c_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_urlmon_0000_0034_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1219.__MIDL_itf_urlmon_0000_0034_v0_0_c_ifspec$SEGMENT,"__MIDL_itf_urlmon_0000_0034_v0_0_c_ifspec");
    }
    public static MemoryAddress __MIDL_itf_urlmon_0000_0034_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1219.__MIDL_itf_urlmon_0000_0034_v0_0_c_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1219.__MIDL_itf_urlmon_0000_0034_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0034_v0_0_c_ifspec"));
    }
    public static void __MIDL_itf_urlmon_0000_0034_v0_0_c_ifspec$set( MemoryAddress x) {
        constants$1219.__MIDL_itf_urlmon_0000_0034_v0_0_c_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1219.__MIDL_itf_urlmon_0000_0034_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0034_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_urlmon_0000_0034_v0_0_s_ifspec$LAYOUT() {
        return constants$1219.__MIDL_itf_urlmon_0000_0034_v0_0_s_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_urlmon_0000_0034_v0_0_s_ifspec$VH() {
        return constants$1219.__MIDL_itf_urlmon_0000_0034_v0_0_s_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_urlmon_0000_0034_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1219.__MIDL_itf_urlmon_0000_0034_v0_0_s_ifspec$SEGMENT,"__MIDL_itf_urlmon_0000_0034_v0_0_s_ifspec");
    }
    public static MemoryAddress __MIDL_itf_urlmon_0000_0034_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1219.__MIDL_itf_urlmon_0000_0034_v0_0_s_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1219.__MIDL_itf_urlmon_0000_0034_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0034_v0_0_s_ifspec"));
    }
    public static void __MIDL_itf_urlmon_0000_0034_v0_0_s_ifspec$set( MemoryAddress x) {
        constants$1219.__MIDL_itf_urlmon_0000_0034_v0_0_s_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1219.__MIDL_itf_urlmon_0000_0034_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0034_v0_0_s_ifspec"), x);
    }
    public static OfAddress LPIINTERNETTHREADSWITCH = Constants$root.C_POINTER$LAYOUT;
    public static MemorySegment IID_IInternetThreadSwitch$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1219.IID_IInternetThreadSwitch$SEGMENT,"IID_IInternetThreadSwitch");
    }
    public static MemoryLayout __MIDL_itf_urlmon_0000_0035_v0_0_c_ifspec$LAYOUT() {
        return constants$1219.__MIDL_itf_urlmon_0000_0035_v0_0_c_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_urlmon_0000_0035_v0_0_c_ifspec$VH() {
        return constants$1219.__MIDL_itf_urlmon_0000_0035_v0_0_c_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_urlmon_0000_0035_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1219.__MIDL_itf_urlmon_0000_0035_v0_0_c_ifspec$SEGMENT,"__MIDL_itf_urlmon_0000_0035_v0_0_c_ifspec");
    }
    public static MemoryAddress __MIDL_itf_urlmon_0000_0035_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1219.__MIDL_itf_urlmon_0000_0035_v0_0_c_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1219.__MIDL_itf_urlmon_0000_0035_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0035_v0_0_c_ifspec"));
    }
    public static void __MIDL_itf_urlmon_0000_0035_v0_0_c_ifspec$set( MemoryAddress x) {
        constants$1219.__MIDL_itf_urlmon_0000_0035_v0_0_c_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1219.__MIDL_itf_urlmon_0000_0035_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0035_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_urlmon_0000_0035_v0_0_s_ifspec$LAYOUT() {
        return constants$1219.__MIDL_itf_urlmon_0000_0035_v0_0_s_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_urlmon_0000_0035_v0_0_s_ifspec$VH() {
        return constants$1219.__MIDL_itf_urlmon_0000_0035_v0_0_s_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_urlmon_0000_0035_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1219.__MIDL_itf_urlmon_0000_0035_v0_0_s_ifspec$SEGMENT,"__MIDL_itf_urlmon_0000_0035_v0_0_s_ifspec");
    }
    public static MemoryAddress __MIDL_itf_urlmon_0000_0035_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1219.__MIDL_itf_urlmon_0000_0035_v0_0_s_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1219.__MIDL_itf_urlmon_0000_0035_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0035_v0_0_s_ifspec"));
    }
    public static void __MIDL_itf_urlmon_0000_0035_v0_0_s_ifspec$set( MemoryAddress x) {
        constants$1219.__MIDL_itf_urlmon_0000_0035_v0_0_s_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1219.__MIDL_itf_urlmon_0000_0035_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0035_v0_0_s_ifspec"), x);
    }
    public static OfAddress LPIINTERNETPRIORITY = Constants$root.C_POINTER$LAYOUT;
    public static MemorySegment IID_IInternetPriority$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1220.IID_IInternetPriority$SEGMENT,"IID_IInternetPriority");
    }
    public static MemoryLayout __MIDL_itf_urlmon_0000_0036_v0_0_c_ifspec$LAYOUT() {
        return constants$1220.__MIDL_itf_urlmon_0000_0036_v0_0_c_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_urlmon_0000_0036_v0_0_c_ifspec$VH() {
        return constants$1220.__MIDL_itf_urlmon_0000_0036_v0_0_c_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_urlmon_0000_0036_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1220.__MIDL_itf_urlmon_0000_0036_v0_0_c_ifspec$SEGMENT,"__MIDL_itf_urlmon_0000_0036_v0_0_c_ifspec");
    }
    public static MemoryAddress __MIDL_itf_urlmon_0000_0036_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1220.__MIDL_itf_urlmon_0000_0036_v0_0_c_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1220.__MIDL_itf_urlmon_0000_0036_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0036_v0_0_c_ifspec"));
    }
    public static void __MIDL_itf_urlmon_0000_0036_v0_0_c_ifspec$set( MemoryAddress x) {
        constants$1220.__MIDL_itf_urlmon_0000_0036_v0_0_c_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1220.__MIDL_itf_urlmon_0000_0036_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0036_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_urlmon_0000_0036_v0_0_s_ifspec$LAYOUT() {
        return constants$1220.__MIDL_itf_urlmon_0000_0036_v0_0_s_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_urlmon_0000_0036_v0_0_s_ifspec$VH() {
        return constants$1220.__MIDL_itf_urlmon_0000_0036_v0_0_s_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_urlmon_0000_0036_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1220.__MIDL_itf_urlmon_0000_0036_v0_0_s_ifspec$SEGMENT,"__MIDL_itf_urlmon_0000_0036_v0_0_s_ifspec");
    }
    public static MemoryAddress __MIDL_itf_urlmon_0000_0036_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1220.__MIDL_itf_urlmon_0000_0036_v0_0_s_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1220.__MIDL_itf_urlmon_0000_0036_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0036_v0_0_s_ifspec"));
    }
    public static void __MIDL_itf_urlmon_0000_0036_v0_0_s_ifspec$set( MemoryAddress x) {
        constants$1220.__MIDL_itf_urlmon_0000_0036_v0_0_s_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1220.__MIDL_itf_urlmon_0000_0036_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0036_v0_0_s_ifspec"), x);
    }
    public static OfAddress LPIINTERNETPROTOCOLINFO = Constants$root.C_POINTER$LAYOUT;
    public static int PARSE_CANONICALIZE() {
        return (int)1L;
    }
    public static int PARSE_FRIENDLY() {
        return (int)2L;
    }
    public static int PARSE_SECURITY_URL() {
        return (int)3L;
    }
    public static int PARSE_ROOTDOCUMENT() {
        return (int)4L;
    }
    public static int PARSE_DOCUMENT() {
        return (int)5L;
    }
    public static int PARSE_ANCHOR() {
        return (int)6L;
    }
    public static int PARSE_ENCODE_IS_UNESCAPE() {
        return (int)7L;
    }
    public static int PARSE_DECODE_IS_ESCAPE() {
        return (int)8L;
    }
    public static int PARSE_PATH_FROM_URL() {
        return (int)9L;
    }
    public static int PARSE_URL_FROM_PATH() {
        return (int)10L;
    }
    public static int PARSE_MIME() {
        return (int)11L;
    }
    public static int PARSE_SERVER() {
        return (int)12L;
    }
    public static int PARSE_SCHEMA() {
        return (int)13L;
    }
    public static int PARSE_SITE() {
        return (int)14L;
    }
    public static int PARSE_DOMAIN() {
        return (int)15L;
    }
    public static int PARSE_LOCATION() {
        return (int)16L;
    }
    public static int PARSE_SECURITY_DOMAIN() {
        return (int)17L;
    }
    public static int PARSE_ESCAPE() {
        return (int)18L;
    }
    public static int PARSE_UNESCAPE() {
        return (int)19L;
    }
    public static int PSU_DEFAULT() {
        return (int)1L;
    }
    public static int PSU_SECURITY_URL_ONLY() {
        return (int)2L;
    }
    public static int QUERY_EXPIRATION_DATE() {
        return (int)1L;
    }
    public static int QUERY_TIME_OF_LAST_CHANGE() {
        return (int)2L;
    }
    public static int QUERY_CONTENT_ENCODING() {
        return (int)3L;
    }
    public static int QUERY_CONTENT_TYPE() {
        return (int)4L;
    }
    public static int QUERY_REFRESH() {
        return (int)5L;
    }
    public static int QUERY_RECOMBINE() {
        return (int)6L;
    }
    public static int QUERY_CAN_NAVIGATE() {
        return (int)7L;
    }
    public static int QUERY_USES_NETWORK() {
        return (int)8L;
    }
    public static int QUERY_IS_CACHED() {
        return (int)9L;
    }
    public static int QUERY_IS_INSTALLEDENTRY() {
        return (int)10L;
    }
    public static int QUERY_IS_CACHED_OR_MAPPED() {
        return (int)11L;
    }
    public static int QUERY_USES_CACHE() {
        return (int)12L;
    }
    public static int QUERY_IS_SECURE() {
        return (int)13L;
    }
    public static int QUERY_IS_SAFE() {
        return (int)14L;
    }
    public static int QUERY_USES_HISTORYFOLDER() {
        return (int)15L;
    }
    public static int QUERY_IS_CACHED_AND_USABLE_OFFLINE() {
        return (int)16L;
    }
    public static MemorySegment IID_IInternetProtocolInfo$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1220.IID_IInternetProtocolInfo$SEGMENT,"IID_IInternetProtocolInfo");
    }
    public static MethodHandle CoInternetParseUrl$MH() {
        return RuntimeHelper.requireNonNull(constants$1220.CoInternetParseUrl$MH,"CoInternetParseUrl");
    }
    public static int CoInternetParseUrl ( Addressable pwzUrl,  int ParseAction,  int dwFlags,  Addressable pszResult,  int cchResult,  Addressable pcchResult,  int dwReserved) {
        var mh$ = CoInternetParseUrl$MH();
        try {
            return (int)mh$.invokeExact(pwzUrl, ParseAction, dwFlags, pszResult, cchResult, pcchResult, dwReserved);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoInternetParseIUri$MH() {
        return RuntimeHelper.requireNonNull(constants$1220.CoInternetParseIUri$MH,"CoInternetParseIUri");
    }
    public static int CoInternetParseIUri ( Addressable pIUri,  int ParseAction,  int dwFlags,  Addressable pwzResult,  int cchResult,  Addressable pcchResult,  long dwReserved) {
        var mh$ = CoInternetParseIUri$MH();
        try {
            return (int)mh$.invokeExact(pIUri, ParseAction, dwFlags, pwzResult, cchResult, pcchResult, dwReserved);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoInternetCombineUrl$MH() {
        return RuntimeHelper.requireNonNull(constants$1221.CoInternetCombineUrl$MH,"CoInternetCombineUrl");
    }
    public static int CoInternetCombineUrl ( Addressable pwzBaseUrl,  Addressable pwzRelativeUrl,  int dwCombineFlags,  Addressable pszResult,  int cchResult,  Addressable pcchResult,  int dwReserved) {
        var mh$ = CoInternetCombineUrl$MH();
        try {
            return (int)mh$.invokeExact(pwzBaseUrl, pwzRelativeUrl, dwCombineFlags, pszResult, cchResult, pcchResult, dwReserved);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoInternetCombineUrlEx$MH() {
        return RuntimeHelper.requireNonNull(constants$1221.CoInternetCombineUrlEx$MH,"CoInternetCombineUrlEx");
    }
    public static int CoInternetCombineUrlEx ( Addressable pBaseUri,  Addressable pwzRelativeUrl,  int dwCombineFlags,  Addressable ppCombinedUri,  long dwReserved) {
        var mh$ = CoInternetCombineUrlEx$MH();
        try {
            return (int)mh$.invokeExact(pBaseUri, pwzRelativeUrl, dwCombineFlags, ppCombinedUri, dwReserved);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoInternetCombineIUri$MH() {
        return RuntimeHelper.requireNonNull(constants$1221.CoInternetCombineIUri$MH,"CoInternetCombineIUri");
    }
    public static int CoInternetCombineIUri ( Addressable pBaseUri,  Addressable pRelativeUri,  int dwCombineFlags,  Addressable ppCombinedUri,  long dwReserved) {
        var mh$ = CoInternetCombineIUri$MH();
        try {
            return (int)mh$.invokeExact(pBaseUri, pRelativeUri, dwCombineFlags, ppCombinedUri, dwReserved);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoInternetCompareUrl$MH() {
        return RuntimeHelper.requireNonNull(constants$1221.CoInternetCompareUrl$MH,"CoInternetCompareUrl");
    }
    public static int CoInternetCompareUrl ( Addressable pwzUrl1,  Addressable pwzUrl2,  int dwFlags) {
        var mh$ = CoInternetCompareUrl$MH();
        try {
            return (int)mh$.invokeExact(pwzUrl1, pwzUrl2, dwFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoInternetGetProtocolFlags$MH() {
        return RuntimeHelper.requireNonNull(constants$1221.CoInternetGetProtocolFlags$MH,"CoInternetGetProtocolFlags");
    }
    public static int CoInternetGetProtocolFlags ( Addressable pwzUrl,  Addressable pdwFlags,  int dwReserved) {
        var mh$ = CoInternetGetProtocolFlags$MH();
        try {
            return (int)mh$.invokeExact(pwzUrl, pdwFlags, dwReserved);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoInternetQueryInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$1221.CoInternetQueryInfo$MH,"CoInternetQueryInfo");
    }
    public static int CoInternetQueryInfo ( Addressable pwzUrl,  int QueryOptions,  int dwQueryFlags,  Addressable pvBuffer,  int cbBuffer,  Addressable pcbBuffer,  int dwReserved) {
        var mh$ = CoInternetQueryInfo$MH();
        try {
            return (int)mh$.invokeExact(pwzUrl, QueryOptions, dwQueryFlags, pvBuffer, cbBuffer, pcbBuffer, dwReserved);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoInternetGetSession$MH() {
        return RuntimeHelper.requireNonNull(constants$1222.CoInternetGetSession$MH,"CoInternetGetSession");
    }
    public static int CoInternetGetSession ( int dwSessionMode,  Addressable ppIInternetSession,  int dwReserved) {
        var mh$ = CoInternetGetSession$MH();
        try {
            return (int)mh$.invokeExact(dwSessionMode, ppIInternetSession, dwReserved);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoInternetGetSecurityUrl$MH() {
        return RuntimeHelper.requireNonNull(constants$1222.CoInternetGetSecurityUrl$MH,"CoInternetGetSecurityUrl");
    }
    public static int CoInternetGetSecurityUrl ( Addressable pwszUrl,  Addressable ppwszSecUrl,  int psuAction,  int dwReserved) {
        var mh$ = CoInternetGetSecurityUrl$MH();
        try {
            return (int)mh$.invokeExact(pwszUrl, ppwszSecUrl, psuAction, dwReserved);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AsyncInstallDistributionUnit$MH() {
        return RuntimeHelper.requireNonNull(constants$1222.AsyncInstallDistributionUnit$MH,"AsyncInstallDistributionUnit");
    }
    public static int AsyncInstallDistributionUnit ( Addressable szDistUnit,  Addressable szTYPE,  Addressable szExt,  int dwFileVersionMS,  int dwFileVersionLS,  Addressable szURL,  Addressable pbc,  Addressable pvReserved,  int flags) {
        var mh$ = AsyncInstallDistributionUnit$MH();
        try {
            return (int)mh$.invokeExact(szDistUnit, szTYPE, szExt, dwFileVersionMS, dwFileVersionLS, szURL, pbc, pvReserved, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoInternetGetSecurityUrlEx$MH() {
        return RuntimeHelper.requireNonNull(constants$1222.CoInternetGetSecurityUrlEx$MH,"CoInternetGetSecurityUrlEx");
    }
    public static int CoInternetGetSecurityUrlEx ( Addressable pUri,  Addressable ppSecUri,  int psuAction,  long dwReserved) {
        var mh$ = CoInternetGetSecurityUrlEx$MH();
        try {
            return (int)mh$.invokeExact(pUri, ppSecUri, psuAction, dwReserved);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int FEATURE_OBJECT_CACHING() {
        return (int)0L;
    }
    public static int FEATURE_ZONE_ELEVATION() {
        return (int)1L;
    }
    public static int FEATURE_MIME_HANDLING() {
        return (int)2L;
    }
    public static int FEATURE_MIME_SNIFFING() {
        return (int)3L;
    }
    public static int FEATURE_WINDOW_RESTRICTIONS() {
        return (int)4L;
    }
    public static int FEATURE_WEBOC_POPUPMANAGEMENT() {
        return (int)5L;
    }
    public static int FEATURE_BEHAVIORS() {
        return (int)6L;
    }
    public static int FEATURE_DISABLE_MK_PROTOCOL() {
        return (int)7L;
    }
    public static int FEATURE_LOCALMACHINE_LOCKDOWN() {
        return (int)8L;
    }
    public static int FEATURE_SECURITYBAND() {
        return (int)9L;
    }
    public static int FEATURE_RESTRICT_ACTIVEXINSTALL() {
        return (int)10L;
    }
    public static int FEATURE_VALIDATE_NAVIGATE_URL() {
        return (int)11L;
    }
    public static int FEATURE_RESTRICT_FILEDOWNLOAD() {
        return (int)12L;
    }
    public static int FEATURE_ADDON_MANAGEMENT() {
        return (int)13L;
    }
    public static int FEATURE_PROTOCOL_LOCKDOWN() {
        return (int)14L;
    }
    public static int FEATURE_HTTP_USERNAME_PASSWORD_DISABLE() {
        return (int)15L;
    }
    public static int FEATURE_SAFE_BINDTOOBJECT() {
        return (int)16L;
    }
    public static int FEATURE_UNC_SAVEDFILECHECK() {
        return (int)17L;
    }
    public static int FEATURE_GET_URL_DOM_FILEPATH_UNENCODED() {
        return (int)18L;
    }
    public static int FEATURE_TABBED_BROWSING() {
        return (int)19L;
    }
    public static int FEATURE_SSLUX() {
        return (int)20L;
    }
    public static int FEATURE_DISABLE_NAVIGATION_SOUNDS() {
        return (int)21L;
    }
    public static int FEATURE_DISABLE_LEGACY_COMPRESSION() {
        return (int)22L;
    }
    public static int FEATURE_FORCE_ADDR_AND_STATUS() {
        return (int)23L;
    }
    public static int FEATURE_XMLHTTP() {
        return (int)24L;
    }
    public static int FEATURE_DISABLE_TELNET_PROTOCOL() {
        return (int)25L;
    }
    public static int FEATURE_FEEDS() {
        return (int)26L;
    }
    public static int FEATURE_BLOCK_INPUT_PROMPTS() {
        return (int)27L;
    }
    public static int FEATURE_ENTRY_COUNT() {
        return (int)28L;
    }
    public static MethodHandle CoInternetSetFeatureEnabled$MH() {
        return RuntimeHelper.requireNonNull(constants$1222.CoInternetSetFeatureEnabled$MH,"CoInternetSetFeatureEnabled");
    }
    public static int CoInternetSetFeatureEnabled ( int FeatureEntry,  int dwFlags,  int fEnable) {
        var mh$ = CoInternetSetFeatureEnabled$MH();
        try {
            return (int)mh$.invokeExact(FeatureEntry, dwFlags, fEnable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoInternetIsFeatureEnabled$MH() {
        return RuntimeHelper.requireNonNull(constants$1222.CoInternetIsFeatureEnabled$MH,"CoInternetIsFeatureEnabled");
    }
    public static int CoInternetIsFeatureEnabled ( int FeatureEntry,  int dwFlags) {
        var mh$ = CoInternetIsFeatureEnabled$MH();
        try {
            return (int)mh$.invokeExact(FeatureEntry, dwFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoInternetIsFeatureEnabledForUrl$MH() {
        return RuntimeHelper.requireNonNull(constants$1223.CoInternetIsFeatureEnabledForUrl$MH,"CoInternetIsFeatureEnabledForUrl");
    }
    public static int CoInternetIsFeatureEnabledForUrl ( int FeatureEntry,  int dwFlags,  Addressable szURL,  Addressable pSecMgr) {
        var mh$ = CoInternetIsFeatureEnabledForUrl$MH();
        try {
            return (int)mh$.invokeExact(FeatureEntry, dwFlags, szURL, pSecMgr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoInternetIsFeatureEnabledForIUri$MH() {
        return RuntimeHelper.requireNonNull(constants$1223.CoInternetIsFeatureEnabledForIUri$MH,"CoInternetIsFeatureEnabledForIUri");
    }
    public static int CoInternetIsFeatureEnabledForIUri ( int FeatureEntry,  int dwFlags,  Addressable pIUri,  Addressable pSecMgr) {
        var mh$ = CoInternetIsFeatureEnabledForIUri$MH();
        try {
            return (int)mh$.invokeExact(FeatureEntry, dwFlags, pIUri, pSecMgr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoInternetIsFeatureZoneElevationEnabled$MH() {
        return RuntimeHelper.requireNonNull(constants$1223.CoInternetIsFeatureZoneElevationEnabled$MH,"CoInternetIsFeatureZoneElevationEnabled");
    }
    public static int CoInternetIsFeatureZoneElevationEnabled ( Addressable szFromURL,  Addressable szToURL,  Addressable pSecMgr,  int dwFlags) {
        var mh$ = CoInternetIsFeatureZoneElevationEnabled$MH();
        try {
            return (int)mh$.invokeExact(szFromURL, szToURL, pSecMgr, dwFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CopyStgMedium$MH() {
        return RuntimeHelper.requireNonNull(constants$1223.CopyStgMedium$MH,"CopyStgMedium");
    }
    public static int CopyStgMedium ( Addressable pcstgmedSrc,  Addressable pstgmedDest) {
        var mh$ = CopyStgMedium$MH();
        try {
            return (int)mh$.invokeExact(pcstgmedSrc, pstgmedDest);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CopyBindInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$1223.CopyBindInfo$MH,"CopyBindInfo");
    }
    public static int CopyBindInfo ( Addressable pcbiSrc,  Addressable pbiDest) {
        var mh$ = CopyBindInfo$MH();
        try {
            return (int)mh$.invokeExact(pcbiSrc, pbiDest);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ReleaseBindInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$1223.ReleaseBindInfo$MH,"ReleaseBindInfo");
    }
    public static void ReleaseBindInfo ( Addressable pbindinfo) {
        var mh$ = ReleaseBindInfo$MH();
        try {
            mh$.invokeExact(pbindinfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IEGetUserPrivateNamespaceName$MH() {
        return RuntimeHelper.requireNonNull(constants$1224.IEGetUserPrivateNamespaceName$MH,"IEGetUserPrivateNamespaceName");
    }
    public static MemoryAddress IEGetUserPrivateNamespaceName () {
        var mh$ = IEGetUserPrivateNamespaceName$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoInternetCreateSecurityManager$MH() {
        return RuntimeHelper.requireNonNull(constants$1224.CoInternetCreateSecurityManager$MH,"CoInternetCreateSecurityManager");
    }
    public static int CoInternetCreateSecurityManager ( Addressable pSP,  Addressable ppSM,  int dwReserved) {
        var mh$ = CoInternetCreateSecurityManager$MH();
        try {
            return (int)mh$.invokeExact(pSP, ppSM, dwReserved);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoInternetCreateZoneManager$MH() {
        return RuntimeHelper.requireNonNull(constants$1224.CoInternetCreateZoneManager$MH,"CoInternetCreateZoneManager");
    }
    public static int CoInternetCreateZoneManager ( Addressable pSP,  Addressable ppZM,  int dwReserved) {
        var mh$ = CoInternetCreateZoneManager$MH();
        try {
            return (int)mh$.invokeExact(pSP, ppZM, dwReserved);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MemorySegment CLSID_InternetSecurityManager$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1224.CLSID_InternetSecurityManager$SEGMENT,"CLSID_InternetSecurityManager");
    }
    public static MemorySegment CLSID_InternetZoneManager$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1224.CLSID_InternetZoneManager$SEGMENT,"CLSID_InternetZoneManager");
    }
    public static MemorySegment CLSID_PersistentZoneIdentifier$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1224.CLSID_PersistentZoneIdentifier$SEGMENT,"CLSID_PersistentZoneIdentifier");
    }
    public static MemoryLayout __MIDL_itf_urlmon_0000_0037_v0_0_c_ifspec$LAYOUT() {
        return constants$1225.__MIDL_itf_urlmon_0000_0037_v0_0_c_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_urlmon_0000_0037_v0_0_c_ifspec$VH() {
        return constants$1225.__MIDL_itf_urlmon_0000_0037_v0_0_c_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_urlmon_0000_0037_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1225.__MIDL_itf_urlmon_0000_0037_v0_0_c_ifspec$SEGMENT,"__MIDL_itf_urlmon_0000_0037_v0_0_c_ifspec");
    }
    public static MemoryAddress __MIDL_itf_urlmon_0000_0037_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1225.__MIDL_itf_urlmon_0000_0037_v0_0_c_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1225.__MIDL_itf_urlmon_0000_0037_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0037_v0_0_c_ifspec"));
    }
    public static void __MIDL_itf_urlmon_0000_0037_v0_0_c_ifspec$set( MemoryAddress x) {
        constants$1225.__MIDL_itf_urlmon_0000_0037_v0_0_c_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1225.__MIDL_itf_urlmon_0000_0037_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0037_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_urlmon_0000_0037_v0_0_s_ifspec$LAYOUT() {
        return constants$1225.__MIDL_itf_urlmon_0000_0037_v0_0_s_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_urlmon_0000_0037_v0_0_s_ifspec$VH() {
        return constants$1225.__MIDL_itf_urlmon_0000_0037_v0_0_s_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_urlmon_0000_0037_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1225.__MIDL_itf_urlmon_0000_0037_v0_0_s_ifspec$SEGMENT,"__MIDL_itf_urlmon_0000_0037_v0_0_s_ifspec");
    }
    public static MemoryAddress __MIDL_itf_urlmon_0000_0037_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1225.__MIDL_itf_urlmon_0000_0037_v0_0_s_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1225.__MIDL_itf_urlmon_0000_0037_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0037_v0_0_s_ifspec"));
    }
    public static void __MIDL_itf_urlmon_0000_0037_v0_0_s_ifspec$set( MemoryAddress x) {
        constants$1225.__MIDL_itf_urlmon_0000_0037_v0_0_s_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1225.__MIDL_itf_urlmon_0000_0037_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0037_v0_0_s_ifspec"), x);
    }
    public static MemorySegment IID_IInternetSecurityMgrSite$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1225.IID_IInternetSecurityMgrSite$SEGMENT,"IID_IInternetSecurityMgrSite");
    }
    public static MemoryLayout __MIDL_itf_urlmon_0000_0038_v0_0_c_ifspec$LAYOUT() {
        return constants$1225.__MIDL_itf_urlmon_0000_0038_v0_0_c_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_urlmon_0000_0038_v0_0_c_ifspec$VH() {
        return constants$1225.__MIDL_itf_urlmon_0000_0038_v0_0_c_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_urlmon_0000_0038_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1225.__MIDL_itf_urlmon_0000_0038_v0_0_c_ifspec$SEGMENT,"__MIDL_itf_urlmon_0000_0038_v0_0_c_ifspec");
    }
    public static MemoryAddress __MIDL_itf_urlmon_0000_0038_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1225.__MIDL_itf_urlmon_0000_0038_v0_0_c_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1225.__MIDL_itf_urlmon_0000_0038_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0038_v0_0_c_ifspec"));
    }
    public static void __MIDL_itf_urlmon_0000_0038_v0_0_c_ifspec$set( MemoryAddress x) {
        constants$1225.__MIDL_itf_urlmon_0000_0038_v0_0_c_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1225.__MIDL_itf_urlmon_0000_0038_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0038_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_urlmon_0000_0038_v0_0_s_ifspec$LAYOUT() {
        return constants$1225.__MIDL_itf_urlmon_0000_0038_v0_0_s_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_urlmon_0000_0038_v0_0_s_ifspec$VH() {
        return constants$1225.__MIDL_itf_urlmon_0000_0038_v0_0_s_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_urlmon_0000_0038_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1225.__MIDL_itf_urlmon_0000_0038_v0_0_s_ifspec$SEGMENT,"__MIDL_itf_urlmon_0000_0038_v0_0_s_ifspec");
    }
    public static MemoryAddress __MIDL_itf_urlmon_0000_0038_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1225.__MIDL_itf_urlmon_0000_0038_v0_0_s_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1225.__MIDL_itf_urlmon_0000_0038_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0038_v0_0_s_ifspec"));
    }
    public static void __MIDL_itf_urlmon_0000_0038_v0_0_s_ifspec$set( MemoryAddress x) {
        constants$1225.__MIDL_itf_urlmon_0000_0038_v0_0_s_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1225.__MIDL_itf_urlmon_0000_0038_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0038_v0_0_s_ifspec"), x);
    }
    public static int PUAF_DEFAULT() {
        return (int)0L;
    }
    public static int PUAF_NOUI() {
        return (int)1L;
    }
    public static int PUAF_ISFILE() {
        return (int)2L;
    }
    public static int PUAF_WARN_IF_DENIED() {
        return (int)4L;
    }
    public static int PUAF_FORCEUI_FOREGROUND() {
        return (int)8L;
    }
    public static int PUAF_CHECK_TIFS() {
        return (int)16L;
    }
    public static int PUAF_DONTCHECKBOXINDIALOG() {
        return (int)32L;
    }
    public static int PUAF_TRUSTED() {
        return (int)64L;
    }
    public static int PUAF_ACCEPT_WILDCARD_SCHEME() {
        return (int)128L;
    }
    public static int PUAF_ENFORCERESTRICTED() {
        return (int)256L;
    }
    public static int PUAF_NOSAVEDFILECHECK() {
        return (int)512L;
    }
    public static int PUAF_REQUIRESAVEDFILECHECK() {
        return (int)1024L;
    }
    public static int PUAF_DONT_USE_CACHE() {
        return (int)4096L;
    }
    public static int PUAF_RESERVED1() {
        return (int)8192L;
    }
    public static int PUAF_RESERVED2() {
        return (int)16384L;
    }
    public static int PUAF_LMZ_UNLOCKED() {
        return (int)65536L;
    }
    public static int PUAF_LMZ_LOCKED() {
        return (int)131072L;
    }
    public static int PUAF_DEFAULTZONEPOL() {
        return (int)262144L;
    }
    public static int PUAF_NPL_USE_LOCKED_IF_RESTRICTED() {
        return (int)524288L;
    }
    public static int PUAF_NOUIIFLOCKED() {
        return (int)1048576L;
    }
    public static int PUAF_DRAGPROTOCOLCHECK() {
        return (int)2097152L;
    }
    public static int PUAFOUT_DEFAULT() {
        return (int)0L;
    }
    public static int PUAFOUT_ISLOCKZONEPOLICY() {
        return (int)1L;
    }
    public static int SZM_CREATE() {
        return (int)0L;
    }
    public static int SZM_DELETE() {
        return (int)1L;
    }
    public static MemorySegment IID_IInternetSecurityManager$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1225.IID_IInternetSecurityManager$SEGMENT,"IID_IInternetSecurityManager");
    }
    public static MemoryLayout __MIDL_itf_urlmon_0000_0039_v0_0_c_ifspec$LAYOUT() {
        return constants$1226.__MIDL_itf_urlmon_0000_0039_v0_0_c_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_urlmon_0000_0039_v0_0_c_ifspec$VH() {
        return constants$1226.__MIDL_itf_urlmon_0000_0039_v0_0_c_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_urlmon_0000_0039_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1226.__MIDL_itf_urlmon_0000_0039_v0_0_c_ifspec$SEGMENT,"__MIDL_itf_urlmon_0000_0039_v0_0_c_ifspec");
    }
    public static MemoryAddress __MIDL_itf_urlmon_0000_0039_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1226.__MIDL_itf_urlmon_0000_0039_v0_0_c_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1226.__MIDL_itf_urlmon_0000_0039_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0039_v0_0_c_ifspec"));
    }
    public static void __MIDL_itf_urlmon_0000_0039_v0_0_c_ifspec$set( MemoryAddress x) {
        constants$1226.__MIDL_itf_urlmon_0000_0039_v0_0_c_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1226.__MIDL_itf_urlmon_0000_0039_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0039_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_urlmon_0000_0039_v0_0_s_ifspec$LAYOUT() {
        return constants$1226.__MIDL_itf_urlmon_0000_0039_v0_0_s_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_urlmon_0000_0039_v0_0_s_ifspec$VH() {
        return constants$1226.__MIDL_itf_urlmon_0000_0039_v0_0_s_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_urlmon_0000_0039_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1226.__MIDL_itf_urlmon_0000_0039_v0_0_s_ifspec$SEGMENT,"__MIDL_itf_urlmon_0000_0039_v0_0_s_ifspec");
    }
    public static MemoryAddress __MIDL_itf_urlmon_0000_0039_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1226.__MIDL_itf_urlmon_0000_0039_v0_0_s_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1226.__MIDL_itf_urlmon_0000_0039_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0039_v0_0_s_ifspec"));
    }
    public static void __MIDL_itf_urlmon_0000_0039_v0_0_s_ifspec$set( MemoryAddress x) {
        constants$1226.__MIDL_itf_urlmon_0000_0039_v0_0_s_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1226.__MIDL_itf_urlmon_0000_0039_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0039_v0_0_s_ifspec"), x);
    }
    public static MemorySegment IID_IInternetSecurityManagerEx$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1226.IID_IInternetSecurityManagerEx$SEGMENT,"IID_IInternetSecurityManagerEx");
    }
    public static MemoryLayout __MIDL_itf_urlmon_0000_0040_v0_0_c_ifspec$LAYOUT() {
        return constants$1226.__MIDL_itf_urlmon_0000_0040_v0_0_c_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_urlmon_0000_0040_v0_0_c_ifspec$VH() {
        return constants$1226.__MIDL_itf_urlmon_0000_0040_v0_0_c_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_urlmon_0000_0040_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1226.__MIDL_itf_urlmon_0000_0040_v0_0_c_ifspec$SEGMENT,"__MIDL_itf_urlmon_0000_0040_v0_0_c_ifspec");
    }
    public static MemoryAddress __MIDL_itf_urlmon_0000_0040_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1226.__MIDL_itf_urlmon_0000_0040_v0_0_c_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1226.__MIDL_itf_urlmon_0000_0040_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0040_v0_0_c_ifspec"));
    }
    public static void __MIDL_itf_urlmon_0000_0040_v0_0_c_ifspec$set( MemoryAddress x) {
        constants$1226.__MIDL_itf_urlmon_0000_0040_v0_0_c_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1226.__MIDL_itf_urlmon_0000_0040_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0040_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_urlmon_0000_0040_v0_0_s_ifspec$LAYOUT() {
        return constants$1226.__MIDL_itf_urlmon_0000_0040_v0_0_s_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_urlmon_0000_0040_v0_0_s_ifspec$VH() {
        return constants$1226.__MIDL_itf_urlmon_0000_0040_v0_0_s_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_urlmon_0000_0040_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1226.__MIDL_itf_urlmon_0000_0040_v0_0_s_ifspec$SEGMENT,"__MIDL_itf_urlmon_0000_0040_v0_0_s_ifspec");
    }
    public static MemoryAddress __MIDL_itf_urlmon_0000_0040_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1226.__MIDL_itf_urlmon_0000_0040_v0_0_s_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1226.__MIDL_itf_urlmon_0000_0040_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0040_v0_0_s_ifspec"));
    }
    public static void __MIDL_itf_urlmon_0000_0040_v0_0_s_ifspec$set( MemoryAddress x) {
        constants$1226.__MIDL_itf_urlmon_0000_0040_v0_0_s_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1226.__MIDL_itf_urlmon_0000_0040_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0040_v0_0_s_ifspec"), x);
    }
    public static MemorySegment IID_IInternetSecurityManagerEx2$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1226.IID_IInternetSecurityManagerEx2$SEGMENT,"IID_IInternetSecurityManagerEx2");
    }
    public static MemoryLayout __MIDL_itf_urlmon_0000_0041_v0_0_c_ifspec$LAYOUT() {
        return constants$1227.__MIDL_itf_urlmon_0000_0041_v0_0_c_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_urlmon_0000_0041_v0_0_c_ifspec$VH() {
        return constants$1227.__MIDL_itf_urlmon_0000_0041_v0_0_c_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_urlmon_0000_0041_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1227.__MIDL_itf_urlmon_0000_0041_v0_0_c_ifspec$SEGMENT,"__MIDL_itf_urlmon_0000_0041_v0_0_c_ifspec");
    }
    public static MemoryAddress __MIDL_itf_urlmon_0000_0041_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1227.__MIDL_itf_urlmon_0000_0041_v0_0_c_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1227.__MIDL_itf_urlmon_0000_0041_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0041_v0_0_c_ifspec"));
    }
    public static void __MIDL_itf_urlmon_0000_0041_v0_0_c_ifspec$set( MemoryAddress x) {
        constants$1227.__MIDL_itf_urlmon_0000_0041_v0_0_c_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1227.__MIDL_itf_urlmon_0000_0041_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0041_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_urlmon_0000_0041_v0_0_s_ifspec$LAYOUT() {
        return constants$1227.__MIDL_itf_urlmon_0000_0041_v0_0_s_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_urlmon_0000_0041_v0_0_s_ifspec$VH() {
        return constants$1227.__MIDL_itf_urlmon_0000_0041_v0_0_s_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_urlmon_0000_0041_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1227.__MIDL_itf_urlmon_0000_0041_v0_0_s_ifspec$SEGMENT,"__MIDL_itf_urlmon_0000_0041_v0_0_s_ifspec");
    }
    public static MemoryAddress __MIDL_itf_urlmon_0000_0041_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1227.__MIDL_itf_urlmon_0000_0041_v0_0_s_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1227.__MIDL_itf_urlmon_0000_0041_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0041_v0_0_s_ifspec"));
    }
    public static void __MIDL_itf_urlmon_0000_0041_v0_0_s_ifspec$set( MemoryAddress x) {
        constants$1227.__MIDL_itf_urlmon_0000_0041_v0_0_s_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1227.__MIDL_itf_urlmon_0000_0041_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0041_v0_0_s_ifspec"), x);
    }
    public static MemorySegment IID_IZoneIdentifier$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1227.IID_IZoneIdentifier$SEGMENT,"IID_IZoneIdentifier");
    }
    public static MemoryLayout __MIDL_itf_urlmon_0000_0042_v0_0_c_ifspec$LAYOUT() {
        return constants$1227.__MIDL_itf_urlmon_0000_0042_v0_0_c_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_urlmon_0000_0042_v0_0_c_ifspec$VH() {
        return constants$1227.__MIDL_itf_urlmon_0000_0042_v0_0_c_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_urlmon_0000_0042_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1227.__MIDL_itf_urlmon_0000_0042_v0_0_c_ifspec$SEGMENT,"__MIDL_itf_urlmon_0000_0042_v0_0_c_ifspec");
    }
    public static MemoryAddress __MIDL_itf_urlmon_0000_0042_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1227.__MIDL_itf_urlmon_0000_0042_v0_0_c_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1227.__MIDL_itf_urlmon_0000_0042_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0042_v0_0_c_ifspec"));
    }
    public static void __MIDL_itf_urlmon_0000_0042_v0_0_c_ifspec$set( MemoryAddress x) {
        constants$1227.__MIDL_itf_urlmon_0000_0042_v0_0_c_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1227.__MIDL_itf_urlmon_0000_0042_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0042_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_urlmon_0000_0042_v0_0_s_ifspec$LAYOUT() {
        return constants$1227.__MIDL_itf_urlmon_0000_0042_v0_0_s_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_urlmon_0000_0042_v0_0_s_ifspec$VH() {
        return constants$1227.__MIDL_itf_urlmon_0000_0042_v0_0_s_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_urlmon_0000_0042_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1227.__MIDL_itf_urlmon_0000_0042_v0_0_s_ifspec$SEGMENT,"__MIDL_itf_urlmon_0000_0042_v0_0_s_ifspec");
    }
    public static MemoryAddress __MIDL_itf_urlmon_0000_0042_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1227.__MIDL_itf_urlmon_0000_0042_v0_0_s_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1227.__MIDL_itf_urlmon_0000_0042_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0042_v0_0_s_ifspec"));
    }
    public static void __MIDL_itf_urlmon_0000_0042_v0_0_s_ifspec$set( MemoryAddress x) {
        constants$1227.__MIDL_itf_urlmon_0000_0042_v0_0_s_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1227.__MIDL_itf_urlmon_0000_0042_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0042_v0_0_s_ifspec"), x);
    }
    public static MemorySegment IID_IZoneIdentifier2$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1227.IID_IZoneIdentifier2$SEGMENT,"IID_IZoneIdentifier2");
    }
    public static MemoryLayout __MIDL_itf_urlmon_0000_0043_v0_0_c_ifspec$LAYOUT() {
        return constants$1228.__MIDL_itf_urlmon_0000_0043_v0_0_c_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_urlmon_0000_0043_v0_0_c_ifspec$VH() {
        return constants$1228.__MIDL_itf_urlmon_0000_0043_v0_0_c_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_urlmon_0000_0043_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1228.__MIDL_itf_urlmon_0000_0043_v0_0_c_ifspec$SEGMENT,"__MIDL_itf_urlmon_0000_0043_v0_0_c_ifspec");
    }
    public static MemoryAddress __MIDL_itf_urlmon_0000_0043_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1228.__MIDL_itf_urlmon_0000_0043_v0_0_c_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1228.__MIDL_itf_urlmon_0000_0043_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0043_v0_0_c_ifspec"));
    }
    public static void __MIDL_itf_urlmon_0000_0043_v0_0_c_ifspec$set( MemoryAddress x) {
        constants$1228.__MIDL_itf_urlmon_0000_0043_v0_0_c_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1228.__MIDL_itf_urlmon_0000_0043_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0043_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_urlmon_0000_0043_v0_0_s_ifspec$LAYOUT() {
        return constants$1228.__MIDL_itf_urlmon_0000_0043_v0_0_s_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_urlmon_0000_0043_v0_0_s_ifspec$VH() {
        return constants$1228.__MIDL_itf_urlmon_0000_0043_v0_0_s_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_urlmon_0000_0043_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1228.__MIDL_itf_urlmon_0000_0043_v0_0_s_ifspec$SEGMENT,"__MIDL_itf_urlmon_0000_0043_v0_0_s_ifspec");
    }
    public static MemoryAddress __MIDL_itf_urlmon_0000_0043_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1228.__MIDL_itf_urlmon_0000_0043_v0_0_s_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1228.__MIDL_itf_urlmon_0000_0043_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0043_v0_0_s_ifspec"));
    }
    public static void __MIDL_itf_urlmon_0000_0043_v0_0_s_ifspec$set( MemoryAddress x) {
        constants$1228.__MIDL_itf_urlmon_0000_0043_v0_0_s_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1228.__MIDL_itf_urlmon_0000_0043_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0043_v0_0_s_ifspec"), x);
    }
    public static MemorySegment IID_IInternetHostSecurityManager$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1228.IID_IInternetHostSecurityManager$SEGMENT,"IID_IInternetHostSecurityManager");
    }
    public static MemorySegment GUID_CUSTOM_LOCALMACHINEZONEUNLOCKED$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1228.GUID_CUSTOM_LOCALMACHINEZONEUNLOCKED$SEGMENT,"GUID_CUSTOM_LOCALMACHINEZONEUNLOCKED");
    }
    public static MemoryLayout __MIDL_itf_urlmon_0000_0044_v0_0_c_ifspec$LAYOUT() {
        return constants$1228.__MIDL_itf_urlmon_0000_0044_v0_0_c_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_urlmon_0000_0044_v0_0_c_ifspec$VH() {
        return constants$1228.__MIDL_itf_urlmon_0000_0044_v0_0_c_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_urlmon_0000_0044_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1228.__MIDL_itf_urlmon_0000_0044_v0_0_c_ifspec$SEGMENT,"__MIDL_itf_urlmon_0000_0044_v0_0_c_ifspec");
    }
    public static MemoryAddress __MIDL_itf_urlmon_0000_0044_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1228.__MIDL_itf_urlmon_0000_0044_v0_0_c_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1228.__MIDL_itf_urlmon_0000_0044_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0044_v0_0_c_ifspec"));
    }
    public static void __MIDL_itf_urlmon_0000_0044_v0_0_c_ifspec$set( MemoryAddress x) {
        constants$1228.__MIDL_itf_urlmon_0000_0044_v0_0_c_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1228.__MIDL_itf_urlmon_0000_0044_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0044_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_urlmon_0000_0044_v0_0_s_ifspec$LAYOUT() {
        return constants$1228.__MIDL_itf_urlmon_0000_0044_v0_0_s_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_urlmon_0000_0044_v0_0_s_ifspec$VH() {
        return constants$1228.__MIDL_itf_urlmon_0000_0044_v0_0_s_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_urlmon_0000_0044_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1228.__MIDL_itf_urlmon_0000_0044_v0_0_s_ifspec$SEGMENT,"__MIDL_itf_urlmon_0000_0044_v0_0_s_ifspec");
    }
    public static MemoryAddress __MIDL_itf_urlmon_0000_0044_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1228.__MIDL_itf_urlmon_0000_0044_v0_0_s_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1228.__MIDL_itf_urlmon_0000_0044_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0044_v0_0_s_ifspec"));
    }
    public static void __MIDL_itf_urlmon_0000_0044_v0_0_s_ifspec$set( MemoryAddress x) {
        constants$1228.__MIDL_itf_urlmon_0000_0044_v0_0_s_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1228.__MIDL_itf_urlmon_0000_0044_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0044_v0_0_s_ifspec"), x);
    }
    public static OfAddress LPURLZONEMANAGER = Constants$root.C_POINTER$LAYOUT;
    public static int URLZONE_INVALID() {
        return (int)-1L;
    }
    public static int URLZONE_PREDEFINED_MIN() {
        return (int)0L;
    }
    public static int URLZONE_LOCAL_MACHINE() {
        return (int)0L;
    }
    public static int URLZONE_INTRANET() {
        return (int)1L;
    }
    public static int URLZONE_TRUSTED() {
        return (int)2L;
    }
    public static int URLZONE_INTERNET() {
        return (int)3L;
    }
    public static int URLZONE_UNTRUSTED() {
        return (int)4L;
    }
    public static int URLZONE_PREDEFINED_MAX() {
        return (int)999L;
    }
    public static int URLZONE_USER_MIN() {
        return (int)1000L;
    }
    public static int URLZONE_USER_MAX() {
        return (int)10000L;
    }
    public static int URLTEMPLATE_CUSTOM() {
        return (int)0L;
    }
    public static int URLTEMPLATE_PREDEFINED_MIN() {
        return (int)65536L;
    }
    public static int URLTEMPLATE_LOW() {
        return (int)65536L;
    }
    public static int URLTEMPLATE_MEDLOW() {
        return (int)66816L;
    }
    public static int URLTEMPLATE_MEDIUM() {
        return (int)69632L;
    }
    public static int URLTEMPLATE_MEDHIGH() {
        return (int)70912L;
    }
    public static int URLTEMPLATE_HIGH() {
        return (int)73728L;
    }
    public static int URLTEMPLATE_PREDEFINED_MAX() {
        return (int)131072L;
    }
    public static int MAX_ZONE_PATH() {
        return (int)260L;
    }
    public static int MAX_ZONE_DESCRIPTION() {
        return (int)200L;
    }
    public static int ZAFLAGS_CUSTOM_EDIT() {
        return (int)1L;
    }
    public static int ZAFLAGS_ADD_SITES() {
        return (int)2L;
    }
    public static int ZAFLAGS_REQUIRE_VERIFICATION() {
        return (int)4L;
    }
    public static int ZAFLAGS_INCLUDE_PROXY_OVERRIDE() {
        return (int)8L;
    }
    public static int ZAFLAGS_INCLUDE_INTRANET_SITES() {
        return (int)16L;
    }
    public static int ZAFLAGS_NO_UI() {
        return (int)32L;
    }
    public static int ZAFLAGS_SUPPORTS_VERIFICATION() {
        return (int)64L;
    }
    public static int ZAFLAGS_UNC_AS_INTRANET() {
        return (int)128L;
    }
    public static int ZAFLAGS_DETECT_INTRANET() {
        return (int)256L;
    }
    public static int ZAFLAGS_USE_LOCKED_ZONES() {
        return (int)65536L;
    }
    public static int ZAFLAGS_VERIFY_TEMPLATE_SETTINGS() {
        return (int)131072L;
    }
    public static int ZAFLAGS_NO_CACHE() {
        return (int)262144L;
    }
    public static OfAddress LPZONEATTRIBUTES = Constants$root.C_POINTER$LAYOUT;
    public static int URLZONEREG_DEFAULT() {
        return (int)0L;
    }
    public static int URLZONEREG_HKLM() {
        return (int)1L;
    }
    public static int URLZONEREG_HKCU() {
        return (int)2L;
    }
    public static MemorySegment IID_IInternetZoneManager$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1229.IID_IInternetZoneManager$SEGMENT,"IID_IInternetZoneManager");
    }
    public static MemoryLayout __MIDL_itf_urlmon_0000_0045_v0_0_c_ifspec$LAYOUT() {
        return constants$1229.__MIDL_itf_urlmon_0000_0045_v0_0_c_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_urlmon_0000_0045_v0_0_c_ifspec$VH() {
        return constants$1229.__MIDL_itf_urlmon_0000_0045_v0_0_c_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_urlmon_0000_0045_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1229.__MIDL_itf_urlmon_0000_0045_v0_0_c_ifspec$SEGMENT,"__MIDL_itf_urlmon_0000_0045_v0_0_c_ifspec");
    }
    public static MemoryAddress __MIDL_itf_urlmon_0000_0045_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1229.__MIDL_itf_urlmon_0000_0045_v0_0_c_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1229.__MIDL_itf_urlmon_0000_0045_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0045_v0_0_c_ifspec"));
    }
    public static void __MIDL_itf_urlmon_0000_0045_v0_0_c_ifspec$set( MemoryAddress x) {
        constants$1229.__MIDL_itf_urlmon_0000_0045_v0_0_c_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1229.__MIDL_itf_urlmon_0000_0045_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0045_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_urlmon_0000_0045_v0_0_s_ifspec$LAYOUT() {
        return constants$1229.__MIDL_itf_urlmon_0000_0045_v0_0_s_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_urlmon_0000_0045_v0_0_s_ifspec$VH() {
        return constants$1229.__MIDL_itf_urlmon_0000_0045_v0_0_s_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_urlmon_0000_0045_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1229.__MIDL_itf_urlmon_0000_0045_v0_0_s_ifspec$SEGMENT,"__MIDL_itf_urlmon_0000_0045_v0_0_s_ifspec");
    }
    public static MemoryAddress __MIDL_itf_urlmon_0000_0045_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1229.__MIDL_itf_urlmon_0000_0045_v0_0_s_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1229.__MIDL_itf_urlmon_0000_0045_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0045_v0_0_s_ifspec"));
    }
    public static void __MIDL_itf_urlmon_0000_0045_v0_0_s_ifspec$set( MemoryAddress x) {
        constants$1229.__MIDL_itf_urlmon_0000_0045_v0_0_s_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1229.__MIDL_itf_urlmon_0000_0045_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0045_v0_0_s_ifspec"), x);
    }
    public static MemorySegment IID_IInternetZoneManagerEx$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1229.IID_IInternetZoneManagerEx$SEGMENT,"IID_IInternetZoneManagerEx");
    }
    public static MemoryLayout __MIDL_itf_urlmon_0000_0046_v0_0_c_ifspec$LAYOUT() {
        return constants$1229.__MIDL_itf_urlmon_0000_0046_v0_0_c_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_urlmon_0000_0046_v0_0_c_ifspec$VH() {
        return constants$1229.__MIDL_itf_urlmon_0000_0046_v0_0_c_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_urlmon_0000_0046_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1229.__MIDL_itf_urlmon_0000_0046_v0_0_c_ifspec$SEGMENT,"__MIDL_itf_urlmon_0000_0046_v0_0_c_ifspec");
    }
    public static MemoryAddress __MIDL_itf_urlmon_0000_0046_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1229.__MIDL_itf_urlmon_0000_0046_v0_0_c_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1229.__MIDL_itf_urlmon_0000_0046_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0046_v0_0_c_ifspec"));
    }
    public static void __MIDL_itf_urlmon_0000_0046_v0_0_c_ifspec$set( MemoryAddress x) {
        constants$1229.__MIDL_itf_urlmon_0000_0046_v0_0_c_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1229.__MIDL_itf_urlmon_0000_0046_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0046_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_urlmon_0000_0046_v0_0_s_ifspec$LAYOUT() {
        return constants$1229.__MIDL_itf_urlmon_0000_0046_v0_0_s_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_urlmon_0000_0046_v0_0_s_ifspec$VH() {
        return constants$1229.__MIDL_itf_urlmon_0000_0046_v0_0_s_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_urlmon_0000_0046_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1229.__MIDL_itf_urlmon_0000_0046_v0_0_s_ifspec$SEGMENT,"__MIDL_itf_urlmon_0000_0046_v0_0_s_ifspec");
    }
    public static MemoryAddress __MIDL_itf_urlmon_0000_0046_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1229.__MIDL_itf_urlmon_0000_0046_v0_0_s_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1229.__MIDL_itf_urlmon_0000_0046_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0046_v0_0_s_ifspec"));
    }
    public static void __MIDL_itf_urlmon_0000_0046_v0_0_s_ifspec$set( MemoryAddress x) {
        constants$1229.__MIDL_itf_urlmon_0000_0046_v0_0_s_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1229.__MIDL_itf_urlmon_0000_0046_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0046_v0_0_s_ifspec"), x);
    }
    public static MemorySegment IID_IInternetZoneManagerEx2$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1230.IID_IInternetZoneManagerEx2$SEGMENT,"IID_IInternetZoneManagerEx2");
    }
    public static MemorySegment CLSID_SoftDistExt$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1230.CLSID_SoftDistExt$SEGMENT,"CLSID_SoftDistExt");
    }
    public static OfAddress LPCODEBASEHOLD = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPSOFTDISTINFO = Constants$root.C_POINTER$LAYOUT;
    public static MemoryLayout __MIDL_itf_urlmon_0000_0047_v0_0_c_ifspec$LAYOUT() {
        return constants$1230.__MIDL_itf_urlmon_0000_0047_v0_0_c_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_urlmon_0000_0047_v0_0_c_ifspec$VH() {
        return constants$1230.__MIDL_itf_urlmon_0000_0047_v0_0_c_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_urlmon_0000_0047_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1230.__MIDL_itf_urlmon_0000_0047_v0_0_c_ifspec$SEGMENT,"__MIDL_itf_urlmon_0000_0047_v0_0_c_ifspec");
    }
    public static MemoryAddress __MIDL_itf_urlmon_0000_0047_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1230.__MIDL_itf_urlmon_0000_0047_v0_0_c_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1230.__MIDL_itf_urlmon_0000_0047_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0047_v0_0_c_ifspec"));
    }
    public static void __MIDL_itf_urlmon_0000_0047_v0_0_c_ifspec$set( MemoryAddress x) {
        constants$1230.__MIDL_itf_urlmon_0000_0047_v0_0_c_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1230.__MIDL_itf_urlmon_0000_0047_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0047_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_urlmon_0000_0047_v0_0_s_ifspec$LAYOUT() {
        return constants$1230.__MIDL_itf_urlmon_0000_0047_v0_0_s_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_urlmon_0000_0047_v0_0_s_ifspec$VH() {
        return constants$1230.__MIDL_itf_urlmon_0000_0047_v0_0_s_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_urlmon_0000_0047_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1230.__MIDL_itf_urlmon_0000_0047_v0_0_s_ifspec$SEGMENT,"__MIDL_itf_urlmon_0000_0047_v0_0_s_ifspec");
    }
    public static MemoryAddress __MIDL_itf_urlmon_0000_0047_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1230.__MIDL_itf_urlmon_0000_0047_v0_0_s_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1230.__MIDL_itf_urlmon_0000_0047_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0047_v0_0_s_ifspec"));
    }
    public static void __MIDL_itf_urlmon_0000_0047_v0_0_s_ifspec$set( MemoryAddress x) {
        constants$1230.__MIDL_itf_urlmon_0000_0047_v0_0_s_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1230.__MIDL_itf_urlmon_0000_0047_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0047_v0_0_s_ifspec"), x);
    }
    public static MemorySegment IID_ISoftDistExt$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1230.IID_ISoftDistExt$SEGMENT,"IID_ISoftDistExt");
    }
    public static MethodHandle GetSoftwareUpdateInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$1230.GetSoftwareUpdateInfo$MH,"GetSoftwareUpdateInfo");
    }
    public static int GetSoftwareUpdateInfo ( Addressable szDistUnit,  Addressable psdi) {
        var mh$ = GetSoftwareUpdateInfo$MH();
        try {
            return (int)mh$.invokeExact(szDistUnit, psdi);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetSoftwareUpdateAdvertisementState$MH() {
        return RuntimeHelper.requireNonNull(constants$1231.SetSoftwareUpdateAdvertisementState$MH,"SetSoftwareUpdateAdvertisementState");
    }
    public static int SetSoftwareUpdateAdvertisementState ( Addressable szDistUnit,  int dwAdState,  int dwAdvertisedVersionMS,  int dwAdvertisedVersionLS) {
        var mh$ = SetSoftwareUpdateAdvertisementState$MH();
        try {
            return (int)mh$.invokeExact(szDistUnit, dwAdState, dwAdvertisedVersionMS, dwAdvertisedVersionLS);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MemoryLayout __MIDL_itf_urlmon_0000_0048_v0_0_c_ifspec$LAYOUT() {
        return constants$1231.__MIDL_itf_urlmon_0000_0048_v0_0_c_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_urlmon_0000_0048_v0_0_c_ifspec$VH() {
        return constants$1231.__MIDL_itf_urlmon_0000_0048_v0_0_c_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_urlmon_0000_0048_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1231.__MIDL_itf_urlmon_0000_0048_v0_0_c_ifspec$SEGMENT,"__MIDL_itf_urlmon_0000_0048_v0_0_c_ifspec");
    }
    public static MemoryAddress __MIDL_itf_urlmon_0000_0048_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1231.__MIDL_itf_urlmon_0000_0048_v0_0_c_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1231.__MIDL_itf_urlmon_0000_0048_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0048_v0_0_c_ifspec"));
    }
    public static void __MIDL_itf_urlmon_0000_0048_v0_0_c_ifspec$set( MemoryAddress x) {
        constants$1231.__MIDL_itf_urlmon_0000_0048_v0_0_c_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1231.__MIDL_itf_urlmon_0000_0048_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0048_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_urlmon_0000_0048_v0_0_s_ifspec$LAYOUT() {
        return constants$1231.__MIDL_itf_urlmon_0000_0048_v0_0_s_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_urlmon_0000_0048_v0_0_s_ifspec$VH() {
        return constants$1231.__MIDL_itf_urlmon_0000_0048_v0_0_s_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_urlmon_0000_0048_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1231.__MIDL_itf_urlmon_0000_0048_v0_0_s_ifspec$SEGMENT,"__MIDL_itf_urlmon_0000_0048_v0_0_s_ifspec");
    }
    public static MemoryAddress __MIDL_itf_urlmon_0000_0048_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1231.__MIDL_itf_urlmon_0000_0048_v0_0_s_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1231.__MIDL_itf_urlmon_0000_0048_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0048_v0_0_s_ifspec"));
    }
    public static void __MIDL_itf_urlmon_0000_0048_v0_0_s_ifspec$set( MemoryAddress x) {
        constants$1231.__MIDL_itf_urlmon_0000_0048_v0_0_s_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1231.__MIDL_itf_urlmon_0000_0048_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0048_v0_0_s_ifspec"), x);
    }
    public static OfAddress LPCATALOGFILEINFO = Constants$root.C_POINTER$LAYOUT;
    public static MemorySegment IID_ICatalogFileInfo$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1231.IID_ICatalogFileInfo$SEGMENT,"IID_ICatalogFileInfo");
    }
    public static MemoryLayout __MIDL_itf_urlmon_0000_0049_v0_0_c_ifspec$LAYOUT() {
        return constants$1231.__MIDL_itf_urlmon_0000_0049_v0_0_c_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_urlmon_0000_0049_v0_0_c_ifspec$VH() {
        return constants$1231.__MIDL_itf_urlmon_0000_0049_v0_0_c_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_urlmon_0000_0049_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1231.__MIDL_itf_urlmon_0000_0049_v0_0_c_ifspec$SEGMENT,"__MIDL_itf_urlmon_0000_0049_v0_0_c_ifspec");
    }
    public static MemoryAddress __MIDL_itf_urlmon_0000_0049_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1231.__MIDL_itf_urlmon_0000_0049_v0_0_c_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1231.__MIDL_itf_urlmon_0000_0049_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0049_v0_0_c_ifspec"));
    }
    public static void __MIDL_itf_urlmon_0000_0049_v0_0_c_ifspec$set( MemoryAddress x) {
        constants$1231.__MIDL_itf_urlmon_0000_0049_v0_0_c_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1231.__MIDL_itf_urlmon_0000_0049_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0049_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_urlmon_0000_0049_v0_0_s_ifspec$LAYOUT() {
        return constants$1231.__MIDL_itf_urlmon_0000_0049_v0_0_s_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_urlmon_0000_0049_v0_0_s_ifspec$VH() {
        return constants$1231.__MIDL_itf_urlmon_0000_0049_v0_0_s_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_urlmon_0000_0049_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1231.__MIDL_itf_urlmon_0000_0049_v0_0_s_ifspec$SEGMENT,"__MIDL_itf_urlmon_0000_0049_v0_0_s_ifspec");
    }
    public static MemoryAddress __MIDL_itf_urlmon_0000_0049_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1231.__MIDL_itf_urlmon_0000_0049_v0_0_s_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1231.__MIDL_itf_urlmon_0000_0049_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0049_v0_0_s_ifspec"));
    }
    public static void __MIDL_itf_urlmon_0000_0049_v0_0_s_ifspec$set( MemoryAddress x) {
        constants$1231.__MIDL_itf_urlmon_0000_0049_v0_0_s_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1231.__MIDL_itf_urlmon_0000_0049_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0049_v0_0_s_ifspec"), x);
    }
    public static OfAddress LPDATAFILTER = Constants$root.C_POINTER$LAYOUT;
    public static MemorySegment IID_IDataFilter$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1232.IID_IDataFilter$SEGMENT,"IID_IDataFilter");
    }
    public static MemoryLayout __MIDL_itf_urlmon_0000_0050_v0_0_c_ifspec$LAYOUT() {
        return constants$1232.__MIDL_itf_urlmon_0000_0050_v0_0_c_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_urlmon_0000_0050_v0_0_c_ifspec$VH() {
        return constants$1232.__MIDL_itf_urlmon_0000_0050_v0_0_c_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_urlmon_0000_0050_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1232.__MIDL_itf_urlmon_0000_0050_v0_0_c_ifspec$SEGMENT,"__MIDL_itf_urlmon_0000_0050_v0_0_c_ifspec");
    }
    public static MemoryAddress __MIDL_itf_urlmon_0000_0050_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1232.__MIDL_itf_urlmon_0000_0050_v0_0_c_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1232.__MIDL_itf_urlmon_0000_0050_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0050_v0_0_c_ifspec"));
    }
    public static void __MIDL_itf_urlmon_0000_0050_v0_0_c_ifspec$set( MemoryAddress x) {
        constants$1232.__MIDL_itf_urlmon_0000_0050_v0_0_c_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1232.__MIDL_itf_urlmon_0000_0050_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0050_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_urlmon_0000_0050_v0_0_s_ifspec$LAYOUT() {
        return constants$1232.__MIDL_itf_urlmon_0000_0050_v0_0_s_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_urlmon_0000_0050_v0_0_s_ifspec$VH() {
        return constants$1232.__MIDL_itf_urlmon_0000_0050_v0_0_s_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_urlmon_0000_0050_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1232.__MIDL_itf_urlmon_0000_0050_v0_0_s_ifspec$SEGMENT,"__MIDL_itf_urlmon_0000_0050_v0_0_s_ifspec");
    }
    public static MemoryAddress __MIDL_itf_urlmon_0000_0050_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1232.__MIDL_itf_urlmon_0000_0050_v0_0_s_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1232.__MIDL_itf_urlmon_0000_0050_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0050_v0_0_s_ifspec"));
    }
    public static void __MIDL_itf_urlmon_0000_0050_v0_0_s_ifspec$set( MemoryAddress x) {
        constants$1232.__MIDL_itf_urlmon_0000_0050_v0_0_s_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1232.__MIDL_itf_urlmon_0000_0050_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0050_v0_0_s_ifspec"), x);
    }
    public static OfAddress LPENCODINGFILTERFACTORY = Constants$root.C_POINTER$LAYOUT;
    public static MemorySegment IID_IEncodingFilterFactory$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1232.IID_IEncodingFilterFactory$SEGMENT,"IID_IEncodingFilterFactory");
    }
    public static MethodHandle IsLoggingEnabledA$MH() {
        return RuntimeHelper.requireNonNull(constants$1232.IsLoggingEnabledA$MH,"IsLoggingEnabledA");
    }
    public static int IsLoggingEnabledA ( Addressable pszUrl) {
        var mh$ = IsLoggingEnabledA$MH();
        try {
            return (int)mh$.invokeExact(pszUrl);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IsLoggingEnabledW$MH() {
        return RuntimeHelper.requireNonNull(constants$1232.IsLoggingEnabledW$MH,"IsLoggingEnabledW");
    }
    public static int IsLoggingEnabledW ( Addressable pwszUrl) {
        var mh$ = IsLoggingEnabledW$MH();
        try {
            return (int)mh$.invokeExact(pwszUrl);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress LPHIT_LOGGING_INFO = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle WriteHitLogging$MH() {
        return RuntimeHelper.requireNonNull(constants$1233.WriteHitLogging$MH,"WriteHitLogging");
    }
    public static int WriteHitLogging ( Addressable lpLogginginfo) {
        var mh$ = WriteHitLogging$MH();
        try {
            return (int)mh$.invokeExact(lpLogginginfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MemorySegment GUID_CUSTOM_CONFIRMOBJECTSAFETY$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1233.GUID_CUSTOM_CONFIRMOBJECTSAFETY$SEGMENT,"GUID_CUSTOM_CONFIRMOBJECTSAFETY");
    }
    public static MemoryLayout __MIDL_itf_urlmon_0000_0051_v0_0_c_ifspec$LAYOUT() {
        return constants$1233.__MIDL_itf_urlmon_0000_0051_v0_0_c_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_urlmon_0000_0051_v0_0_c_ifspec$VH() {
        return constants$1233.__MIDL_itf_urlmon_0000_0051_v0_0_c_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_urlmon_0000_0051_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1233.__MIDL_itf_urlmon_0000_0051_v0_0_c_ifspec$SEGMENT,"__MIDL_itf_urlmon_0000_0051_v0_0_c_ifspec");
    }
    public static MemoryAddress __MIDL_itf_urlmon_0000_0051_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1233.__MIDL_itf_urlmon_0000_0051_v0_0_c_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1233.__MIDL_itf_urlmon_0000_0051_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0051_v0_0_c_ifspec"));
    }
    public static void __MIDL_itf_urlmon_0000_0051_v0_0_c_ifspec$set( MemoryAddress x) {
        constants$1233.__MIDL_itf_urlmon_0000_0051_v0_0_c_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1233.__MIDL_itf_urlmon_0000_0051_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0051_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_urlmon_0000_0051_v0_0_s_ifspec$LAYOUT() {
        return constants$1233.__MIDL_itf_urlmon_0000_0051_v0_0_s_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_urlmon_0000_0051_v0_0_s_ifspec$VH() {
        return constants$1233.__MIDL_itf_urlmon_0000_0051_v0_0_s_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_urlmon_0000_0051_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1233.__MIDL_itf_urlmon_0000_0051_v0_0_s_ifspec$SEGMENT,"__MIDL_itf_urlmon_0000_0051_v0_0_s_ifspec");
    }
    public static MemoryAddress __MIDL_itf_urlmon_0000_0051_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1233.__MIDL_itf_urlmon_0000_0051_v0_0_s_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1233.__MIDL_itf_urlmon_0000_0051_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0051_v0_0_s_ifspec"));
    }
    public static void __MIDL_itf_urlmon_0000_0051_v0_0_s_ifspec$set( MemoryAddress x) {
        constants$1233.__MIDL_itf_urlmon_0000_0051_v0_0_s_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1233.__MIDL_itf_urlmon_0000_0051_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0051_v0_0_s_ifspec"), x);
    }
    public static OfAddress LPIWRAPPEDPROTOCOL = Constants$root.C_POINTER$LAYOUT;
    public static MemorySegment IID_IWrappedProtocol$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1233.IID_IWrappedProtocol$SEGMENT,"IID_IWrappedProtocol");
    }
    public static MemoryLayout __MIDL_itf_urlmon_0000_0052_v0_0_c_ifspec$LAYOUT() {
        return constants$1233.__MIDL_itf_urlmon_0000_0052_v0_0_c_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_urlmon_0000_0052_v0_0_c_ifspec$VH() {
        return constants$1233.__MIDL_itf_urlmon_0000_0052_v0_0_c_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_urlmon_0000_0052_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1233.__MIDL_itf_urlmon_0000_0052_v0_0_c_ifspec$SEGMENT,"__MIDL_itf_urlmon_0000_0052_v0_0_c_ifspec");
    }
    public static MemoryAddress __MIDL_itf_urlmon_0000_0052_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1233.__MIDL_itf_urlmon_0000_0052_v0_0_c_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1233.__MIDL_itf_urlmon_0000_0052_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0052_v0_0_c_ifspec"));
    }
    public static void __MIDL_itf_urlmon_0000_0052_v0_0_c_ifspec$set( MemoryAddress x) {
        constants$1233.__MIDL_itf_urlmon_0000_0052_v0_0_c_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1233.__MIDL_itf_urlmon_0000_0052_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0052_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_urlmon_0000_0052_v0_0_s_ifspec$LAYOUT() {
        return constants$1234.__MIDL_itf_urlmon_0000_0052_v0_0_s_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_urlmon_0000_0052_v0_0_s_ifspec$VH() {
        return constants$1234.__MIDL_itf_urlmon_0000_0052_v0_0_s_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_urlmon_0000_0052_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1234.__MIDL_itf_urlmon_0000_0052_v0_0_s_ifspec$SEGMENT,"__MIDL_itf_urlmon_0000_0052_v0_0_s_ifspec");
    }
    public static MemoryAddress __MIDL_itf_urlmon_0000_0052_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1234.__MIDL_itf_urlmon_0000_0052_v0_0_s_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1234.__MIDL_itf_urlmon_0000_0052_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0052_v0_0_s_ifspec"));
    }
    public static void __MIDL_itf_urlmon_0000_0052_v0_0_s_ifspec$set( MemoryAddress x) {
        constants$1234.__MIDL_itf_urlmon_0000_0052_v0_0_s_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1234.__MIDL_itf_urlmon_0000_0052_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0052_v0_0_s_ifspec"), x);
    }
    public static OfAddress LPGETBINDHANDLE = Constants$root.C_POINTER$LAYOUT;
    public static int BINDHANDLETYPES_APPCACHE() {
        return (int)0L;
    }
    public static int BINDHANDLETYPES_DEPENDENCY() {
        return (int)1L;
    }
    public static int BINDHANDLETYPES_COUNT() {
        return (int)2L;
    }
    public static MemorySegment IID_IGetBindHandle$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1234.IID_IGetBindHandle$SEGMENT,"IID_IGetBindHandle");
    }
    public static OfAddress LPPROTOCOL_ARGUMENT = Constants$root.C_POINTER$LAYOUT;
    public static MemoryLayout __MIDL_itf_urlmon_0000_0053_v0_0_c_ifspec$LAYOUT() {
        return constants$1234.__MIDL_itf_urlmon_0000_0053_v0_0_c_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_urlmon_0000_0053_v0_0_c_ifspec$VH() {
        return constants$1234.__MIDL_itf_urlmon_0000_0053_v0_0_c_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_urlmon_0000_0053_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1234.__MIDL_itf_urlmon_0000_0053_v0_0_c_ifspec$SEGMENT,"__MIDL_itf_urlmon_0000_0053_v0_0_c_ifspec");
    }
    public static MemoryAddress __MIDL_itf_urlmon_0000_0053_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1234.__MIDL_itf_urlmon_0000_0053_v0_0_c_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1234.__MIDL_itf_urlmon_0000_0053_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0053_v0_0_c_ifspec"));
    }
    public static void __MIDL_itf_urlmon_0000_0053_v0_0_c_ifspec$set( MemoryAddress x) {
        constants$1234.__MIDL_itf_urlmon_0000_0053_v0_0_c_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1234.__MIDL_itf_urlmon_0000_0053_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0053_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_urlmon_0000_0053_v0_0_s_ifspec$LAYOUT() {
        return constants$1234.__MIDL_itf_urlmon_0000_0053_v0_0_s_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_urlmon_0000_0053_v0_0_s_ifspec$VH() {
        return constants$1234.__MIDL_itf_urlmon_0000_0053_v0_0_s_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_urlmon_0000_0053_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1234.__MIDL_itf_urlmon_0000_0053_v0_0_s_ifspec$SEGMENT,"__MIDL_itf_urlmon_0000_0053_v0_0_s_ifspec");
    }
    public static MemoryAddress __MIDL_itf_urlmon_0000_0053_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1234.__MIDL_itf_urlmon_0000_0053_v0_0_s_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1234.__MIDL_itf_urlmon_0000_0053_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0053_v0_0_s_ifspec"));
    }
    public static void __MIDL_itf_urlmon_0000_0053_v0_0_s_ifspec$set( MemoryAddress x) {
        constants$1234.__MIDL_itf_urlmon_0000_0053_v0_0_s_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1234.__MIDL_itf_urlmon_0000_0053_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0053_v0_0_s_ifspec"), x);
    }
    public static OfAddress LPBINDCALLBACKREDIRECT = Constants$root.C_POINTER$LAYOUT;
    public static MemorySegment IID_IBindCallbackRedirect$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1234.IID_IBindCallbackRedirect$SEGMENT,"IID_IBindCallbackRedirect");
    }
    public static MemoryLayout __MIDL_itf_urlmon_0000_0054_v0_0_c_ifspec$LAYOUT() {
        return constants$1234.__MIDL_itf_urlmon_0000_0054_v0_0_c_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_urlmon_0000_0054_v0_0_c_ifspec$VH() {
        return constants$1234.__MIDL_itf_urlmon_0000_0054_v0_0_c_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_urlmon_0000_0054_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1234.__MIDL_itf_urlmon_0000_0054_v0_0_c_ifspec$SEGMENT,"__MIDL_itf_urlmon_0000_0054_v0_0_c_ifspec");
    }
    public static MemoryAddress __MIDL_itf_urlmon_0000_0054_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1234.__MIDL_itf_urlmon_0000_0054_v0_0_c_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1234.__MIDL_itf_urlmon_0000_0054_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0054_v0_0_c_ifspec"));
    }
    public static void __MIDL_itf_urlmon_0000_0054_v0_0_c_ifspec$set( MemoryAddress x) {
        constants$1234.__MIDL_itf_urlmon_0000_0054_v0_0_c_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1234.__MIDL_itf_urlmon_0000_0054_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0054_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_urlmon_0000_0054_v0_0_s_ifspec$LAYOUT() {
        return constants$1235.__MIDL_itf_urlmon_0000_0054_v0_0_s_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_urlmon_0000_0054_v0_0_s_ifspec$VH() {
        return constants$1235.__MIDL_itf_urlmon_0000_0054_v0_0_s_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_urlmon_0000_0054_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1235.__MIDL_itf_urlmon_0000_0054_v0_0_s_ifspec$SEGMENT,"__MIDL_itf_urlmon_0000_0054_v0_0_s_ifspec");
    }
    public static MemoryAddress __MIDL_itf_urlmon_0000_0054_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1235.__MIDL_itf_urlmon_0000_0054_v0_0_s_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1235.__MIDL_itf_urlmon_0000_0054_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0054_v0_0_s_ifspec"));
    }
    public static void __MIDL_itf_urlmon_0000_0054_v0_0_s_ifspec$set( MemoryAddress x) {
        constants$1235.__MIDL_itf_urlmon_0000_0054_v0_0_s_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1235.__MIDL_itf_urlmon_0000_0054_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0054_v0_0_s_ifspec"), x);
    }
    public static MemorySegment IID_IBindHttpSecurity$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1235.IID_IBindHttpSecurity$SEGMENT,"IID_IBindHttpSecurity");
    }
    public static MemoryLayout __MIDL_itf_urlmon_0000_0055_v0_0_c_ifspec$LAYOUT() {
        return constants$1235.__MIDL_itf_urlmon_0000_0055_v0_0_c_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_urlmon_0000_0055_v0_0_c_ifspec$VH() {
        return constants$1235.__MIDL_itf_urlmon_0000_0055_v0_0_c_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_urlmon_0000_0055_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1235.__MIDL_itf_urlmon_0000_0055_v0_0_c_ifspec$SEGMENT,"__MIDL_itf_urlmon_0000_0055_v0_0_c_ifspec");
    }
    public static MemoryAddress __MIDL_itf_urlmon_0000_0055_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1235.__MIDL_itf_urlmon_0000_0055_v0_0_c_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1235.__MIDL_itf_urlmon_0000_0055_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0055_v0_0_c_ifspec"));
    }
    public static void __MIDL_itf_urlmon_0000_0055_v0_0_c_ifspec$set( MemoryAddress x) {
        constants$1235.__MIDL_itf_urlmon_0000_0055_v0_0_c_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1235.__MIDL_itf_urlmon_0000_0055_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0055_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_urlmon_0000_0055_v0_0_s_ifspec$LAYOUT() {
        return constants$1235.__MIDL_itf_urlmon_0000_0055_v0_0_s_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_urlmon_0000_0055_v0_0_s_ifspec$VH() {
        return constants$1235.__MIDL_itf_urlmon_0000_0055_v0_0_s_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_urlmon_0000_0055_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1235.__MIDL_itf_urlmon_0000_0055_v0_0_s_ifspec$SEGMENT,"__MIDL_itf_urlmon_0000_0055_v0_0_s_ifspec");
    }
    public static MemoryAddress __MIDL_itf_urlmon_0000_0055_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1235.__MIDL_itf_urlmon_0000_0055_v0_0_s_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1235.__MIDL_itf_urlmon_0000_0055_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0055_v0_0_s_ifspec"));
    }
    public static void __MIDL_itf_urlmon_0000_0055_v0_0_s_ifspec$set( MemoryAddress x) {
        constants$1235.__MIDL_itf_urlmon_0000_0055_v0_0_s_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1235.__MIDL_itf_urlmon_0000_0055_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_urlmon_0000_0055_v0_0_s_ifspec"), x);
    }
    public static MethodHandle IBinding_GetBindResult_Proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$1235.IBinding_GetBindResult_Proxy$MH,"IBinding_GetBindResult_Proxy");
    }
    public static int IBinding_GetBindResult_Proxy ( Addressable This,  Addressable pclsidProtocol,  Addressable pdwResult,  Addressable pszResult,  Addressable pdwReserved) {
        var mh$ = IBinding_GetBindResult_Proxy$MH();
        try {
            return (int)mh$.invokeExact(This, pclsidProtocol, pdwResult, pszResult, pdwReserved);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IBinding_GetBindResult_Stub$MH() {
        return RuntimeHelper.requireNonNull(constants$1235.IBinding_GetBindResult_Stub$MH,"IBinding_GetBindResult_Stub");
    }
    public static int IBinding_GetBindResult_Stub ( Addressable This,  Addressable pclsidProtocol,  Addressable pdwResult,  Addressable pszResult,  int dwReserved) {
        var mh$ = IBinding_GetBindResult_Stub$MH();
        try {
            return (int)mh$.invokeExact(This, pclsidProtocol, pdwResult, pszResult, dwReserved);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IBindStatusCallback_GetBindInfo_Proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$1236.IBindStatusCallback_GetBindInfo_Proxy$MH,"IBindStatusCallback_GetBindInfo_Proxy");
    }
    public static int IBindStatusCallback_GetBindInfo_Proxy ( Addressable This,  Addressable grfBINDF,  Addressable pbindinfo) {
        var mh$ = IBindStatusCallback_GetBindInfo_Proxy$MH();
        try {
            return (int)mh$.invokeExact(This, grfBINDF, pbindinfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IBindStatusCallback_GetBindInfo_Stub$MH() {
        return RuntimeHelper.requireNonNull(constants$1236.IBindStatusCallback_GetBindInfo_Stub$MH,"IBindStatusCallback_GetBindInfo_Stub");
    }
    public static int IBindStatusCallback_GetBindInfo_Stub ( Addressable This,  Addressable grfBINDF,  Addressable pbindinfo,  Addressable pstgmed) {
        var mh$ = IBindStatusCallback_GetBindInfo_Stub$MH();
        try {
            return (int)mh$.invokeExact(This, grfBINDF, pbindinfo, pstgmed);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IBindStatusCallback_OnDataAvailable_Proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$1236.IBindStatusCallback_OnDataAvailable_Proxy$MH,"IBindStatusCallback_OnDataAvailable_Proxy");
    }
    public static int IBindStatusCallback_OnDataAvailable_Proxy ( Addressable This,  int grfBSCF,  int dwSize,  Addressable pformatetc,  Addressable pstgmed) {
        var mh$ = IBindStatusCallback_OnDataAvailable_Proxy$MH();
        try {
            return (int)mh$.invokeExact(This, grfBSCF, dwSize, pformatetc, pstgmed);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IBindStatusCallback_OnDataAvailable_Stub$MH() {
        return RuntimeHelper.requireNonNull(constants$1236.IBindStatusCallback_OnDataAvailable_Stub$MH,"IBindStatusCallback_OnDataAvailable_Stub");
    }
    public static int IBindStatusCallback_OnDataAvailable_Stub ( Addressable This,  int grfBSCF,  int dwSize,  Addressable pformatetc,  Addressable pstgmed) {
        var mh$ = IBindStatusCallback_OnDataAvailable_Stub$MH();
        try {
            return (int)mh$.invokeExact(This, grfBSCF, dwSize, pformatetc, pstgmed);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IBindStatusCallbackEx_GetBindInfoEx_Proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$1236.IBindStatusCallbackEx_GetBindInfoEx_Proxy$MH,"IBindStatusCallbackEx_GetBindInfoEx_Proxy");
    }
    public static int IBindStatusCallbackEx_GetBindInfoEx_Proxy ( Addressable This,  Addressable grfBINDF,  Addressable pbindinfo,  Addressable grfBINDF2,  Addressable pdwReserved) {
        var mh$ = IBindStatusCallbackEx_GetBindInfoEx_Proxy$MH();
        try {
            return (int)mh$.invokeExact(This, grfBINDF, pbindinfo, grfBINDF2, pdwReserved);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IBindStatusCallbackEx_GetBindInfoEx_Stub$MH() {
        return RuntimeHelper.requireNonNull(constants$1236.IBindStatusCallbackEx_GetBindInfoEx_Stub$MH,"IBindStatusCallbackEx_GetBindInfoEx_Stub");
    }
    public static int IBindStatusCallbackEx_GetBindInfoEx_Stub ( Addressable This,  Addressable grfBINDF,  Addressable pbindinfo,  Addressable pstgmed,  Addressable grfBINDF2,  Addressable pdwReserved) {
        var mh$ = IBindStatusCallbackEx_GetBindInfoEx_Stub$MH();
        try {
            return (int)mh$.invokeExact(This, grfBINDF, pbindinfo, pstgmed, grfBINDF2, pdwReserved);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IWinInetInfo_QueryOption_Proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$1237.IWinInetInfo_QueryOption_Proxy$MH,"IWinInetInfo_QueryOption_Proxy");
    }
    public static int IWinInetInfo_QueryOption_Proxy ( Addressable This,  int dwOption,  Addressable pBuffer,  Addressable pcbBuf) {
        var mh$ = IWinInetInfo_QueryOption_Proxy$MH();
        try {
            return (int)mh$.invokeExact(This, dwOption, pBuffer, pcbBuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IWinInetInfo_QueryOption_Stub$MH() {
        return RuntimeHelper.requireNonNull(constants$1237.IWinInetInfo_QueryOption_Stub$MH,"IWinInetInfo_QueryOption_Stub");
    }
    public static int IWinInetInfo_QueryOption_Stub ( Addressable This,  int dwOption,  Addressable pBuffer,  Addressable pcbBuf) {
        var mh$ = IWinInetInfo_QueryOption_Stub$MH();
        try {
            return (int)mh$.invokeExact(This, dwOption, pBuffer, pcbBuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IWinInetHttpInfo_QueryInfo_Proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$1237.IWinInetHttpInfo_QueryInfo_Proxy$MH,"IWinInetHttpInfo_QueryInfo_Proxy");
    }
    public static int IWinInetHttpInfo_QueryInfo_Proxy ( Addressable This,  int dwOption,  Addressable pBuffer,  Addressable pcbBuf,  Addressable pdwFlags,  Addressable pdwReserved) {
        var mh$ = IWinInetHttpInfo_QueryInfo_Proxy$MH();
        try {
            return (int)mh$.invokeExact(This, dwOption, pBuffer, pcbBuf, pdwFlags, pdwReserved);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IWinInetHttpInfo_QueryInfo_Stub$MH() {
        return RuntimeHelper.requireNonNull(constants$1237.IWinInetHttpInfo_QueryInfo_Stub$MH,"IWinInetHttpInfo_QueryInfo_Stub");
    }
    public static int IWinInetHttpInfo_QueryInfo_Stub ( Addressable This,  int dwOption,  Addressable pBuffer,  Addressable pcbBuf,  Addressable pdwFlags,  Addressable pdwReserved) {
        var mh$ = IWinInetHttpInfo_QueryInfo_Stub$MH();
        try {
            return (int)mh$.invokeExact(This, dwOption, pBuffer, pcbBuf, pdwFlags, pdwReserved);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IBindHost_MonikerBindToStorage_Proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$1237.IBindHost_MonikerBindToStorage_Proxy$MH,"IBindHost_MonikerBindToStorage_Proxy");
    }
    public static int IBindHost_MonikerBindToStorage_Proxy ( Addressable This,  Addressable pMk,  Addressable pBC,  Addressable pBSC,  Addressable riid,  Addressable ppvObj) {
        var mh$ = IBindHost_MonikerBindToStorage_Proxy$MH();
        try {
            return (int)mh$.invokeExact(This, pMk, pBC, pBSC, riid, ppvObj);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IBindHost_MonikerBindToStorage_Stub$MH() {
        return RuntimeHelper.requireNonNull(constants$1237.IBindHost_MonikerBindToStorage_Stub$MH,"IBindHost_MonikerBindToStorage_Stub");
    }
    public static int IBindHost_MonikerBindToStorage_Stub ( Addressable This,  Addressable pMk,  Addressable pBC,  Addressable pBSC,  Addressable riid,  Addressable ppvObj) {
        var mh$ = IBindHost_MonikerBindToStorage_Stub$MH();
        try {
            return (int)mh$.invokeExact(This, pMk, pBC, pBSC, riid, ppvObj);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IBindHost_MonikerBindToObject_Proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$1238.IBindHost_MonikerBindToObject_Proxy$MH,"IBindHost_MonikerBindToObject_Proxy");
    }
    public static int IBindHost_MonikerBindToObject_Proxy ( Addressable This,  Addressable pMk,  Addressable pBC,  Addressable pBSC,  Addressable riid,  Addressable ppvObj) {
        var mh$ = IBindHost_MonikerBindToObject_Proxy$MH();
        try {
            return (int)mh$.invokeExact(This, pMk, pBC, pBSC, riid, ppvObj);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IBindHost_MonikerBindToObject_Stub$MH() {
        return RuntimeHelper.requireNonNull(constants$1238.IBindHost_MonikerBindToObject_Stub$MH,"IBindHost_MonikerBindToObject_Stub");
    }
    public static int IBindHost_MonikerBindToObject_Stub ( Addressable This,  Addressable pMk,  Addressable pBC,  Addressable pBSC,  Addressable riid,  Addressable ppvObj) {
        var mh$ = IBindHost_MonikerBindToObject_Stub$MH();
        try {
            return (int)mh$.invokeExact(This, pMk, pBC, pBSC, riid, ppvObj);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int PIDMSI_STATUS_NORMAL() {
        return (int)0L;
    }
    public static int PIDMSI_STATUS_NEW() {
        return (int)1L;
    }
    public static int PIDMSI_STATUS_PRELIM() {
        return (int)2L;
    }
    public static int PIDMSI_STATUS_DRAFT() {
        return (int)3L;
    }
    public static int PIDMSI_STATUS_INPROGRESS() {
        return (int)4L;
    }
    public static int PIDMSI_STATUS_EDIT() {
        return (int)5L;
    }
    public static int PIDMSI_STATUS_REVIEW() {
        return (int)6L;
    }
    public static int PIDMSI_STATUS_PROOF() {
        return (int)7L;
    }
    public static int PIDMSI_STATUS_FINAL() {
        return (int)8L;
    }
    public static int PIDMSI_STATUS_OTHER() {
        return (int)32767L;
    }
    public static MethodHandle StgConvertVariantToProperty$MH() {
        return RuntimeHelper.requireNonNull(constants$1238.StgConvertVariantToProperty$MH,"StgConvertVariantToProperty");
    }
    public static MemoryAddress StgConvertVariantToProperty ( Addressable pvar,  short CodePage,  Addressable pprop,  Addressable pcb,  int pid,  byte fReserved,  Addressable pcIndirect) {
        var mh$ = StgConvertVariantToProperty$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(pvar, CodePage, pprop, pcb, pid, fReserved, pcIndirect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MemoryLayout __MIDL_itf_propidl_0000_0004_v0_0_c_ifspec$LAYOUT() {
        return constants$1238.__MIDL_itf_propidl_0000_0004_v0_0_c_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_propidl_0000_0004_v0_0_c_ifspec$VH() {
        return constants$1238.__MIDL_itf_propidl_0000_0004_v0_0_c_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_propidl_0000_0004_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1238.__MIDL_itf_propidl_0000_0004_v0_0_c_ifspec$SEGMENT,"__MIDL_itf_propidl_0000_0004_v0_0_c_ifspec");
    }
    public static MemoryAddress __MIDL_itf_propidl_0000_0004_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1238.__MIDL_itf_propidl_0000_0004_v0_0_c_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1238.__MIDL_itf_propidl_0000_0004_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_propidl_0000_0004_v0_0_c_ifspec"));
    }
    public static void __MIDL_itf_propidl_0000_0004_v0_0_c_ifspec$set( MemoryAddress x) {
        constants$1238.__MIDL_itf_propidl_0000_0004_v0_0_c_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1238.__MIDL_itf_propidl_0000_0004_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_propidl_0000_0004_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_propidl_0000_0004_v0_0_s_ifspec$LAYOUT() {
        return constants$1238.__MIDL_itf_propidl_0000_0004_v0_0_s_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_propidl_0000_0004_v0_0_s_ifspec$VH() {
        return constants$1238.__MIDL_itf_propidl_0000_0004_v0_0_s_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_propidl_0000_0004_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1238.__MIDL_itf_propidl_0000_0004_v0_0_s_ifspec$SEGMENT,"__MIDL_itf_propidl_0000_0004_v0_0_s_ifspec");
    }
    public static MemoryAddress __MIDL_itf_propidl_0000_0004_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1238.__MIDL_itf_propidl_0000_0004_v0_0_s_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1238.__MIDL_itf_propidl_0000_0004_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_propidl_0000_0004_v0_0_s_ifspec"));
    }
    public static void __MIDL_itf_propidl_0000_0004_v0_0_s_ifspec$set( MemoryAddress x) {
        constants$1238.__MIDL_itf_propidl_0000_0004_v0_0_s_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1238.__MIDL_itf_propidl_0000_0004_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_propidl_0000_0004_v0_0_s_ifspec"), x);
    }
    public static MethodHandle CreateStdProgressIndicator$MH() {
        return RuntimeHelper.requireNonNull(constants$1238.CreateStdProgressIndicator$MH,"CreateStdProgressIndicator");
    }
    public static int CreateStdProgressIndicator ( Addressable hwndParent,  Addressable pszTitle,  Addressable pIbscCaller,  Addressable ppIbsc) {
        var mh$ = CreateStdProgressIndicator$MH();
        try {
            return (int)mh$.invokeExact(hwndParent, pszTitle, pIbscCaller, ppIbsc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MemorySegment IID_StdOle$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1239.IID_StdOle$SEGMENT,"IID_StdOle");
    }
    public static MethodHandle SysAllocString$MH() {
        return RuntimeHelper.requireNonNull(constants$1239.SysAllocString$MH,"SysAllocString");
    }
    public static MemoryAddress SysAllocString ( Addressable psz) {
        var mh$ = SysAllocString$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(psz);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SysReAllocString$MH() {
        return RuntimeHelper.requireNonNull(constants$1239.SysReAllocString$MH,"SysReAllocString");
    }
    public static int SysReAllocString ( Addressable pbstr,  Addressable psz) {
        var mh$ = SysReAllocString$MH();
        try {
            return (int)mh$.invokeExact(pbstr, psz);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SysAllocStringLen$MH() {
        return RuntimeHelper.requireNonNull(constants$1239.SysAllocStringLen$MH,"SysAllocStringLen");
    }
    public static MemoryAddress SysAllocStringLen ( Addressable strIn,  int ui) {
        var mh$ = SysAllocStringLen$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(strIn, ui);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SysReAllocStringLen$MH() {
        return RuntimeHelper.requireNonNull(constants$1239.SysReAllocStringLen$MH,"SysReAllocStringLen");
    }
    public static int SysReAllocStringLen ( Addressable pbstr,  Addressable psz,  int len) {
        var mh$ = SysReAllocStringLen$MH();
        try {
            return (int)mh$.invokeExact(pbstr, psz, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SysAddRefString$MH() {
        return RuntimeHelper.requireNonNull(constants$1239.SysAddRefString$MH,"SysAddRefString");
    }
    public static int SysAddRefString ( Addressable bstrString) {
        var mh$ = SysAddRefString$MH();
        try {
            return (int)mh$.invokeExact(bstrString);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SysReleaseString$MH() {
        return RuntimeHelper.requireNonNull(constants$1240.SysReleaseString$MH,"SysReleaseString");
    }
    public static void SysReleaseString ( Addressable bstrString) {
        var mh$ = SysReleaseString$MH();
        try {
            mh$.invokeExact(bstrString);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SysFreeString$MH() {
        return RuntimeHelper.requireNonNull(constants$1240.SysFreeString$MH,"SysFreeString");
    }
    public static void SysFreeString ( Addressable bstrString) {
        var mh$ = SysFreeString$MH();
        try {
            mh$.invokeExact(bstrString);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SysStringLen$MH() {
        return RuntimeHelper.requireNonNull(constants$1240.SysStringLen$MH,"SysStringLen");
    }
    public static int SysStringLen ( Addressable pbstr) {
        var mh$ = SysStringLen$MH();
        try {
            return (int)mh$.invokeExact(pbstr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SysStringByteLen$MH() {
        return RuntimeHelper.requireNonNull(constants$1240.SysStringByteLen$MH,"SysStringByteLen");
    }
    public static int SysStringByteLen ( Addressable bstr) {
        var mh$ = SysStringByteLen$MH();
        try {
            return (int)mh$.invokeExact(bstr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SysAllocStringByteLen$MH() {
        return RuntimeHelper.requireNonNull(constants$1240.SysAllocStringByteLen$MH,"SysAllocStringByteLen");
    }
    public static MemoryAddress SysAllocStringByteLen ( Addressable psz,  int len) {
        var mh$ = SysAllocStringByteLen$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(psz, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DosDateTimeToVariantTime$MH() {
        return RuntimeHelper.requireNonNull(constants$1240.DosDateTimeToVariantTime$MH,"DosDateTimeToVariantTime");
    }
    public static int DosDateTimeToVariantTime ( short wDosDate,  short wDosTime,  Addressable pvtime) {
        var mh$ = DosDateTimeToVariantTime$MH();
        try {
            return (int)mh$.invokeExact(wDosDate, wDosTime, pvtime);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VariantTimeToDosDateTime$MH() {
        return RuntimeHelper.requireNonNull(constants$1241.VariantTimeToDosDateTime$MH,"VariantTimeToDosDateTime");
    }
    public static int VariantTimeToDosDateTime ( double vtime,  Addressable pwDosDate,  Addressable pwDosTime) {
        var mh$ = VariantTimeToDosDateTime$MH();
        try {
            return (int)mh$.invokeExact(vtime, pwDosDate, pwDosTime);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SystemTimeToVariantTime$MH() {
        return RuntimeHelper.requireNonNull(constants$1241.SystemTimeToVariantTime$MH,"SystemTimeToVariantTime");
    }
    public static int SystemTimeToVariantTime ( Addressable lpSystemTime,  Addressable pvtime) {
        var mh$ = SystemTimeToVariantTime$MH();
        try {
            return (int)mh$.invokeExact(lpSystemTime, pvtime);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VariantTimeToSystemTime$MH() {
        return RuntimeHelper.requireNonNull(constants$1241.VariantTimeToSystemTime$MH,"VariantTimeToSystemTime");
    }
    public static int VariantTimeToSystemTime ( double vtime,  Addressable lpSystemTime) {
        var mh$ = VariantTimeToSystemTime$MH();
        try {
            return (int)mh$.invokeExact(vtime, lpSystemTime);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SafeArrayAllocDescriptor$MH() {
        return RuntimeHelper.requireNonNull(constants$1241.SafeArrayAllocDescriptor$MH,"SafeArrayAllocDescriptor");
    }
    public static int SafeArrayAllocDescriptor ( int cDims,  Addressable ppsaOut) {
        var mh$ = SafeArrayAllocDescriptor$MH();
        try {
            return (int)mh$.invokeExact(cDims, ppsaOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SafeArrayAllocDescriptorEx$MH() {
        return RuntimeHelper.requireNonNull(constants$1241.SafeArrayAllocDescriptorEx$MH,"SafeArrayAllocDescriptorEx");
    }
    public static int SafeArrayAllocDescriptorEx ( short vt,  int cDims,  Addressable ppsaOut) {
        var mh$ = SafeArrayAllocDescriptorEx$MH();
        try {
            return (int)mh$.invokeExact(vt, cDims, ppsaOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SafeArrayAllocData$MH() {
        return RuntimeHelper.requireNonNull(constants$1241.SafeArrayAllocData$MH,"SafeArrayAllocData");
    }
    public static int SafeArrayAllocData ( Addressable psa) {
        var mh$ = SafeArrayAllocData$MH();
        try {
            return (int)mh$.invokeExact(psa);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SafeArrayCreate$MH() {
        return RuntimeHelper.requireNonNull(constants$1242.SafeArrayCreate$MH,"SafeArrayCreate");
    }
    public static MemoryAddress SafeArrayCreate ( short vt,  int cDims,  Addressable rgsabound) {
        var mh$ = SafeArrayCreate$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(vt, cDims, rgsabound);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SafeArrayCreateEx$MH() {
        return RuntimeHelper.requireNonNull(constants$1242.SafeArrayCreateEx$MH,"SafeArrayCreateEx");
    }
    public static MemoryAddress SafeArrayCreateEx ( short vt,  int cDims,  Addressable rgsabound,  Addressable pvExtra) {
        var mh$ = SafeArrayCreateEx$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(vt, cDims, rgsabound, pvExtra);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SafeArrayCopyData$MH() {
        return RuntimeHelper.requireNonNull(constants$1242.SafeArrayCopyData$MH,"SafeArrayCopyData");
    }
    public static int SafeArrayCopyData ( Addressable psaSource,  Addressable psaTarget) {
        var mh$ = SafeArrayCopyData$MH();
        try {
            return (int)mh$.invokeExact(psaSource, psaTarget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SafeArrayReleaseDescriptor$MH() {
        return RuntimeHelper.requireNonNull(constants$1242.SafeArrayReleaseDescriptor$MH,"SafeArrayReleaseDescriptor");
    }
    public static void SafeArrayReleaseDescriptor ( Addressable psa) {
        var mh$ = SafeArrayReleaseDescriptor$MH();
        try {
            mh$.invokeExact(psa);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SafeArrayDestroyDescriptor$MH() {
        return RuntimeHelper.requireNonNull(constants$1242.SafeArrayDestroyDescriptor$MH,"SafeArrayDestroyDescriptor");
    }
    public static int SafeArrayDestroyDescriptor ( Addressable psa) {
        var mh$ = SafeArrayDestroyDescriptor$MH();
        try {
            return (int)mh$.invokeExact(psa);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SafeArrayReleaseData$MH() {
        return RuntimeHelper.requireNonNull(constants$1242.SafeArrayReleaseData$MH,"SafeArrayReleaseData");
    }
    public static void SafeArrayReleaseData ( Addressable pData) {
        var mh$ = SafeArrayReleaseData$MH();
        try {
            mh$.invokeExact(pData);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SafeArrayDestroyData$MH() {
        return RuntimeHelper.requireNonNull(constants$1243.SafeArrayDestroyData$MH,"SafeArrayDestroyData");
    }
    public static int SafeArrayDestroyData ( Addressable psa) {
        var mh$ = SafeArrayDestroyData$MH();
        try {
            return (int)mh$.invokeExact(psa);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SafeArrayAddRef$MH() {
        return RuntimeHelper.requireNonNull(constants$1243.SafeArrayAddRef$MH,"SafeArrayAddRef");
    }
    public static int SafeArrayAddRef ( Addressable psa,  Addressable ppDataToRelease) {
        var mh$ = SafeArrayAddRef$MH();
        try {
            return (int)mh$.invokeExact(psa, ppDataToRelease);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SafeArrayDestroy$MH() {
        return RuntimeHelper.requireNonNull(constants$1243.SafeArrayDestroy$MH,"SafeArrayDestroy");
    }
    public static int SafeArrayDestroy ( Addressable psa) {
        var mh$ = SafeArrayDestroy$MH();
        try {
            return (int)mh$.invokeExact(psa);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SafeArrayRedim$MH() {
        return RuntimeHelper.requireNonNull(constants$1243.SafeArrayRedim$MH,"SafeArrayRedim");
    }
    public static int SafeArrayRedim ( Addressable psa,  Addressable psaboundNew) {
        var mh$ = SafeArrayRedim$MH();
        try {
            return (int)mh$.invokeExact(psa, psaboundNew);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SafeArrayGetDim$MH() {
        return RuntimeHelper.requireNonNull(constants$1243.SafeArrayGetDim$MH,"SafeArrayGetDim");
    }
    public static int SafeArrayGetDim ( Addressable psa) {
        var mh$ = SafeArrayGetDim$MH();
        try {
            return (int)mh$.invokeExact(psa);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SafeArrayGetElemsize$MH() {
        return RuntimeHelper.requireNonNull(constants$1243.SafeArrayGetElemsize$MH,"SafeArrayGetElemsize");
    }
    public static int SafeArrayGetElemsize ( Addressable psa) {
        var mh$ = SafeArrayGetElemsize$MH();
        try {
            return (int)mh$.invokeExact(psa);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SafeArrayGetUBound$MH() {
        return RuntimeHelper.requireNonNull(constants$1244.SafeArrayGetUBound$MH,"SafeArrayGetUBound");
    }
    public static int SafeArrayGetUBound ( Addressable psa,  int nDim,  Addressable plUbound) {
        var mh$ = SafeArrayGetUBound$MH();
        try {
            return (int)mh$.invokeExact(psa, nDim, plUbound);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SafeArrayGetLBound$MH() {
        return RuntimeHelper.requireNonNull(constants$1244.SafeArrayGetLBound$MH,"SafeArrayGetLBound");
    }
    public static int SafeArrayGetLBound ( Addressable psa,  int nDim,  Addressable plLbound) {
        var mh$ = SafeArrayGetLBound$MH();
        try {
            return (int)mh$.invokeExact(psa, nDim, plLbound);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SafeArrayLock$MH() {
        return RuntimeHelper.requireNonNull(constants$1244.SafeArrayLock$MH,"SafeArrayLock");
    }
    public static int SafeArrayLock ( Addressable psa) {
        var mh$ = SafeArrayLock$MH();
        try {
            return (int)mh$.invokeExact(psa);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SafeArrayUnlock$MH() {
        return RuntimeHelper.requireNonNull(constants$1244.SafeArrayUnlock$MH,"SafeArrayUnlock");
    }
    public static int SafeArrayUnlock ( Addressable psa) {
        var mh$ = SafeArrayUnlock$MH();
        try {
            return (int)mh$.invokeExact(psa);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SafeArrayAccessData$MH() {
        return RuntimeHelper.requireNonNull(constants$1244.SafeArrayAccessData$MH,"SafeArrayAccessData");
    }
    public static int SafeArrayAccessData ( Addressable psa,  Addressable ppvData) {
        var mh$ = SafeArrayAccessData$MH();
        try {
            return (int)mh$.invokeExact(psa, ppvData);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SafeArrayUnaccessData$MH() {
        return RuntimeHelper.requireNonNull(constants$1244.SafeArrayUnaccessData$MH,"SafeArrayUnaccessData");
    }
    public static int SafeArrayUnaccessData ( Addressable psa) {
        var mh$ = SafeArrayUnaccessData$MH();
        try {
            return (int)mh$.invokeExact(psa);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SafeArrayGetElement$MH() {
        return RuntimeHelper.requireNonNull(constants$1245.SafeArrayGetElement$MH,"SafeArrayGetElement");
    }
    public static int SafeArrayGetElement ( Addressable psa,  Addressable rgIndices,  Addressable pv) {
        var mh$ = SafeArrayGetElement$MH();
        try {
            return (int)mh$.invokeExact(psa, rgIndices, pv);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SafeArrayPutElement$MH() {
        return RuntimeHelper.requireNonNull(constants$1245.SafeArrayPutElement$MH,"SafeArrayPutElement");
    }
    public static int SafeArrayPutElement ( Addressable psa,  Addressable rgIndices,  Addressable pv) {
        var mh$ = SafeArrayPutElement$MH();
        try {
            return (int)mh$.invokeExact(psa, rgIndices, pv);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SafeArrayCopy$MH() {
        return RuntimeHelper.requireNonNull(constants$1245.SafeArrayCopy$MH,"SafeArrayCopy");
    }
    public static int SafeArrayCopy ( Addressable psa,  Addressable ppsaOut) {
        var mh$ = SafeArrayCopy$MH();
        try {
            return (int)mh$.invokeExact(psa, ppsaOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SafeArrayPtrOfIndex$MH() {
        return RuntimeHelper.requireNonNull(constants$1245.SafeArrayPtrOfIndex$MH,"SafeArrayPtrOfIndex");
    }
    public static int SafeArrayPtrOfIndex ( Addressable psa,  Addressable rgIndices,  Addressable ppvData) {
        var mh$ = SafeArrayPtrOfIndex$MH();
        try {
            return (int)mh$.invokeExact(psa, rgIndices, ppvData);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SafeArraySetRecordInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$1245.SafeArraySetRecordInfo$MH,"SafeArraySetRecordInfo");
    }
    public static int SafeArraySetRecordInfo ( Addressable psa,  Addressable prinfo) {
        var mh$ = SafeArraySetRecordInfo$MH();
        try {
            return (int)mh$.invokeExact(psa, prinfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SafeArrayGetRecordInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$1245.SafeArrayGetRecordInfo$MH,"SafeArrayGetRecordInfo");
    }
    public static int SafeArrayGetRecordInfo ( Addressable psa,  Addressable prinfo) {
        var mh$ = SafeArrayGetRecordInfo$MH();
        try {
            return (int)mh$.invokeExact(psa, prinfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SafeArraySetIID$MH() {
        return RuntimeHelper.requireNonNull(constants$1246.SafeArraySetIID$MH,"SafeArraySetIID");
    }
    public static int SafeArraySetIID ( Addressable psa,  Addressable guid) {
        var mh$ = SafeArraySetIID$MH();
        try {
            return (int)mh$.invokeExact(psa, guid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SafeArrayGetIID$MH() {
        return RuntimeHelper.requireNonNull(constants$1246.SafeArrayGetIID$MH,"SafeArrayGetIID");
    }
    public static int SafeArrayGetIID ( Addressable psa,  Addressable pguid) {
        var mh$ = SafeArrayGetIID$MH();
        try {
            return (int)mh$.invokeExact(psa, pguid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SafeArrayGetVartype$MH() {
        return RuntimeHelper.requireNonNull(constants$1246.SafeArrayGetVartype$MH,"SafeArrayGetVartype");
    }
    public static int SafeArrayGetVartype ( Addressable psa,  Addressable pvt) {
        var mh$ = SafeArrayGetVartype$MH();
        try {
            return (int)mh$.invokeExact(psa, pvt);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SafeArrayCreateVector$MH() {
        return RuntimeHelper.requireNonNull(constants$1246.SafeArrayCreateVector$MH,"SafeArrayCreateVector");
    }
    public static MemoryAddress SafeArrayCreateVector ( short vt,  int lLbound,  int cElements) {
        var mh$ = SafeArrayCreateVector$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(vt, lLbound, cElements);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SafeArrayCreateVectorEx$MH() {
        return RuntimeHelper.requireNonNull(constants$1246.SafeArrayCreateVectorEx$MH,"SafeArrayCreateVectorEx");
    }
    public static MemoryAddress SafeArrayCreateVectorEx ( short vt,  int lLbound,  int cElements,  Addressable pvExtra) {
        var mh$ = SafeArrayCreateVectorEx$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(vt, lLbound, cElements, pvExtra);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VariantInit$MH() {
        return RuntimeHelper.requireNonNull(constants$1246.VariantInit$MH,"VariantInit");
    }
    public static void VariantInit ( Addressable pvarg) {
        var mh$ = VariantInit$MH();
        try {
            mh$.invokeExact(pvarg);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VariantClear$MH() {
        return RuntimeHelper.requireNonNull(constants$1247.VariantClear$MH,"VariantClear");
    }
    public static int VariantClear ( Addressable pvarg) {
        var mh$ = VariantClear$MH();
        try {
            return (int)mh$.invokeExact(pvarg);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VariantCopy$MH() {
        return RuntimeHelper.requireNonNull(constants$1247.VariantCopy$MH,"VariantCopy");
    }
    public static int VariantCopy ( Addressable pvargDest,  Addressable pvargSrc) {
        var mh$ = VariantCopy$MH();
        try {
            return (int)mh$.invokeExact(pvargDest, pvargSrc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VariantCopyInd$MH() {
        return RuntimeHelper.requireNonNull(constants$1247.VariantCopyInd$MH,"VariantCopyInd");
    }
    public static int VariantCopyInd ( Addressable pvarDest,  Addressable pvargSrc) {
        var mh$ = VariantCopyInd$MH();
        try {
            return (int)mh$.invokeExact(pvarDest, pvargSrc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VariantChangeType$MH() {
        return RuntimeHelper.requireNonNull(constants$1247.VariantChangeType$MH,"VariantChangeType");
    }
    public static int VariantChangeType ( Addressable pvargDest,  Addressable pvarSrc,  short wFlags,  short vt) {
        var mh$ = VariantChangeType$MH();
        try {
            return (int)mh$.invokeExact(pvargDest, pvarSrc, wFlags, vt);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VariantChangeTypeEx$MH() {
        return RuntimeHelper.requireNonNull(constants$1247.VariantChangeTypeEx$MH,"VariantChangeTypeEx");
    }
    public static int VariantChangeTypeEx ( Addressable pvargDest,  Addressable pvarSrc,  int lcid,  short wFlags,  short vt) {
        var mh$ = VariantChangeTypeEx$MH();
        try {
            return (int)mh$.invokeExact(pvargDest, pvarSrc, lcid, wFlags, vt);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VectorFromBstr$MH() {
        return RuntimeHelper.requireNonNull(constants$1247.VectorFromBstr$MH,"VectorFromBstr");
    }
    public static int VectorFromBstr ( Addressable bstr,  Addressable ppsa) {
        var mh$ = VectorFromBstr$MH();
        try {
            return (int)mh$.invokeExact(bstr, ppsa);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle BstrFromVector$MH() {
        return RuntimeHelper.requireNonNull(constants$1248.BstrFromVector$MH,"BstrFromVector");
    }
    public static int BstrFromVector ( Addressable psa,  Addressable pbstr) {
        var mh$ = BstrFromVector$MH();
        try {
            return (int)mh$.invokeExact(psa, pbstr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI1FromI2$MH() {
        return RuntimeHelper.requireNonNull(constants$1248.VarUI1FromI2$MH,"VarUI1FromI2");
    }
    public static int VarUI1FromI2 ( short sIn,  Addressable pbOut) {
        var mh$ = VarUI1FromI2$MH();
        try {
            return (int)mh$.invokeExact(sIn, pbOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI1FromI4$MH() {
        return RuntimeHelper.requireNonNull(constants$1248.VarUI1FromI4$MH,"VarUI1FromI4");
    }
    public static int VarUI1FromI4 ( int lIn,  Addressable pbOut) {
        var mh$ = VarUI1FromI4$MH();
        try {
            return (int)mh$.invokeExact(lIn, pbOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI1FromI8$MH() {
        return RuntimeHelper.requireNonNull(constants$1248.VarUI1FromI8$MH,"VarUI1FromI8");
    }
    public static int VarUI1FromI8 ( long i64In,  Addressable pbOut) {
        var mh$ = VarUI1FromI8$MH();
        try {
            return (int)mh$.invokeExact(i64In, pbOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI1FromR4$MH() {
        return RuntimeHelper.requireNonNull(constants$1248.VarUI1FromR4$MH,"VarUI1FromR4");
    }
    public static int VarUI1FromR4 ( float fltIn,  Addressable pbOut) {
        var mh$ = VarUI1FromR4$MH();
        try {
            return (int)mh$.invokeExact(fltIn, pbOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI1FromR8$MH() {
        return RuntimeHelper.requireNonNull(constants$1248.VarUI1FromR8$MH,"VarUI1FromR8");
    }
    public static int VarUI1FromR8 ( double dblIn,  Addressable pbOut) {
        var mh$ = VarUI1FromR8$MH();
        try {
            return (int)mh$.invokeExact(dblIn, pbOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI1FromCy$MH() {
        return RuntimeHelper.requireNonNull(constants$1249.VarUI1FromCy$MH,"VarUI1FromCy");
    }
    public static int VarUI1FromCy ( MemorySegment cyIn,  Addressable pbOut) {
        var mh$ = VarUI1FromCy$MH();
        try {
            return (int)mh$.invokeExact(cyIn, pbOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI1FromDate$MH() {
        return RuntimeHelper.requireNonNull(constants$1249.VarUI1FromDate$MH,"VarUI1FromDate");
    }
    public static int VarUI1FromDate ( double dateIn,  Addressable pbOut) {
        var mh$ = VarUI1FromDate$MH();
        try {
            return (int)mh$.invokeExact(dateIn, pbOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI1FromStr$MH() {
        return RuntimeHelper.requireNonNull(constants$1249.VarUI1FromStr$MH,"VarUI1FromStr");
    }
    public static int VarUI1FromStr ( Addressable strIn,  int lcid,  int dwFlags,  Addressable pbOut) {
        var mh$ = VarUI1FromStr$MH();
        try {
            return (int)mh$.invokeExact(strIn, lcid, dwFlags, pbOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI1FromDisp$MH() {
        return RuntimeHelper.requireNonNull(constants$1249.VarUI1FromDisp$MH,"VarUI1FromDisp");
    }
    public static int VarUI1FromDisp ( Addressable pdispIn,  int lcid,  Addressable pbOut) {
        var mh$ = VarUI1FromDisp$MH();
        try {
            return (int)mh$.invokeExact(pdispIn, lcid, pbOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI1FromBool$MH() {
        return RuntimeHelper.requireNonNull(constants$1249.VarUI1FromBool$MH,"VarUI1FromBool");
    }
    public static int VarUI1FromBool ( short boolIn,  Addressable pbOut) {
        var mh$ = VarUI1FromBool$MH();
        try {
            return (int)mh$.invokeExact(boolIn, pbOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI1FromI1$MH() {
        return RuntimeHelper.requireNonNull(constants$1249.VarUI1FromI1$MH,"VarUI1FromI1");
    }
    public static int VarUI1FromI1 ( byte cIn,  Addressable pbOut) {
        var mh$ = VarUI1FromI1$MH();
        try {
            return (int)mh$.invokeExact(cIn, pbOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI1FromUI2$MH() {
        return RuntimeHelper.requireNonNull(constants$1250.VarUI1FromUI2$MH,"VarUI1FromUI2");
    }
    public static int VarUI1FromUI2 ( short uiIn,  Addressable pbOut) {
        var mh$ = VarUI1FromUI2$MH();
        try {
            return (int)mh$.invokeExact(uiIn, pbOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI1FromUI4$MH() {
        return RuntimeHelper.requireNonNull(constants$1250.VarUI1FromUI4$MH,"VarUI1FromUI4");
    }
    public static int VarUI1FromUI4 ( int ulIn,  Addressable pbOut) {
        var mh$ = VarUI1FromUI4$MH();
        try {
            return (int)mh$.invokeExact(ulIn, pbOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI1FromUI8$MH() {
        return RuntimeHelper.requireNonNull(constants$1250.VarUI1FromUI8$MH,"VarUI1FromUI8");
    }
    public static int VarUI1FromUI8 ( long ui64In,  Addressable pbOut) {
        var mh$ = VarUI1FromUI8$MH();
        try {
            return (int)mh$.invokeExact(ui64In, pbOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI1FromDec$MH() {
        return RuntimeHelper.requireNonNull(constants$1250.VarUI1FromDec$MH,"VarUI1FromDec");
    }
    public static int VarUI1FromDec ( Addressable pdecIn,  Addressable pbOut) {
        var mh$ = VarUI1FromDec$MH();
        try {
            return (int)mh$.invokeExact(pdecIn, pbOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI2FromUI1$MH() {
        return RuntimeHelper.requireNonNull(constants$1250.VarI2FromUI1$MH,"VarI2FromUI1");
    }
    public static int VarI2FromUI1 ( byte bIn,  Addressable psOut) {
        var mh$ = VarI2FromUI1$MH();
        try {
            return (int)mh$.invokeExact(bIn, psOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI2FromI4$MH() {
        return RuntimeHelper.requireNonNull(constants$1250.VarI2FromI4$MH,"VarI2FromI4");
    }
    public static int VarI2FromI4 ( int lIn,  Addressable psOut) {
        var mh$ = VarI2FromI4$MH();
        try {
            return (int)mh$.invokeExact(lIn, psOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI2FromI8$MH() {
        return RuntimeHelper.requireNonNull(constants$1251.VarI2FromI8$MH,"VarI2FromI8");
    }
    public static int VarI2FromI8 ( long i64In,  Addressable psOut) {
        var mh$ = VarI2FromI8$MH();
        try {
            return (int)mh$.invokeExact(i64In, psOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI2FromR4$MH() {
        return RuntimeHelper.requireNonNull(constants$1251.VarI2FromR4$MH,"VarI2FromR4");
    }
    public static int VarI2FromR4 ( float fltIn,  Addressable psOut) {
        var mh$ = VarI2FromR4$MH();
        try {
            return (int)mh$.invokeExact(fltIn, psOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI2FromR8$MH() {
        return RuntimeHelper.requireNonNull(constants$1251.VarI2FromR8$MH,"VarI2FromR8");
    }
    public static int VarI2FromR8 ( double dblIn,  Addressable psOut) {
        var mh$ = VarI2FromR8$MH();
        try {
            return (int)mh$.invokeExact(dblIn, psOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI2FromCy$MH() {
        return RuntimeHelper.requireNonNull(constants$1251.VarI2FromCy$MH,"VarI2FromCy");
    }
    public static int VarI2FromCy ( MemorySegment cyIn,  Addressable psOut) {
        var mh$ = VarI2FromCy$MH();
        try {
            return (int)mh$.invokeExact(cyIn, psOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI2FromDate$MH() {
        return RuntimeHelper.requireNonNull(constants$1251.VarI2FromDate$MH,"VarI2FromDate");
    }
    public static int VarI2FromDate ( double dateIn,  Addressable psOut) {
        var mh$ = VarI2FromDate$MH();
        try {
            return (int)mh$.invokeExact(dateIn, psOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI2FromStr$MH() {
        return RuntimeHelper.requireNonNull(constants$1251.VarI2FromStr$MH,"VarI2FromStr");
    }
    public static int VarI2FromStr ( Addressable strIn,  int lcid,  int dwFlags,  Addressable psOut) {
        var mh$ = VarI2FromStr$MH();
        try {
            return (int)mh$.invokeExact(strIn, lcid, dwFlags, psOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI2FromDisp$MH() {
        return RuntimeHelper.requireNonNull(constants$1252.VarI2FromDisp$MH,"VarI2FromDisp");
    }
    public static int VarI2FromDisp ( Addressable pdispIn,  int lcid,  Addressable psOut) {
        var mh$ = VarI2FromDisp$MH();
        try {
            return (int)mh$.invokeExact(pdispIn, lcid, psOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI2FromBool$MH() {
        return RuntimeHelper.requireNonNull(constants$1252.VarI2FromBool$MH,"VarI2FromBool");
    }
    public static int VarI2FromBool ( short boolIn,  Addressable psOut) {
        var mh$ = VarI2FromBool$MH();
        try {
            return (int)mh$.invokeExact(boolIn, psOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI2FromI1$MH() {
        return RuntimeHelper.requireNonNull(constants$1252.VarI2FromI1$MH,"VarI2FromI1");
    }
    public static int VarI2FromI1 ( byte cIn,  Addressable psOut) {
        var mh$ = VarI2FromI1$MH();
        try {
            return (int)mh$.invokeExact(cIn, psOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI2FromUI2$MH() {
        return RuntimeHelper.requireNonNull(constants$1252.VarI2FromUI2$MH,"VarI2FromUI2");
    }
    public static int VarI2FromUI2 ( short uiIn,  Addressable psOut) {
        var mh$ = VarI2FromUI2$MH();
        try {
            return (int)mh$.invokeExact(uiIn, psOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI2FromUI4$MH() {
        return RuntimeHelper.requireNonNull(constants$1252.VarI2FromUI4$MH,"VarI2FromUI4");
    }
    public static int VarI2FromUI4 ( int ulIn,  Addressable psOut) {
        var mh$ = VarI2FromUI4$MH();
        try {
            return (int)mh$.invokeExact(ulIn, psOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI2FromUI8$MH() {
        return RuntimeHelper.requireNonNull(constants$1252.VarI2FromUI8$MH,"VarI2FromUI8");
    }
    public static int VarI2FromUI8 ( long ui64In,  Addressable psOut) {
        var mh$ = VarI2FromUI8$MH();
        try {
            return (int)mh$.invokeExact(ui64In, psOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI2FromDec$MH() {
        return RuntimeHelper.requireNonNull(constants$1253.VarI2FromDec$MH,"VarI2FromDec");
    }
    public static int VarI2FromDec ( Addressable pdecIn,  Addressable psOut) {
        var mh$ = VarI2FromDec$MH();
        try {
            return (int)mh$.invokeExact(pdecIn, psOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI4FromUI1$MH() {
        return RuntimeHelper.requireNonNull(constants$1253.VarI4FromUI1$MH,"VarI4FromUI1");
    }
    public static int VarI4FromUI1 ( byte bIn,  Addressable plOut) {
        var mh$ = VarI4FromUI1$MH();
        try {
            return (int)mh$.invokeExact(bIn, plOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI4FromI2$MH() {
        return RuntimeHelper.requireNonNull(constants$1253.VarI4FromI2$MH,"VarI4FromI2");
    }
    public static int VarI4FromI2 ( short sIn,  Addressable plOut) {
        var mh$ = VarI4FromI2$MH();
        try {
            return (int)mh$.invokeExact(sIn, plOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI4FromI8$MH() {
        return RuntimeHelper.requireNonNull(constants$1253.VarI4FromI8$MH,"VarI4FromI8");
    }
    public static int VarI4FromI8 ( long i64In,  Addressable plOut) {
        var mh$ = VarI4FromI8$MH();
        try {
            return (int)mh$.invokeExact(i64In, plOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI4FromR4$MH() {
        return RuntimeHelper.requireNonNull(constants$1253.VarI4FromR4$MH,"VarI4FromR4");
    }
    public static int VarI4FromR4 ( float fltIn,  Addressable plOut) {
        var mh$ = VarI4FromR4$MH();
        try {
            return (int)mh$.invokeExact(fltIn, plOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI4FromR8$MH() {
        return RuntimeHelper.requireNonNull(constants$1253.VarI4FromR8$MH,"VarI4FromR8");
    }
    public static int VarI4FromR8 ( double dblIn,  Addressable plOut) {
        var mh$ = VarI4FromR8$MH();
        try {
            return (int)mh$.invokeExact(dblIn, plOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI4FromCy$MH() {
        return RuntimeHelper.requireNonNull(constants$1254.VarI4FromCy$MH,"VarI4FromCy");
    }
    public static int VarI4FromCy ( MemorySegment cyIn,  Addressable plOut) {
        var mh$ = VarI4FromCy$MH();
        try {
            return (int)mh$.invokeExact(cyIn, plOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI4FromDate$MH() {
        return RuntimeHelper.requireNonNull(constants$1254.VarI4FromDate$MH,"VarI4FromDate");
    }
    public static int VarI4FromDate ( double dateIn,  Addressable plOut) {
        var mh$ = VarI4FromDate$MH();
        try {
            return (int)mh$.invokeExact(dateIn, plOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI4FromStr$MH() {
        return RuntimeHelper.requireNonNull(constants$1254.VarI4FromStr$MH,"VarI4FromStr");
    }
    public static int VarI4FromStr ( Addressable strIn,  int lcid,  int dwFlags,  Addressable plOut) {
        var mh$ = VarI4FromStr$MH();
        try {
            return (int)mh$.invokeExact(strIn, lcid, dwFlags, plOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI4FromDisp$MH() {
        return RuntimeHelper.requireNonNull(constants$1254.VarI4FromDisp$MH,"VarI4FromDisp");
    }
    public static int VarI4FromDisp ( Addressable pdispIn,  int lcid,  Addressable plOut) {
        var mh$ = VarI4FromDisp$MH();
        try {
            return (int)mh$.invokeExact(pdispIn, lcid, plOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI4FromBool$MH() {
        return RuntimeHelper.requireNonNull(constants$1254.VarI4FromBool$MH,"VarI4FromBool");
    }
    public static int VarI4FromBool ( short boolIn,  Addressable plOut) {
        var mh$ = VarI4FromBool$MH();
        try {
            return (int)mh$.invokeExact(boolIn, plOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI4FromI1$MH() {
        return RuntimeHelper.requireNonNull(constants$1254.VarI4FromI1$MH,"VarI4FromI1");
    }
    public static int VarI4FromI1 ( byte cIn,  Addressable plOut) {
        var mh$ = VarI4FromI1$MH();
        try {
            return (int)mh$.invokeExact(cIn, plOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI4FromUI2$MH() {
        return RuntimeHelper.requireNonNull(constants$1255.VarI4FromUI2$MH,"VarI4FromUI2");
    }
    public static int VarI4FromUI2 ( short uiIn,  Addressable plOut) {
        var mh$ = VarI4FromUI2$MH();
        try {
            return (int)mh$.invokeExact(uiIn, plOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI4FromUI4$MH() {
        return RuntimeHelper.requireNonNull(constants$1255.VarI4FromUI4$MH,"VarI4FromUI4");
    }
    public static int VarI4FromUI4 ( int ulIn,  Addressable plOut) {
        var mh$ = VarI4FromUI4$MH();
        try {
            return (int)mh$.invokeExact(ulIn, plOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI4FromUI8$MH() {
        return RuntimeHelper.requireNonNull(constants$1255.VarI4FromUI8$MH,"VarI4FromUI8");
    }
    public static int VarI4FromUI8 ( long ui64In,  Addressable plOut) {
        var mh$ = VarI4FromUI8$MH();
        try {
            return (int)mh$.invokeExact(ui64In, plOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI4FromDec$MH() {
        return RuntimeHelper.requireNonNull(constants$1255.VarI4FromDec$MH,"VarI4FromDec");
    }
    public static int VarI4FromDec ( Addressable pdecIn,  Addressable plOut) {
        var mh$ = VarI4FromDec$MH();
        try {
            return (int)mh$.invokeExact(pdecIn, plOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI8FromUI1$MH() {
        return RuntimeHelper.requireNonNull(constants$1255.VarI8FromUI1$MH,"VarI8FromUI1");
    }
    public static int VarI8FromUI1 ( byte bIn,  Addressable pi64Out) {
        var mh$ = VarI8FromUI1$MH();
        try {
            return (int)mh$.invokeExact(bIn, pi64Out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI8FromI2$MH() {
        return RuntimeHelper.requireNonNull(constants$1255.VarI8FromI2$MH,"VarI8FromI2");
    }
    public static int VarI8FromI2 ( short sIn,  Addressable pi64Out) {
        var mh$ = VarI8FromI2$MH();
        try {
            return (int)mh$.invokeExact(sIn, pi64Out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI8FromR4$MH() {
        return RuntimeHelper.requireNonNull(constants$1256.VarI8FromR4$MH,"VarI8FromR4");
    }
    public static int VarI8FromR4 ( float fltIn,  Addressable pi64Out) {
        var mh$ = VarI8FromR4$MH();
        try {
            return (int)mh$.invokeExact(fltIn, pi64Out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI8FromR8$MH() {
        return RuntimeHelper.requireNonNull(constants$1256.VarI8FromR8$MH,"VarI8FromR8");
    }
    public static int VarI8FromR8 ( double dblIn,  Addressable pi64Out) {
        var mh$ = VarI8FromR8$MH();
        try {
            return (int)mh$.invokeExact(dblIn, pi64Out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI8FromCy$MH() {
        return RuntimeHelper.requireNonNull(constants$1256.VarI8FromCy$MH,"VarI8FromCy");
    }
    public static int VarI8FromCy ( MemorySegment cyIn,  Addressable pi64Out) {
        var mh$ = VarI8FromCy$MH();
        try {
            return (int)mh$.invokeExact(cyIn, pi64Out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI8FromDate$MH() {
        return RuntimeHelper.requireNonNull(constants$1256.VarI8FromDate$MH,"VarI8FromDate");
    }
    public static int VarI8FromDate ( double dateIn,  Addressable pi64Out) {
        var mh$ = VarI8FromDate$MH();
        try {
            return (int)mh$.invokeExact(dateIn, pi64Out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI8FromStr$MH() {
        return RuntimeHelper.requireNonNull(constants$1256.VarI8FromStr$MH,"VarI8FromStr");
    }
    public static int VarI8FromStr ( Addressable strIn,  int lcid,  int dwFlags,  Addressable pi64Out) {
        var mh$ = VarI8FromStr$MH();
        try {
            return (int)mh$.invokeExact(strIn, lcid, dwFlags, pi64Out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI8FromDisp$MH() {
        return RuntimeHelper.requireNonNull(constants$1256.VarI8FromDisp$MH,"VarI8FromDisp");
    }
    public static int VarI8FromDisp ( Addressable pdispIn,  int lcid,  Addressable pi64Out) {
        var mh$ = VarI8FromDisp$MH();
        try {
            return (int)mh$.invokeExact(pdispIn, lcid, pi64Out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI8FromBool$MH() {
        return RuntimeHelper.requireNonNull(constants$1257.VarI8FromBool$MH,"VarI8FromBool");
    }
    public static int VarI8FromBool ( short boolIn,  Addressable pi64Out) {
        var mh$ = VarI8FromBool$MH();
        try {
            return (int)mh$.invokeExact(boolIn, pi64Out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI8FromI1$MH() {
        return RuntimeHelper.requireNonNull(constants$1257.VarI8FromI1$MH,"VarI8FromI1");
    }
    public static int VarI8FromI1 ( byte cIn,  Addressable pi64Out) {
        var mh$ = VarI8FromI1$MH();
        try {
            return (int)mh$.invokeExact(cIn, pi64Out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI8FromUI2$MH() {
        return RuntimeHelper.requireNonNull(constants$1257.VarI8FromUI2$MH,"VarI8FromUI2");
    }
    public static int VarI8FromUI2 ( short uiIn,  Addressable pi64Out) {
        var mh$ = VarI8FromUI2$MH();
        try {
            return (int)mh$.invokeExact(uiIn, pi64Out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI8FromUI4$MH() {
        return RuntimeHelper.requireNonNull(constants$1257.VarI8FromUI4$MH,"VarI8FromUI4");
    }
    public static int VarI8FromUI4 ( int ulIn,  Addressable pi64Out) {
        var mh$ = VarI8FromUI4$MH();
        try {
            return (int)mh$.invokeExact(ulIn, pi64Out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI8FromUI8$MH() {
        return RuntimeHelper.requireNonNull(constants$1257.VarI8FromUI8$MH,"VarI8FromUI8");
    }
    public static int VarI8FromUI8 ( long ui64In,  Addressable pi64Out) {
        var mh$ = VarI8FromUI8$MH();
        try {
            return (int)mh$.invokeExact(ui64In, pi64Out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI8FromDec$MH() {
        return RuntimeHelper.requireNonNull(constants$1257.VarI8FromDec$MH,"VarI8FromDec");
    }
    public static int VarI8FromDec ( Addressable pdecIn,  Addressable pi64Out) {
        var mh$ = VarI8FromDec$MH();
        try {
            return (int)mh$.invokeExact(pdecIn, pi64Out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarR4FromUI1$MH() {
        return RuntimeHelper.requireNonNull(constants$1258.VarR4FromUI1$MH,"VarR4FromUI1");
    }
    public static int VarR4FromUI1 ( byte bIn,  Addressable pfltOut) {
        var mh$ = VarR4FromUI1$MH();
        try {
            return (int)mh$.invokeExact(bIn, pfltOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarR4FromI2$MH() {
        return RuntimeHelper.requireNonNull(constants$1258.VarR4FromI2$MH,"VarR4FromI2");
    }
    public static int VarR4FromI2 ( short sIn,  Addressable pfltOut) {
        var mh$ = VarR4FromI2$MH();
        try {
            return (int)mh$.invokeExact(sIn, pfltOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarR4FromI4$MH() {
        return RuntimeHelper.requireNonNull(constants$1258.VarR4FromI4$MH,"VarR4FromI4");
    }
    public static int VarR4FromI4 ( int lIn,  Addressable pfltOut) {
        var mh$ = VarR4FromI4$MH();
        try {
            return (int)mh$.invokeExact(lIn, pfltOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarR4FromI8$MH() {
        return RuntimeHelper.requireNonNull(constants$1258.VarR4FromI8$MH,"VarR4FromI8");
    }
    public static int VarR4FromI8 ( long i64In,  Addressable pfltOut) {
        var mh$ = VarR4FromI8$MH();
        try {
            return (int)mh$.invokeExact(i64In, pfltOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarR4FromR8$MH() {
        return RuntimeHelper.requireNonNull(constants$1258.VarR4FromR8$MH,"VarR4FromR8");
    }
    public static int VarR4FromR8 ( double dblIn,  Addressable pfltOut) {
        var mh$ = VarR4FromR8$MH();
        try {
            return (int)mh$.invokeExact(dblIn, pfltOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarR4FromCy$MH() {
        return RuntimeHelper.requireNonNull(constants$1258.VarR4FromCy$MH,"VarR4FromCy");
    }
    public static int VarR4FromCy ( MemorySegment cyIn,  Addressable pfltOut) {
        var mh$ = VarR4FromCy$MH();
        try {
            return (int)mh$.invokeExact(cyIn, pfltOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarR4FromDate$MH() {
        return RuntimeHelper.requireNonNull(constants$1259.VarR4FromDate$MH,"VarR4FromDate");
    }
    public static int VarR4FromDate ( double dateIn,  Addressable pfltOut) {
        var mh$ = VarR4FromDate$MH();
        try {
            return (int)mh$.invokeExact(dateIn, pfltOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarR4FromStr$MH() {
        return RuntimeHelper.requireNonNull(constants$1259.VarR4FromStr$MH,"VarR4FromStr");
    }
    public static int VarR4FromStr ( Addressable strIn,  int lcid,  int dwFlags,  Addressable pfltOut) {
        var mh$ = VarR4FromStr$MH();
        try {
            return (int)mh$.invokeExact(strIn, lcid, dwFlags, pfltOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarR4FromDisp$MH() {
        return RuntimeHelper.requireNonNull(constants$1259.VarR4FromDisp$MH,"VarR4FromDisp");
    }
    public static int VarR4FromDisp ( Addressable pdispIn,  int lcid,  Addressable pfltOut) {
        var mh$ = VarR4FromDisp$MH();
        try {
            return (int)mh$.invokeExact(pdispIn, lcid, pfltOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarR4FromBool$MH() {
        return RuntimeHelper.requireNonNull(constants$1259.VarR4FromBool$MH,"VarR4FromBool");
    }
    public static int VarR4FromBool ( short boolIn,  Addressable pfltOut) {
        var mh$ = VarR4FromBool$MH();
        try {
            return (int)mh$.invokeExact(boolIn, pfltOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarR4FromI1$MH() {
        return RuntimeHelper.requireNonNull(constants$1259.VarR4FromI1$MH,"VarR4FromI1");
    }
    public static int VarR4FromI1 ( byte cIn,  Addressable pfltOut) {
        var mh$ = VarR4FromI1$MH();
        try {
            return (int)mh$.invokeExact(cIn, pfltOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarR4FromUI2$MH() {
        return RuntimeHelper.requireNonNull(constants$1259.VarR4FromUI2$MH,"VarR4FromUI2");
    }
    public static int VarR4FromUI2 ( short uiIn,  Addressable pfltOut) {
        var mh$ = VarR4FromUI2$MH();
        try {
            return (int)mh$.invokeExact(uiIn, pfltOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarR4FromUI4$MH() {
        return RuntimeHelper.requireNonNull(constants$1260.VarR4FromUI4$MH,"VarR4FromUI4");
    }
    public static int VarR4FromUI4 ( int ulIn,  Addressable pfltOut) {
        var mh$ = VarR4FromUI4$MH();
        try {
            return (int)mh$.invokeExact(ulIn, pfltOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarR4FromUI8$MH() {
        return RuntimeHelper.requireNonNull(constants$1260.VarR4FromUI8$MH,"VarR4FromUI8");
    }
    public static int VarR4FromUI8 ( long ui64In,  Addressable pfltOut) {
        var mh$ = VarR4FromUI8$MH();
        try {
            return (int)mh$.invokeExact(ui64In, pfltOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarR4FromDec$MH() {
        return RuntimeHelper.requireNonNull(constants$1260.VarR4FromDec$MH,"VarR4FromDec");
    }
    public static int VarR4FromDec ( Addressable pdecIn,  Addressable pfltOut) {
        var mh$ = VarR4FromDec$MH();
        try {
            return (int)mh$.invokeExact(pdecIn, pfltOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarR8FromUI1$MH() {
        return RuntimeHelper.requireNonNull(constants$1260.VarR8FromUI1$MH,"VarR8FromUI1");
    }
    public static int VarR8FromUI1 ( byte bIn,  Addressable pdblOut) {
        var mh$ = VarR8FromUI1$MH();
        try {
            return (int)mh$.invokeExact(bIn, pdblOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarR8FromI2$MH() {
        return RuntimeHelper.requireNonNull(constants$1260.VarR8FromI2$MH,"VarR8FromI2");
    }
    public static int VarR8FromI2 ( short sIn,  Addressable pdblOut) {
        var mh$ = VarR8FromI2$MH();
        try {
            return (int)mh$.invokeExact(sIn, pdblOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarR8FromI4$MH() {
        return RuntimeHelper.requireNonNull(constants$1260.VarR8FromI4$MH,"VarR8FromI4");
    }
    public static int VarR8FromI4 ( int lIn,  Addressable pdblOut) {
        var mh$ = VarR8FromI4$MH();
        try {
            return (int)mh$.invokeExact(lIn, pdblOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarR8FromI8$MH() {
        return RuntimeHelper.requireNonNull(constants$1261.VarR8FromI8$MH,"VarR8FromI8");
    }
    public static int VarR8FromI8 ( long i64In,  Addressable pdblOut) {
        var mh$ = VarR8FromI8$MH();
        try {
            return (int)mh$.invokeExact(i64In, pdblOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarR8FromR4$MH() {
        return RuntimeHelper.requireNonNull(constants$1261.VarR8FromR4$MH,"VarR8FromR4");
    }
    public static int VarR8FromR4 ( float fltIn,  Addressable pdblOut) {
        var mh$ = VarR8FromR4$MH();
        try {
            return (int)mh$.invokeExact(fltIn, pdblOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarR8FromCy$MH() {
        return RuntimeHelper.requireNonNull(constants$1261.VarR8FromCy$MH,"VarR8FromCy");
    }
    public static int VarR8FromCy ( MemorySegment cyIn,  Addressable pdblOut) {
        var mh$ = VarR8FromCy$MH();
        try {
            return (int)mh$.invokeExact(cyIn, pdblOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarR8FromDate$MH() {
        return RuntimeHelper.requireNonNull(constants$1261.VarR8FromDate$MH,"VarR8FromDate");
    }
    public static int VarR8FromDate ( double dateIn,  Addressable pdblOut) {
        var mh$ = VarR8FromDate$MH();
        try {
            return (int)mh$.invokeExact(dateIn, pdblOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarR8FromStr$MH() {
        return RuntimeHelper.requireNonNull(constants$1261.VarR8FromStr$MH,"VarR8FromStr");
    }
    public static int VarR8FromStr ( Addressable strIn,  int lcid,  int dwFlags,  Addressable pdblOut) {
        var mh$ = VarR8FromStr$MH();
        try {
            return (int)mh$.invokeExact(strIn, lcid, dwFlags, pdblOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarR8FromDisp$MH() {
        return RuntimeHelper.requireNonNull(constants$1261.VarR8FromDisp$MH,"VarR8FromDisp");
    }
    public static int VarR8FromDisp ( Addressable pdispIn,  int lcid,  Addressable pdblOut) {
        var mh$ = VarR8FromDisp$MH();
        try {
            return (int)mh$.invokeExact(pdispIn, lcid, pdblOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarR8FromBool$MH() {
        return RuntimeHelper.requireNonNull(constants$1262.VarR8FromBool$MH,"VarR8FromBool");
    }
    public static int VarR8FromBool ( short boolIn,  Addressable pdblOut) {
        var mh$ = VarR8FromBool$MH();
        try {
            return (int)mh$.invokeExact(boolIn, pdblOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarR8FromI1$MH() {
        return RuntimeHelper.requireNonNull(constants$1262.VarR8FromI1$MH,"VarR8FromI1");
    }
    public static int VarR8FromI1 ( byte cIn,  Addressable pdblOut) {
        var mh$ = VarR8FromI1$MH();
        try {
            return (int)mh$.invokeExact(cIn, pdblOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarR8FromUI2$MH() {
        return RuntimeHelper.requireNonNull(constants$1262.VarR8FromUI2$MH,"VarR8FromUI2");
    }
    public static int VarR8FromUI2 ( short uiIn,  Addressable pdblOut) {
        var mh$ = VarR8FromUI2$MH();
        try {
            return (int)mh$.invokeExact(uiIn, pdblOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarR8FromUI4$MH() {
        return RuntimeHelper.requireNonNull(constants$1262.VarR8FromUI4$MH,"VarR8FromUI4");
    }
    public static int VarR8FromUI4 ( int ulIn,  Addressable pdblOut) {
        var mh$ = VarR8FromUI4$MH();
        try {
            return (int)mh$.invokeExact(ulIn, pdblOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarR8FromUI8$MH() {
        return RuntimeHelper.requireNonNull(constants$1262.VarR8FromUI8$MH,"VarR8FromUI8");
    }
    public static int VarR8FromUI8 ( long ui64In,  Addressable pdblOut) {
        var mh$ = VarR8FromUI8$MH();
        try {
            return (int)mh$.invokeExact(ui64In, pdblOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarR8FromDec$MH() {
        return RuntimeHelper.requireNonNull(constants$1262.VarR8FromDec$MH,"VarR8FromDec");
    }
    public static int VarR8FromDec ( Addressable pdecIn,  Addressable pdblOut) {
        var mh$ = VarR8FromDec$MH();
        try {
            return (int)mh$.invokeExact(pdecIn, pdblOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDateFromUI1$MH() {
        return RuntimeHelper.requireNonNull(constants$1263.VarDateFromUI1$MH,"VarDateFromUI1");
    }
    public static int VarDateFromUI1 ( byte bIn,  Addressable pdateOut) {
        var mh$ = VarDateFromUI1$MH();
        try {
            return (int)mh$.invokeExact(bIn, pdateOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDateFromI2$MH() {
        return RuntimeHelper.requireNonNull(constants$1263.VarDateFromI2$MH,"VarDateFromI2");
    }
    public static int VarDateFromI2 ( short sIn,  Addressable pdateOut) {
        var mh$ = VarDateFromI2$MH();
        try {
            return (int)mh$.invokeExact(sIn, pdateOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDateFromI4$MH() {
        return RuntimeHelper.requireNonNull(constants$1263.VarDateFromI4$MH,"VarDateFromI4");
    }
    public static int VarDateFromI4 ( int lIn,  Addressable pdateOut) {
        var mh$ = VarDateFromI4$MH();
        try {
            return (int)mh$.invokeExact(lIn, pdateOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDateFromI8$MH() {
        return RuntimeHelper.requireNonNull(constants$1263.VarDateFromI8$MH,"VarDateFromI8");
    }
    public static int VarDateFromI8 ( long i64In,  Addressable pdateOut) {
        var mh$ = VarDateFromI8$MH();
        try {
            return (int)mh$.invokeExact(i64In, pdateOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDateFromR4$MH() {
        return RuntimeHelper.requireNonNull(constants$1263.VarDateFromR4$MH,"VarDateFromR4");
    }
    public static int VarDateFromR4 ( float fltIn,  Addressable pdateOut) {
        var mh$ = VarDateFromR4$MH();
        try {
            return (int)mh$.invokeExact(fltIn, pdateOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDateFromR8$MH() {
        return RuntimeHelper.requireNonNull(constants$1263.VarDateFromR8$MH,"VarDateFromR8");
    }
    public static int VarDateFromR8 ( double dblIn,  Addressable pdateOut) {
        var mh$ = VarDateFromR8$MH();
        try {
            return (int)mh$.invokeExact(dblIn, pdateOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDateFromCy$MH() {
        return RuntimeHelper.requireNonNull(constants$1264.VarDateFromCy$MH,"VarDateFromCy");
    }
    public static int VarDateFromCy ( MemorySegment cyIn,  Addressable pdateOut) {
        var mh$ = VarDateFromCy$MH();
        try {
            return (int)mh$.invokeExact(cyIn, pdateOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDateFromStr$MH() {
        return RuntimeHelper.requireNonNull(constants$1264.VarDateFromStr$MH,"VarDateFromStr");
    }
    public static int VarDateFromStr ( Addressable strIn,  int lcid,  int dwFlags,  Addressable pdateOut) {
        var mh$ = VarDateFromStr$MH();
        try {
            return (int)mh$.invokeExact(strIn, lcid, dwFlags, pdateOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDateFromDisp$MH() {
        return RuntimeHelper.requireNonNull(constants$1264.VarDateFromDisp$MH,"VarDateFromDisp");
    }
    public static int VarDateFromDisp ( Addressable pdispIn,  int lcid,  Addressable pdateOut) {
        var mh$ = VarDateFromDisp$MH();
        try {
            return (int)mh$.invokeExact(pdispIn, lcid, pdateOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDateFromBool$MH() {
        return RuntimeHelper.requireNonNull(constants$1264.VarDateFromBool$MH,"VarDateFromBool");
    }
    public static int VarDateFromBool ( short boolIn,  Addressable pdateOut) {
        var mh$ = VarDateFromBool$MH();
        try {
            return (int)mh$.invokeExact(boolIn, pdateOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDateFromI1$MH() {
        return RuntimeHelper.requireNonNull(constants$1264.VarDateFromI1$MH,"VarDateFromI1");
    }
    public static int VarDateFromI1 ( byte cIn,  Addressable pdateOut) {
        var mh$ = VarDateFromI1$MH();
        try {
            return (int)mh$.invokeExact(cIn, pdateOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDateFromUI2$MH() {
        return RuntimeHelper.requireNonNull(constants$1264.VarDateFromUI2$MH,"VarDateFromUI2");
    }
    public static int VarDateFromUI2 ( short uiIn,  Addressable pdateOut) {
        var mh$ = VarDateFromUI2$MH();
        try {
            return (int)mh$.invokeExact(uiIn, pdateOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDateFromUI4$MH() {
        return RuntimeHelper.requireNonNull(constants$1265.VarDateFromUI4$MH,"VarDateFromUI4");
    }
    public static int VarDateFromUI4 ( int ulIn,  Addressable pdateOut) {
        var mh$ = VarDateFromUI4$MH();
        try {
            return (int)mh$.invokeExact(ulIn, pdateOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDateFromUI8$MH() {
        return RuntimeHelper.requireNonNull(constants$1265.VarDateFromUI8$MH,"VarDateFromUI8");
    }
    public static int VarDateFromUI8 ( long ui64In,  Addressable pdateOut) {
        var mh$ = VarDateFromUI8$MH();
        try {
            return (int)mh$.invokeExact(ui64In, pdateOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDateFromDec$MH() {
        return RuntimeHelper.requireNonNull(constants$1265.VarDateFromDec$MH,"VarDateFromDec");
    }
    public static int VarDateFromDec ( Addressable pdecIn,  Addressable pdateOut) {
        var mh$ = VarDateFromDec$MH();
        try {
            return (int)mh$.invokeExact(pdecIn, pdateOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarCyFromUI1$MH() {
        return RuntimeHelper.requireNonNull(constants$1265.VarCyFromUI1$MH,"VarCyFromUI1");
    }
    public static int VarCyFromUI1 ( byte bIn,  Addressable pcyOut) {
        var mh$ = VarCyFromUI1$MH();
        try {
            return (int)mh$.invokeExact(bIn, pcyOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarCyFromI2$MH() {
        return RuntimeHelper.requireNonNull(constants$1265.VarCyFromI2$MH,"VarCyFromI2");
    }
    public static int VarCyFromI2 ( short sIn,  Addressable pcyOut) {
        var mh$ = VarCyFromI2$MH();
        try {
            return (int)mh$.invokeExact(sIn, pcyOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarCyFromI4$MH() {
        return RuntimeHelper.requireNonNull(constants$1265.VarCyFromI4$MH,"VarCyFromI4");
    }
    public static int VarCyFromI4 ( int lIn,  Addressable pcyOut) {
        var mh$ = VarCyFromI4$MH();
        try {
            return (int)mh$.invokeExact(lIn, pcyOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarCyFromI8$MH() {
        return RuntimeHelper.requireNonNull(constants$1266.VarCyFromI8$MH,"VarCyFromI8");
    }
    public static int VarCyFromI8 ( long i64In,  Addressable pcyOut) {
        var mh$ = VarCyFromI8$MH();
        try {
            return (int)mh$.invokeExact(i64In, pcyOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarCyFromR4$MH() {
        return RuntimeHelper.requireNonNull(constants$1266.VarCyFromR4$MH,"VarCyFromR4");
    }
    public static int VarCyFromR4 ( float fltIn,  Addressable pcyOut) {
        var mh$ = VarCyFromR4$MH();
        try {
            return (int)mh$.invokeExact(fltIn, pcyOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarCyFromR8$MH() {
        return RuntimeHelper.requireNonNull(constants$1266.VarCyFromR8$MH,"VarCyFromR8");
    }
    public static int VarCyFromR8 ( double dblIn,  Addressable pcyOut) {
        var mh$ = VarCyFromR8$MH();
        try {
            return (int)mh$.invokeExact(dblIn, pcyOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarCyFromDate$MH() {
        return RuntimeHelper.requireNonNull(constants$1266.VarCyFromDate$MH,"VarCyFromDate");
    }
    public static int VarCyFromDate ( double dateIn,  Addressable pcyOut) {
        var mh$ = VarCyFromDate$MH();
        try {
            return (int)mh$.invokeExact(dateIn, pcyOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarCyFromStr$MH() {
        return RuntimeHelper.requireNonNull(constants$1266.VarCyFromStr$MH,"VarCyFromStr");
    }
    public static int VarCyFromStr ( Addressable strIn,  int lcid,  int dwFlags,  Addressable pcyOut) {
        var mh$ = VarCyFromStr$MH();
        try {
            return (int)mh$.invokeExact(strIn, lcid, dwFlags, pcyOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarCyFromDisp$MH() {
        return RuntimeHelper.requireNonNull(constants$1266.VarCyFromDisp$MH,"VarCyFromDisp");
    }
    public static int VarCyFromDisp ( Addressable pdispIn,  int lcid,  Addressable pcyOut) {
        var mh$ = VarCyFromDisp$MH();
        try {
            return (int)mh$.invokeExact(pdispIn, lcid, pcyOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarCyFromBool$MH() {
        return RuntimeHelper.requireNonNull(constants$1267.VarCyFromBool$MH,"VarCyFromBool");
    }
    public static int VarCyFromBool ( short boolIn,  Addressable pcyOut) {
        var mh$ = VarCyFromBool$MH();
        try {
            return (int)mh$.invokeExact(boolIn, pcyOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarCyFromI1$MH() {
        return RuntimeHelper.requireNonNull(constants$1267.VarCyFromI1$MH,"VarCyFromI1");
    }
    public static int VarCyFromI1 ( byte cIn,  Addressable pcyOut) {
        var mh$ = VarCyFromI1$MH();
        try {
            return (int)mh$.invokeExact(cIn, pcyOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarCyFromUI2$MH() {
        return RuntimeHelper.requireNonNull(constants$1267.VarCyFromUI2$MH,"VarCyFromUI2");
    }
    public static int VarCyFromUI2 ( short uiIn,  Addressable pcyOut) {
        var mh$ = VarCyFromUI2$MH();
        try {
            return (int)mh$.invokeExact(uiIn, pcyOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarCyFromUI4$MH() {
        return RuntimeHelper.requireNonNull(constants$1267.VarCyFromUI4$MH,"VarCyFromUI4");
    }
    public static int VarCyFromUI4 ( int ulIn,  Addressable pcyOut) {
        var mh$ = VarCyFromUI4$MH();
        try {
            return (int)mh$.invokeExact(ulIn, pcyOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarCyFromUI8$MH() {
        return RuntimeHelper.requireNonNull(constants$1267.VarCyFromUI8$MH,"VarCyFromUI8");
    }
    public static int VarCyFromUI8 ( long ui64In,  Addressable pcyOut) {
        var mh$ = VarCyFromUI8$MH();
        try {
            return (int)mh$.invokeExact(ui64In, pcyOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarCyFromDec$MH() {
        return RuntimeHelper.requireNonNull(constants$1267.VarCyFromDec$MH,"VarCyFromDec");
    }
    public static int VarCyFromDec ( Addressable pdecIn,  Addressable pcyOut) {
        var mh$ = VarCyFromDec$MH();
        try {
            return (int)mh$.invokeExact(pdecIn, pcyOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarBstrFromUI1$MH() {
        return RuntimeHelper.requireNonNull(constants$1268.VarBstrFromUI1$MH,"VarBstrFromUI1");
    }
    public static int VarBstrFromUI1 ( byte bVal,  int lcid,  int dwFlags,  Addressable pbstrOut) {
        var mh$ = VarBstrFromUI1$MH();
        try {
            return (int)mh$.invokeExact(bVal, lcid, dwFlags, pbstrOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarBstrFromI2$MH() {
        return RuntimeHelper.requireNonNull(constants$1268.VarBstrFromI2$MH,"VarBstrFromI2");
    }
    public static int VarBstrFromI2 ( short iVal,  int lcid,  int dwFlags,  Addressable pbstrOut) {
        var mh$ = VarBstrFromI2$MH();
        try {
            return (int)mh$.invokeExact(iVal, lcid, dwFlags, pbstrOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarBstrFromI4$MH() {
        return RuntimeHelper.requireNonNull(constants$1268.VarBstrFromI4$MH,"VarBstrFromI4");
    }
    public static int VarBstrFromI4 ( int lIn,  int lcid,  int dwFlags,  Addressable pbstrOut) {
        var mh$ = VarBstrFromI4$MH();
        try {
            return (int)mh$.invokeExact(lIn, lcid, dwFlags, pbstrOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarBstrFromI8$MH() {
        return RuntimeHelper.requireNonNull(constants$1268.VarBstrFromI8$MH,"VarBstrFromI8");
    }
    public static int VarBstrFromI8 ( long i64In,  int lcid,  int dwFlags,  Addressable pbstrOut) {
        var mh$ = VarBstrFromI8$MH();
        try {
            return (int)mh$.invokeExact(i64In, lcid, dwFlags, pbstrOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarBstrFromR4$MH() {
        return RuntimeHelper.requireNonNull(constants$1268.VarBstrFromR4$MH,"VarBstrFromR4");
    }
    public static int VarBstrFromR4 ( float fltIn,  int lcid,  int dwFlags,  Addressable pbstrOut) {
        var mh$ = VarBstrFromR4$MH();
        try {
            return (int)mh$.invokeExact(fltIn, lcid, dwFlags, pbstrOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarBstrFromR8$MH() {
        return RuntimeHelper.requireNonNull(constants$1268.VarBstrFromR8$MH,"VarBstrFromR8");
    }
    public static int VarBstrFromR8 ( double dblIn,  int lcid,  int dwFlags,  Addressable pbstrOut) {
        var mh$ = VarBstrFromR8$MH();
        try {
            return (int)mh$.invokeExact(dblIn, lcid, dwFlags, pbstrOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarBstrFromCy$MH() {
        return RuntimeHelper.requireNonNull(constants$1269.VarBstrFromCy$MH,"VarBstrFromCy");
    }
    public static int VarBstrFromCy ( MemorySegment cyIn,  int lcid,  int dwFlags,  Addressable pbstrOut) {
        var mh$ = VarBstrFromCy$MH();
        try {
            return (int)mh$.invokeExact(cyIn, lcid, dwFlags, pbstrOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarBstrFromDate$MH() {
        return RuntimeHelper.requireNonNull(constants$1269.VarBstrFromDate$MH,"VarBstrFromDate");
    }
    public static int VarBstrFromDate ( double dateIn,  int lcid,  int dwFlags,  Addressable pbstrOut) {
        var mh$ = VarBstrFromDate$MH();
        try {
            return (int)mh$.invokeExact(dateIn, lcid, dwFlags, pbstrOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarBstrFromDisp$MH() {
        return RuntimeHelper.requireNonNull(constants$1269.VarBstrFromDisp$MH,"VarBstrFromDisp");
    }
    public static int VarBstrFromDisp ( Addressable pdispIn,  int lcid,  int dwFlags,  Addressable pbstrOut) {
        var mh$ = VarBstrFromDisp$MH();
        try {
            return (int)mh$.invokeExact(pdispIn, lcid, dwFlags, pbstrOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarBstrFromBool$MH() {
        return RuntimeHelper.requireNonNull(constants$1269.VarBstrFromBool$MH,"VarBstrFromBool");
    }
    public static int VarBstrFromBool ( short boolIn,  int lcid,  int dwFlags,  Addressable pbstrOut) {
        var mh$ = VarBstrFromBool$MH();
        try {
            return (int)mh$.invokeExact(boolIn, lcid, dwFlags, pbstrOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarBstrFromI1$MH() {
        return RuntimeHelper.requireNonNull(constants$1269.VarBstrFromI1$MH,"VarBstrFromI1");
    }
    public static int VarBstrFromI1 ( byte cIn,  int lcid,  int dwFlags,  Addressable pbstrOut) {
        var mh$ = VarBstrFromI1$MH();
        try {
            return (int)mh$.invokeExact(cIn, lcid, dwFlags, pbstrOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarBstrFromUI2$MH() {
        return RuntimeHelper.requireNonNull(constants$1269.VarBstrFromUI2$MH,"VarBstrFromUI2");
    }
    public static int VarBstrFromUI2 ( short uiIn,  int lcid,  int dwFlags,  Addressable pbstrOut) {
        var mh$ = VarBstrFromUI2$MH();
        try {
            return (int)mh$.invokeExact(uiIn, lcid, dwFlags, pbstrOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarBstrFromUI4$MH() {
        return RuntimeHelper.requireNonNull(constants$1270.VarBstrFromUI4$MH,"VarBstrFromUI4");
    }
    public static int VarBstrFromUI4 ( int ulIn,  int lcid,  int dwFlags,  Addressable pbstrOut) {
        var mh$ = VarBstrFromUI4$MH();
        try {
            return (int)mh$.invokeExact(ulIn, lcid, dwFlags, pbstrOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarBstrFromUI8$MH() {
        return RuntimeHelper.requireNonNull(constants$1270.VarBstrFromUI8$MH,"VarBstrFromUI8");
    }
    public static int VarBstrFromUI8 ( long ui64In,  int lcid,  int dwFlags,  Addressable pbstrOut) {
        var mh$ = VarBstrFromUI8$MH();
        try {
            return (int)mh$.invokeExact(ui64In, lcid, dwFlags, pbstrOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarBstrFromDec$MH() {
        return RuntimeHelper.requireNonNull(constants$1270.VarBstrFromDec$MH,"VarBstrFromDec");
    }
    public static int VarBstrFromDec ( Addressable pdecIn,  int lcid,  int dwFlags,  Addressable pbstrOut) {
        var mh$ = VarBstrFromDec$MH();
        try {
            return (int)mh$.invokeExact(pdecIn, lcid, dwFlags, pbstrOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarBoolFromUI1$MH() {
        return RuntimeHelper.requireNonNull(constants$1270.VarBoolFromUI1$MH,"VarBoolFromUI1");
    }
    public static int VarBoolFromUI1 ( byte bIn,  Addressable pboolOut) {
        var mh$ = VarBoolFromUI1$MH();
        try {
            return (int)mh$.invokeExact(bIn, pboolOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarBoolFromI2$MH() {
        return RuntimeHelper.requireNonNull(constants$1270.VarBoolFromI2$MH,"VarBoolFromI2");
    }
    public static int VarBoolFromI2 ( short sIn,  Addressable pboolOut) {
        var mh$ = VarBoolFromI2$MH();
        try {
            return (int)mh$.invokeExact(sIn, pboolOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarBoolFromI4$MH() {
        return RuntimeHelper.requireNonNull(constants$1270.VarBoolFromI4$MH,"VarBoolFromI4");
    }
    public static int VarBoolFromI4 ( int lIn,  Addressable pboolOut) {
        var mh$ = VarBoolFromI4$MH();
        try {
            return (int)mh$.invokeExact(lIn, pboolOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarBoolFromI8$MH() {
        return RuntimeHelper.requireNonNull(constants$1271.VarBoolFromI8$MH,"VarBoolFromI8");
    }
    public static int VarBoolFromI8 ( long i64In,  Addressable pboolOut) {
        var mh$ = VarBoolFromI8$MH();
        try {
            return (int)mh$.invokeExact(i64In, pboolOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarBoolFromR4$MH() {
        return RuntimeHelper.requireNonNull(constants$1271.VarBoolFromR4$MH,"VarBoolFromR4");
    }
    public static int VarBoolFromR4 ( float fltIn,  Addressable pboolOut) {
        var mh$ = VarBoolFromR4$MH();
        try {
            return (int)mh$.invokeExact(fltIn, pboolOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarBoolFromR8$MH() {
        return RuntimeHelper.requireNonNull(constants$1271.VarBoolFromR8$MH,"VarBoolFromR8");
    }
    public static int VarBoolFromR8 ( double dblIn,  Addressable pboolOut) {
        var mh$ = VarBoolFromR8$MH();
        try {
            return (int)mh$.invokeExact(dblIn, pboolOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarBoolFromDate$MH() {
        return RuntimeHelper.requireNonNull(constants$1271.VarBoolFromDate$MH,"VarBoolFromDate");
    }
    public static int VarBoolFromDate ( double dateIn,  Addressable pboolOut) {
        var mh$ = VarBoolFromDate$MH();
        try {
            return (int)mh$.invokeExact(dateIn, pboolOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarBoolFromCy$MH() {
        return RuntimeHelper.requireNonNull(constants$1271.VarBoolFromCy$MH,"VarBoolFromCy");
    }
    public static int VarBoolFromCy ( MemorySegment cyIn,  Addressable pboolOut) {
        var mh$ = VarBoolFromCy$MH();
        try {
            return (int)mh$.invokeExact(cyIn, pboolOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarBoolFromStr$MH() {
        return RuntimeHelper.requireNonNull(constants$1271.VarBoolFromStr$MH,"VarBoolFromStr");
    }
    public static int VarBoolFromStr ( Addressable strIn,  int lcid,  int dwFlags,  Addressable pboolOut) {
        var mh$ = VarBoolFromStr$MH();
        try {
            return (int)mh$.invokeExact(strIn, lcid, dwFlags, pboolOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarBoolFromDisp$MH() {
        return RuntimeHelper.requireNonNull(constants$1272.VarBoolFromDisp$MH,"VarBoolFromDisp");
    }
    public static int VarBoolFromDisp ( Addressable pdispIn,  int lcid,  Addressable pboolOut) {
        var mh$ = VarBoolFromDisp$MH();
        try {
            return (int)mh$.invokeExact(pdispIn, lcid, pboolOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarBoolFromI1$MH() {
        return RuntimeHelper.requireNonNull(constants$1272.VarBoolFromI1$MH,"VarBoolFromI1");
    }
    public static int VarBoolFromI1 ( byte cIn,  Addressable pboolOut) {
        var mh$ = VarBoolFromI1$MH();
        try {
            return (int)mh$.invokeExact(cIn, pboolOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarBoolFromUI2$MH() {
        return RuntimeHelper.requireNonNull(constants$1272.VarBoolFromUI2$MH,"VarBoolFromUI2");
    }
    public static int VarBoolFromUI2 ( short uiIn,  Addressable pboolOut) {
        var mh$ = VarBoolFromUI2$MH();
        try {
            return (int)mh$.invokeExact(uiIn, pboolOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarBoolFromUI4$MH() {
        return RuntimeHelper.requireNonNull(constants$1272.VarBoolFromUI4$MH,"VarBoolFromUI4");
    }
    public static int VarBoolFromUI4 ( int ulIn,  Addressable pboolOut) {
        var mh$ = VarBoolFromUI4$MH();
        try {
            return (int)mh$.invokeExact(ulIn, pboolOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarBoolFromUI8$MH() {
        return RuntimeHelper.requireNonNull(constants$1272.VarBoolFromUI8$MH,"VarBoolFromUI8");
    }
    public static int VarBoolFromUI8 ( long i64In,  Addressable pboolOut) {
        var mh$ = VarBoolFromUI8$MH();
        try {
            return (int)mh$.invokeExact(i64In, pboolOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarBoolFromDec$MH() {
        return RuntimeHelper.requireNonNull(constants$1272.VarBoolFromDec$MH,"VarBoolFromDec");
    }
    public static int VarBoolFromDec ( Addressable pdecIn,  Addressable pboolOut) {
        var mh$ = VarBoolFromDec$MH();
        try {
            return (int)mh$.invokeExact(pdecIn, pboolOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI1FromUI1$MH() {
        return RuntimeHelper.requireNonNull(constants$1273.VarI1FromUI1$MH,"VarI1FromUI1");
    }
    public static int VarI1FromUI1 ( byte bIn,  Addressable pcOut) {
        var mh$ = VarI1FromUI1$MH();
        try {
            return (int)mh$.invokeExact(bIn, pcOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI1FromI2$MH() {
        return RuntimeHelper.requireNonNull(constants$1273.VarI1FromI2$MH,"VarI1FromI2");
    }
    public static int VarI1FromI2 ( short uiIn,  Addressable pcOut) {
        var mh$ = VarI1FromI2$MH();
        try {
            return (int)mh$.invokeExact(uiIn, pcOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI1FromI4$MH() {
        return RuntimeHelper.requireNonNull(constants$1273.VarI1FromI4$MH,"VarI1FromI4");
    }
    public static int VarI1FromI4 ( int lIn,  Addressable pcOut) {
        var mh$ = VarI1FromI4$MH();
        try {
            return (int)mh$.invokeExact(lIn, pcOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI1FromI8$MH() {
        return RuntimeHelper.requireNonNull(constants$1273.VarI1FromI8$MH,"VarI1FromI8");
    }
    public static int VarI1FromI8 ( long i64In,  Addressable pcOut) {
        var mh$ = VarI1FromI8$MH();
        try {
            return (int)mh$.invokeExact(i64In, pcOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI1FromR4$MH() {
        return RuntimeHelper.requireNonNull(constants$1273.VarI1FromR4$MH,"VarI1FromR4");
    }
    public static int VarI1FromR4 ( float fltIn,  Addressable pcOut) {
        var mh$ = VarI1FromR4$MH();
        try {
            return (int)mh$.invokeExact(fltIn, pcOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI1FromR8$MH() {
        return RuntimeHelper.requireNonNull(constants$1273.VarI1FromR8$MH,"VarI1FromR8");
    }
    public static int VarI1FromR8 ( double dblIn,  Addressable pcOut) {
        var mh$ = VarI1FromR8$MH();
        try {
            return (int)mh$.invokeExact(dblIn, pcOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI1FromDate$MH() {
        return RuntimeHelper.requireNonNull(constants$1274.VarI1FromDate$MH,"VarI1FromDate");
    }
    public static int VarI1FromDate ( double dateIn,  Addressable pcOut) {
        var mh$ = VarI1FromDate$MH();
        try {
            return (int)mh$.invokeExact(dateIn, pcOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI1FromCy$MH() {
        return RuntimeHelper.requireNonNull(constants$1274.VarI1FromCy$MH,"VarI1FromCy");
    }
    public static int VarI1FromCy ( MemorySegment cyIn,  Addressable pcOut) {
        var mh$ = VarI1FromCy$MH();
        try {
            return (int)mh$.invokeExact(cyIn, pcOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI1FromStr$MH() {
        return RuntimeHelper.requireNonNull(constants$1274.VarI1FromStr$MH,"VarI1FromStr");
    }
    public static int VarI1FromStr ( Addressable strIn,  int lcid,  int dwFlags,  Addressable pcOut) {
        var mh$ = VarI1FromStr$MH();
        try {
            return (int)mh$.invokeExact(strIn, lcid, dwFlags, pcOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI1FromDisp$MH() {
        return RuntimeHelper.requireNonNull(constants$1274.VarI1FromDisp$MH,"VarI1FromDisp");
    }
    public static int VarI1FromDisp ( Addressable pdispIn,  int lcid,  Addressable pcOut) {
        var mh$ = VarI1FromDisp$MH();
        try {
            return (int)mh$.invokeExact(pdispIn, lcid, pcOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI1FromBool$MH() {
        return RuntimeHelper.requireNonNull(constants$1274.VarI1FromBool$MH,"VarI1FromBool");
    }
    public static int VarI1FromBool ( short boolIn,  Addressable pcOut) {
        var mh$ = VarI1FromBool$MH();
        try {
            return (int)mh$.invokeExact(boolIn, pcOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI1FromUI2$MH() {
        return RuntimeHelper.requireNonNull(constants$1274.VarI1FromUI2$MH,"VarI1FromUI2");
    }
    public static int VarI1FromUI2 ( short uiIn,  Addressable pcOut) {
        var mh$ = VarI1FromUI2$MH();
        try {
            return (int)mh$.invokeExact(uiIn, pcOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI1FromUI4$MH() {
        return RuntimeHelper.requireNonNull(constants$1275.VarI1FromUI4$MH,"VarI1FromUI4");
    }
    public static int VarI1FromUI4 ( int ulIn,  Addressable pcOut) {
        var mh$ = VarI1FromUI4$MH();
        try {
            return (int)mh$.invokeExact(ulIn, pcOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI1FromUI8$MH() {
        return RuntimeHelper.requireNonNull(constants$1275.VarI1FromUI8$MH,"VarI1FromUI8");
    }
    public static int VarI1FromUI8 ( long i64In,  Addressable pcOut) {
        var mh$ = VarI1FromUI8$MH();
        try {
            return (int)mh$.invokeExact(i64In, pcOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI1FromDec$MH() {
        return RuntimeHelper.requireNonNull(constants$1275.VarI1FromDec$MH,"VarI1FromDec");
    }
    public static int VarI1FromDec ( Addressable pdecIn,  Addressable pcOut) {
        var mh$ = VarI1FromDec$MH();
        try {
            return (int)mh$.invokeExact(pdecIn, pcOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI2FromUI1$MH() {
        return RuntimeHelper.requireNonNull(constants$1275.VarUI2FromUI1$MH,"VarUI2FromUI1");
    }
    public static int VarUI2FromUI1 ( byte bIn,  Addressable puiOut) {
        var mh$ = VarUI2FromUI1$MH();
        try {
            return (int)mh$.invokeExact(bIn, puiOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI2FromI2$MH() {
        return RuntimeHelper.requireNonNull(constants$1275.VarUI2FromI2$MH,"VarUI2FromI2");
    }
    public static int VarUI2FromI2 ( short uiIn,  Addressable puiOut) {
        var mh$ = VarUI2FromI2$MH();
        try {
            return (int)mh$.invokeExact(uiIn, puiOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI2FromI4$MH() {
        return RuntimeHelper.requireNonNull(constants$1275.VarUI2FromI4$MH,"VarUI2FromI4");
    }
    public static int VarUI2FromI4 ( int lIn,  Addressable puiOut) {
        var mh$ = VarUI2FromI4$MH();
        try {
            return (int)mh$.invokeExact(lIn, puiOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI2FromI8$MH() {
        return RuntimeHelper.requireNonNull(constants$1276.VarUI2FromI8$MH,"VarUI2FromI8");
    }
    public static int VarUI2FromI8 ( long i64In,  Addressable puiOut) {
        var mh$ = VarUI2FromI8$MH();
        try {
            return (int)mh$.invokeExact(i64In, puiOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI2FromR4$MH() {
        return RuntimeHelper.requireNonNull(constants$1276.VarUI2FromR4$MH,"VarUI2FromR4");
    }
    public static int VarUI2FromR4 ( float fltIn,  Addressable puiOut) {
        var mh$ = VarUI2FromR4$MH();
        try {
            return (int)mh$.invokeExact(fltIn, puiOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI2FromR8$MH() {
        return RuntimeHelper.requireNonNull(constants$1276.VarUI2FromR8$MH,"VarUI2FromR8");
    }
    public static int VarUI2FromR8 ( double dblIn,  Addressable puiOut) {
        var mh$ = VarUI2FromR8$MH();
        try {
            return (int)mh$.invokeExact(dblIn, puiOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI2FromDate$MH() {
        return RuntimeHelper.requireNonNull(constants$1276.VarUI2FromDate$MH,"VarUI2FromDate");
    }
    public static int VarUI2FromDate ( double dateIn,  Addressable puiOut) {
        var mh$ = VarUI2FromDate$MH();
        try {
            return (int)mh$.invokeExact(dateIn, puiOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI2FromCy$MH() {
        return RuntimeHelper.requireNonNull(constants$1276.VarUI2FromCy$MH,"VarUI2FromCy");
    }
    public static int VarUI2FromCy ( MemorySegment cyIn,  Addressable puiOut) {
        var mh$ = VarUI2FromCy$MH();
        try {
            return (int)mh$.invokeExact(cyIn, puiOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI2FromStr$MH() {
        return RuntimeHelper.requireNonNull(constants$1276.VarUI2FromStr$MH,"VarUI2FromStr");
    }
    public static int VarUI2FromStr ( Addressable strIn,  int lcid,  int dwFlags,  Addressable puiOut) {
        var mh$ = VarUI2FromStr$MH();
        try {
            return (int)mh$.invokeExact(strIn, lcid, dwFlags, puiOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI2FromDisp$MH() {
        return RuntimeHelper.requireNonNull(constants$1277.VarUI2FromDisp$MH,"VarUI2FromDisp");
    }
    public static int VarUI2FromDisp ( Addressable pdispIn,  int lcid,  Addressable puiOut) {
        var mh$ = VarUI2FromDisp$MH();
        try {
            return (int)mh$.invokeExact(pdispIn, lcid, puiOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI2FromBool$MH() {
        return RuntimeHelper.requireNonNull(constants$1277.VarUI2FromBool$MH,"VarUI2FromBool");
    }
    public static int VarUI2FromBool ( short boolIn,  Addressable puiOut) {
        var mh$ = VarUI2FromBool$MH();
        try {
            return (int)mh$.invokeExact(boolIn, puiOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI2FromI1$MH() {
        return RuntimeHelper.requireNonNull(constants$1277.VarUI2FromI1$MH,"VarUI2FromI1");
    }
    public static int VarUI2FromI1 ( byte cIn,  Addressable puiOut) {
        var mh$ = VarUI2FromI1$MH();
        try {
            return (int)mh$.invokeExact(cIn, puiOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI2FromUI4$MH() {
        return RuntimeHelper.requireNonNull(constants$1277.VarUI2FromUI4$MH,"VarUI2FromUI4");
    }
    public static int VarUI2FromUI4 ( int ulIn,  Addressable puiOut) {
        var mh$ = VarUI2FromUI4$MH();
        try {
            return (int)mh$.invokeExact(ulIn, puiOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI2FromUI8$MH() {
        return RuntimeHelper.requireNonNull(constants$1277.VarUI2FromUI8$MH,"VarUI2FromUI8");
    }
    public static int VarUI2FromUI8 ( long i64In,  Addressable puiOut) {
        var mh$ = VarUI2FromUI8$MH();
        try {
            return (int)mh$.invokeExact(i64In, puiOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI2FromDec$MH() {
        return RuntimeHelper.requireNonNull(constants$1277.VarUI2FromDec$MH,"VarUI2FromDec");
    }
    public static int VarUI2FromDec ( Addressable pdecIn,  Addressable puiOut) {
        var mh$ = VarUI2FromDec$MH();
        try {
            return (int)mh$.invokeExact(pdecIn, puiOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI4FromUI1$MH() {
        return RuntimeHelper.requireNonNull(constants$1278.VarUI4FromUI1$MH,"VarUI4FromUI1");
    }
    public static int VarUI4FromUI1 ( byte bIn,  Addressable pulOut) {
        var mh$ = VarUI4FromUI1$MH();
        try {
            return (int)mh$.invokeExact(bIn, pulOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI4FromI2$MH() {
        return RuntimeHelper.requireNonNull(constants$1278.VarUI4FromI2$MH,"VarUI4FromI2");
    }
    public static int VarUI4FromI2 ( short uiIn,  Addressable pulOut) {
        var mh$ = VarUI4FromI2$MH();
        try {
            return (int)mh$.invokeExact(uiIn, pulOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI4FromI4$MH() {
        return RuntimeHelper.requireNonNull(constants$1278.VarUI4FromI4$MH,"VarUI4FromI4");
    }
    public static int VarUI4FromI4 ( int lIn,  Addressable pulOut) {
        var mh$ = VarUI4FromI4$MH();
        try {
            return (int)mh$.invokeExact(lIn, pulOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI4FromI8$MH() {
        return RuntimeHelper.requireNonNull(constants$1278.VarUI4FromI8$MH,"VarUI4FromI8");
    }
    public static int VarUI4FromI8 ( long i64In,  Addressable plOut) {
        var mh$ = VarUI4FromI8$MH();
        try {
            return (int)mh$.invokeExact(i64In, plOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI4FromR4$MH() {
        return RuntimeHelper.requireNonNull(constants$1278.VarUI4FromR4$MH,"VarUI4FromR4");
    }
    public static int VarUI4FromR4 ( float fltIn,  Addressable pulOut) {
        var mh$ = VarUI4FromR4$MH();
        try {
            return (int)mh$.invokeExact(fltIn, pulOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI4FromR8$MH() {
        return RuntimeHelper.requireNonNull(constants$1278.VarUI4FromR8$MH,"VarUI4FromR8");
    }
    public static int VarUI4FromR8 ( double dblIn,  Addressable pulOut) {
        var mh$ = VarUI4FromR8$MH();
        try {
            return (int)mh$.invokeExact(dblIn, pulOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI4FromDate$MH() {
        return RuntimeHelper.requireNonNull(constants$1279.VarUI4FromDate$MH,"VarUI4FromDate");
    }
    public static int VarUI4FromDate ( double dateIn,  Addressable pulOut) {
        var mh$ = VarUI4FromDate$MH();
        try {
            return (int)mh$.invokeExact(dateIn, pulOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI4FromCy$MH() {
        return RuntimeHelper.requireNonNull(constants$1279.VarUI4FromCy$MH,"VarUI4FromCy");
    }
    public static int VarUI4FromCy ( MemorySegment cyIn,  Addressable pulOut) {
        var mh$ = VarUI4FromCy$MH();
        try {
            return (int)mh$.invokeExact(cyIn, pulOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI4FromStr$MH() {
        return RuntimeHelper.requireNonNull(constants$1279.VarUI4FromStr$MH,"VarUI4FromStr");
    }
    public static int VarUI4FromStr ( Addressable strIn,  int lcid,  int dwFlags,  Addressable pulOut) {
        var mh$ = VarUI4FromStr$MH();
        try {
            return (int)mh$.invokeExact(strIn, lcid, dwFlags, pulOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI4FromDisp$MH() {
        return RuntimeHelper.requireNonNull(constants$1279.VarUI4FromDisp$MH,"VarUI4FromDisp");
    }
    public static int VarUI4FromDisp ( Addressable pdispIn,  int lcid,  Addressable pulOut) {
        var mh$ = VarUI4FromDisp$MH();
        try {
            return (int)mh$.invokeExact(pdispIn, lcid, pulOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI4FromBool$MH() {
        return RuntimeHelper.requireNonNull(constants$1279.VarUI4FromBool$MH,"VarUI4FromBool");
    }
    public static int VarUI4FromBool ( short boolIn,  Addressable pulOut) {
        var mh$ = VarUI4FromBool$MH();
        try {
            return (int)mh$.invokeExact(boolIn, pulOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI4FromI1$MH() {
        return RuntimeHelper.requireNonNull(constants$1279.VarUI4FromI1$MH,"VarUI4FromI1");
    }
    public static int VarUI4FromI1 ( byte cIn,  Addressable pulOut) {
        var mh$ = VarUI4FromI1$MH();
        try {
            return (int)mh$.invokeExact(cIn, pulOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI4FromUI2$MH() {
        return RuntimeHelper.requireNonNull(constants$1280.VarUI4FromUI2$MH,"VarUI4FromUI2");
    }
    public static int VarUI4FromUI2 ( short uiIn,  Addressable pulOut) {
        var mh$ = VarUI4FromUI2$MH();
        try {
            return (int)mh$.invokeExact(uiIn, pulOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI4FromUI8$MH() {
        return RuntimeHelper.requireNonNull(constants$1280.VarUI4FromUI8$MH,"VarUI4FromUI8");
    }
    public static int VarUI4FromUI8 ( long ui64In,  Addressable plOut) {
        var mh$ = VarUI4FromUI8$MH();
        try {
            return (int)mh$.invokeExact(ui64In, plOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI4FromDec$MH() {
        return RuntimeHelper.requireNonNull(constants$1280.VarUI4FromDec$MH,"VarUI4FromDec");
    }
    public static int VarUI4FromDec ( Addressable pdecIn,  Addressable pulOut) {
        var mh$ = VarUI4FromDec$MH();
        try {
            return (int)mh$.invokeExact(pdecIn, pulOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI8FromUI1$MH() {
        return RuntimeHelper.requireNonNull(constants$1280.VarUI8FromUI1$MH,"VarUI8FromUI1");
    }
    public static int VarUI8FromUI1 ( byte bIn,  Addressable pi64Out) {
        var mh$ = VarUI8FromUI1$MH();
        try {
            return (int)mh$.invokeExact(bIn, pi64Out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI8FromI2$MH() {
        return RuntimeHelper.requireNonNull(constants$1280.VarUI8FromI2$MH,"VarUI8FromI2");
    }
    public static int VarUI8FromI2 ( short sIn,  Addressable pi64Out) {
        var mh$ = VarUI8FromI2$MH();
        try {
            return (int)mh$.invokeExact(sIn, pi64Out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI8FromI4$MH() {
        return RuntimeHelper.requireNonNull(constants$1280.VarUI8FromI4$MH,"VarUI8FromI4");
    }
    public static int VarUI8FromI4 ( int lIn,  Addressable pi64Out) {
        var mh$ = VarUI8FromI4$MH();
        try {
            return (int)mh$.invokeExact(lIn, pi64Out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI8FromI8$MH() {
        return RuntimeHelper.requireNonNull(constants$1281.VarUI8FromI8$MH,"VarUI8FromI8");
    }
    public static int VarUI8FromI8 ( long ui64In,  Addressable pi64Out) {
        var mh$ = VarUI8FromI8$MH();
        try {
            return (int)mh$.invokeExact(ui64In, pi64Out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI8FromR4$MH() {
        return RuntimeHelper.requireNonNull(constants$1281.VarUI8FromR4$MH,"VarUI8FromR4");
    }
    public static int VarUI8FromR4 ( float fltIn,  Addressable pi64Out) {
        var mh$ = VarUI8FromR4$MH();
        try {
            return (int)mh$.invokeExact(fltIn, pi64Out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI8FromR8$MH() {
        return RuntimeHelper.requireNonNull(constants$1281.VarUI8FromR8$MH,"VarUI8FromR8");
    }
    public static int VarUI8FromR8 ( double dblIn,  Addressable pi64Out) {
        var mh$ = VarUI8FromR8$MH();
        try {
            return (int)mh$.invokeExact(dblIn, pi64Out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI8FromCy$MH() {
        return RuntimeHelper.requireNonNull(constants$1281.VarUI8FromCy$MH,"VarUI8FromCy");
    }
    public static int VarUI8FromCy ( MemorySegment cyIn,  Addressable pi64Out) {
        var mh$ = VarUI8FromCy$MH();
        try {
            return (int)mh$.invokeExact(cyIn, pi64Out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI8FromDate$MH() {
        return RuntimeHelper.requireNonNull(constants$1281.VarUI8FromDate$MH,"VarUI8FromDate");
    }
    public static int VarUI8FromDate ( double dateIn,  Addressable pi64Out) {
        var mh$ = VarUI8FromDate$MH();
        try {
            return (int)mh$.invokeExact(dateIn, pi64Out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI8FromStr$MH() {
        return RuntimeHelper.requireNonNull(constants$1281.VarUI8FromStr$MH,"VarUI8FromStr");
    }
    public static int VarUI8FromStr ( Addressable strIn,  int lcid,  int dwFlags,  Addressable pi64Out) {
        var mh$ = VarUI8FromStr$MH();
        try {
            return (int)mh$.invokeExact(strIn, lcid, dwFlags, pi64Out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI8FromDisp$MH() {
        return RuntimeHelper.requireNonNull(constants$1282.VarUI8FromDisp$MH,"VarUI8FromDisp");
    }
    public static int VarUI8FromDisp ( Addressable pdispIn,  int lcid,  Addressable pi64Out) {
        var mh$ = VarUI8FromDisp$MH();
        try {
            return (int)mh$.invokeExact(pdispIn, lcid, pi64Out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI8FromBool$MH() {
        return RuntimeHelper.requireNonNull(constants$1282.VarUI8FromBool$MH,"VarUI8FromBool");
    }
    public static int VarUI8FromBool ( short boolIn,  Addressable pi64Out) {
        var mh$ = VarUI8FromBool$MH();
        try {
            return (int)mh$.invokeExact(boolIn, pi64Out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI8FromI1$MH() {
        return RuntimeHelper.requireNonNull(constants$1282.VarUI8FromI1$MH,"VarUI8FromI1");
    }
    public static int VarUI8FromI1 ( byte cIn,  Addressable pi64Out) {
        var mh$ = VarUI8FromI1$MH();
        try {
            return (int)mh$.invokeExact(cIn, pi64Out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI8FromUI2$MH() {
        return RuntimeHelper.requireNonNull(constants$1282.VarUI8FromUI2$MH,"VarUI8FromUI2");
    }
    public static int VarUI8FromUI2 ( short uiIn,  Addressable pi64Out) {
        var mh$ = VarUI8FromUI2$MH();
        try {
            return (int)mh$.invokeExact(uiIn, pi64Out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI8FromUI4$MH() {
        return RuntimeHelper.requireNonNull(constants$1282.VarUI8FromUI4$MH,"VarUI8FromUI4");
    }
    public static int VarUI8FromUI4 ( int ulIn,  Addressable pi64Out) {
        var mh$ = VarUI8FromUI4$MH();
        try {
            return (int)mh$.invokeExact(ulIn, pi64Out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI8FromDec$MH() {
        return RuntimeHelper.requireNonNull(constants$1282.VarUI8FromDec$MH,"VarUI8FromDec");
    }
    public static int VarUI8FromDec ( Addressable pdecIn,  Addressable pi64Out) {
        var mh$ = VarUI8FromDec$MH();
        try {
            return (int)mh$.invokeExact(pdecIn, pi64Out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDecFromUI1$MH() {
        return RuntimeHelper.requireNonNull(constants$1283.VarDecFromUI1$MH,"VarDecFromUI1");
    }
    public static int VarDecFromUI1 ( byte bIn,  Addressable pdecOut) {
        var mh$ = VarDecFromUI1$MH();
        try {
            return (int)mh$.invokeExact(bIn, pdecOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDecFromI2$MH() {
        return RuntimeHelper.requireNonNull(constants$1283.VarDecFromI2$MH,"VarDecFromI2");
    }
    public static int VarDecFromI2 ( short uiIn,  Addressable pdecOut) {
        var mh$ = VarDecFromI2$MH();
        try {
            return (int)mh$.invokeExact(uiIn, pdecOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDecFromI4$MH() {
        return RuntimeHelper.requireNonNull(constants$1283.VarDecFromI4$MH,"VarDecFromI4");
    }
    public static int VarDecFromI4 ( int lIn,  Addressable pdecOut) {
        var mh$ = VarDecFromI4$MH();
        try {
            return (int)mh$.invokeExact(lIn, pdecOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDecFromI8$MH() {
        return RuntimeHelper.requireNonNull(constants$1283.VarDecFromI8$MH,"VarDecFromI8");
    }
    public static int VarDecFromI8 ( long i64In,  Addressable pdecOut) {
        var mh$ = VarDecFromI8$MH();
        try {
            return (int)mh$.invokeExact(i64In, pdecOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDecFromR4$MH() {
        return RuntimeHelper.requireNonNull(constants$1283.VarDecFromR4$MH,"VarDecFromR4");
    }
    public static int VarDecFromR4 ( float fltIn,  Addressable pdecOut) {
        var mh$ = VarDecFromR4$MH();
        try {
            return (int)mh$.invokeExact(fltIn, pdecOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDecFromR8$MH() {
        return RuntimeHelper.requireNonNull(constants$1283.VarDecFromR8$MH,"VarDecFromR8");
    }
    public static int VarDecFromR8 ( double dblIn,  Addressable pdecOut) {
        var mh$ = VarDecFromR8$MH();
        try {
            return (int)mh$.invokeExact(dblIn, pdecOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDecFromDate$MH() {
        return RuntimeHelper.requireNonNull(constants$1284.VarDecFromDate$MH,"VarDecFromDate");
    }
    public static int VarDecFromDate ( double dateIn,  Addressable pdecOut) {
        var mh$ = VarDecFromDate$MH();
        try {
            return (int)mh$.invokeExact(dateIn, pdecOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDecFromCy$MH() {
        return RuntimeHelper.requireNonNull(constants$1284.VarDecFromCy$MH,"VarDecFromCy");
    }
    public static int VarDecFromCy ( MemorySegment cyIn,  Addressable pdecOut) {
        var mh$ = VarDecFromCy$MH();
        try {
            return (int)mh$.invokeExact(cyIn, pdecOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDecFromStr$MH() {
        return RuntimeHelper.requireNonNull(constants$1284.VarDecFromStr$MH,"VarDecFromStr");
    }
    public static int VarDecFromStr ( Addressable strIn,  int lcid,  int dwFlags,  Addressable pdecOut) {
        var mh$ = VarDecFromStr$MH();
        try {
            return (int)mh$.invokeExact(strIn, lcid, dwFlags, pdecOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDecFromDisp$MH() {
        return RuntimeHelper.requireNonNull(constants$1284.VarDecFromDisp$MH,"VarDecFromDisp");
    }
    public static int VarDecFromDisp ( Addressable pdispIn,  int lcid,  Addressable pdecOut) {
        var mh$ = VarDecFromDisp$MH();
        try {
            return (int)mh$.invokeExact(pdispIn, lcid, pdecOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDecFromBool$MH() {
        return RuntimeHelper.requireNonNull(constants$1284.VarDecFromBool$MH,"VarDecFromBool");
    }
    public static int VarDecFromBool ( short boolIn,  Addressable pdecOut) {
        var mh$ = VarDecFromBool$MH();
        try {
            return (int)mh$.invokeExact(boolIn, pdecOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDecFromI1$MH() {
        return RuntimeHelper.requireNonNull(constants$1284.VarDecFromI1$MH,"VarDecFromI1");
    }
    public static int VarDecFromI1 ( byte cIn,  Addressable pdecOut) {
        var mh$ = VarDecFromI1$MH();
        try {
            return (int)mh$.invokeExact(cIn, pdecOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDecFromUI2$MH() {
        return RuntimeHelper.requireNonNull(constants$1285.VarDecFromUI2$MH,"VarDecFromUI2");
    }
    public static int VarDecFromUI2 ( short uiIn,  Addressable pdecOut) {
        var mh$ = VarDecFromUI2$MH();
        try {
            return (int)mh$.invokeExact(uiIn, pdecOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDecFromUI4$MH() {
        return RuntimeHelper.requireNonNull(constants$1285.VarDecFromUI4$MH,"VarDecFromUI4");
    }
    public static int VarDecFromUI4 ( int ulIn,  Addressable pdecOut) {
        var mh$ = VarDecFromUI4$MH();
        try {
            return (int)mh$.invokeExact(ulIn, pdecOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDecFromUI8$MH() {
        return RuntimeHelper.requireNonNull(constants$1285.VarDecFromUI8$MH,"VarDecFromUI8");
    }
    public static int VarDecFromUI8 ( long ui64In,  Addressable pdecOut) {
        var mh$ = VarDecFromUI8$MH();
        try {
            return (int)mh$.invokeExact(ui64In, pdecOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarParseNumFromStr$MH() {
        return RuntimeHelper.requireNonNull(constants$1285.VarParseNumFromStr$MH,"VarParseNumFromStr");
    }
    public static int VarParseNumFromStr ( Addressable strIn,  int lcid,  int dwFlags,  Addressable pnumprs,  Addressable rgbDig) {
        var mh$ = VarParseNumFromStr$MH();
        try {
            return (int)mh$.invokeExact(strIn, lcid, dwFlags, pnumprs, rgbDig);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarNumFromParseNum$MH() {
        return RuntimeHelper.requireNonNull(constants$1285.VarNumFromParseNum$MH,"VarNumFromParseNum");
    }
    public static int VarNumFromParseNum ( Addressable pnumprs,  Addressable rgbDig,  int dwVtBits,  Addressable pvar) {
        var mh$ = VarNumFromParseNum$MH();
        try {
            return (int)mh$.invokeExact(pnumprs, rgbDig, dwVtBits, pvar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarAdd$MH() {
        return RuntimeHelper.requireNonNull(constants$1285.VarAdd$MH,"VarAdd");
    }
    public static int VarAdd ( Addressable pvarLeft,  Addressable pvarRight,  Addressable pvarResult) {
        var mh$ = VarAdd$MH();
        try {
            return (int)mh$.invokeExact(pvarLeft, pvarRight, pvarResult);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarAnd$MH() {
        return RuntimeHelper.requireNonNull(constants$1286.VarAnd$MH,"VarAnd");
    }
    public static int VarAnd ( Addressable pvarLeft,  Addressable pvarRight,  Addressable pvarResult) {
        var mh$ = VarAnd$MH();
        try {
            return (int)mh$.invokeExact(pvarLeft, pvarRight, pvarResult);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarCat$MH() {
        return RuntimeHelper.requireNonNull(constants$1286.VarCat$MH,"VarCat");
    }
    public static int VarCat ( Addressable pvarLeft,  Addressable pvarRight,  Addressable pvarResult) {
        var mh$ = VarCat$MH();
        try {
            return (int)mh$.invokeExact(pvarLeft, pvarRight, pvarResult);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDiv$MH() {
        return RuntimeHelper.requireNonNull(constants$1286.VarDiv$MH,"VarDiv");
    }
    public static int VarDiv ( Addressable pvarLeft,  Addressable pvarRight,  Addressable pvarResult) {
        var mh$ = VarDiv$MH();
        try {
            return (int)mh$.invokeExact(pvarLeft, pvarRight, pvarResult);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarEqv$MH() {
        return RuntimeHelper.requireNonNull(constants$1286.VarEqv$MH,"VarEqv");
    }
    public static int VarEqv ( Addressable pvarLeft,  Addressable pvarRight,  Addressable pvarResult) {
        var mh$ = VarEqv$MH();
        try {
            return (int)mh$.invokeExact(pvarLeft, pvarRight, pvarResult);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarIdiv$MH() {
        return RuntimeHelper.requireNonNull(constants$1286.VarIdiv$MH,"VarIdiv");
    }
    public static int VarIdiv ( Addressable pvarLeft,  Addressable pvarRight,  Addressable pvarResult) {
        var mh$ = VarIdiv$MH();
        try {
            return (int)mh$.invokeExact(pvarLeft, pvarRight, pvarResult);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarImp$MH() {
        return RuntimeHelper.requireNonNull(constants$1286.VarImp$MH,"VarImp");
    }
    public static int VarImp ( Addressable pvarLeft,  Addressable pvarRight,  Addressable pvarResult) {
        var mh$ = VarImp$MH();
        try {
            return (int)mh$.invokeExact(pvarLeft, pvarRight, pvarResult);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarMod$MH() {
        return RuntimeHelper.requireNonNull(constants$1287.VarMod$MH,"VarMod");
    }
    public static int VarMod ( Addressable pvarLeft,  Addressable pvarRight,  Addressable pvarResult) {
        var mh$ = VarMod$MH();
        try {
            return (int)mh$.invokeExact(pvarLeft, pvarRight, pvarResult);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarMul$MH() {
        return RuntimeHelper.requireNonNull(constants$1287.VarMul$MH,"VarMul");
    }
    public static int VarMul ( Addressable pvarLeft,  Addressable pvarRight,  Addressable pvarResult) {
        var mh$ = VarMul$MH();
        try {
            return (int)mh$.invokeExact(pvarLeft, pvarRight, pvarResult);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarOr$MH() {
        return RuntimeHelper.requireNonNull(constants$1287.VarOr$MH,"VarOr");
    }
    public static int VarOr ( Addressable pvarLeft,  Addressable pvarRight,  Addressable pvarResult) {
        var mh$ = VarOr$MH();
        try {
            return (int)mh$.invokeExact(pvarLeft, pvarRight, pvarResult);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarPow$MH() {
        return RuntimeHelper.requireNonNull(constants$1287.VarPow$MH,"VarPow");
    }
    public static int VarPow ( Addressable pvarLeft,  Addressable pvarRight,  Addressable pvarResult) {
        var mh$ = VarPow$MH();
        try {
            return (int)mh$.invokeExact(pvarLeft, pvarRight, pvarResult);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarSub$MH() {
        return RuntimeHelper.requireNonNull(constants$1287.VarSub$MH,"VarSub");
    }
    public static int VarSub ( Addressable pvarLeft,  Addressable pvarRight,  Addressable pvarResult) {
        var mh$ = VarSub$MH();
        try {
            return (int)mh$.invokeExact(pvarLeft, pvarRight, pvarResult);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarXor$MH() {
        return RuntimeHelper.requireNonNull(constants$1287.VarXor$MH,"VarXor");
    }
    public static int VarXor ( Addressable pvarLeft,  Addressable pvarRight,  Addressable pvarResult) {
        var mh$ = VarXor$MH();
        try {
            return (int)mh$.invokeExact(pvarLeft, pvarRight, pvarResult);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarAbs$MH() {
        return RuntimeHelper.requireNonNull(constants$1288.VarAbs$MH,"VarAbs");
    }
    public static int VarAbs ( Addressable pvarIn,  Addressable pvarResult) {
        var mh$ = VarAbs$MH();
        try {
            return (int)mh$.invokeExact(pvarIn, pvarResult);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarFix$MH() {
        return RuntimeHelper.requireNonNull(constants$1288.VarFix$MH,"VarFix");
    }
    public static int VarFix ( Addressable pvarIn,  Addressable pvarResult) {
        var mh$ = VarFix$MH();
        try {
            return (int)mh$.invokeExact(pvarIn, pvarResult);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarInt$MH() {
        return RuntimeHelper.requireNonNull(constants$1288.VarInt$MH,"VarInt");
    }
    public static int VarInt ( Addressable pvarIn,  Addressable pvarResult) {
        var mh$ = VarInt$MH();
        try {
            return (int)mh$.invokeExact(pvarIn, pvarResult);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarNeg$MH() {
        return RuntimeHelper.requireNonNull(constants$1288.VarNeg$MH,"VarNeg");
    }
    public static int VarNeg ( Addressable pvarIn,  Addressable pvarResult) {
        var mh$ = VarNeg$MH();
        try {
            return (int)mh$.invokeExact(pvarIn, pvarResult);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarNot$MH() {
        return RuntimeHelper.requireNonNull(constants$1288.VarNot$MH,"VarNot");
    }
    public static int VarNot ( Addressable pvarIn,  Addressable pvarResult) {
        var mh$ = VarNot$MH();
        try {
            return (int)mh$.invokeExact(pvarIn, pvarResult);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarRound$MH() {
        return RuntimeHelper.requireNonNull(constants$1288.VarRound$MH,"VarRound");
    }
    public static int VarRound ( Addressable pvarIn,  int cDecimals,  Addressable pvarResult) {
        var mh$ = VarRound$MH();
        try {
            return (int)mh$.invokeExact(pvarIn, cDecimals, pvarResult);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarCmp$MH() {
        return RuntimeHelper.requireNonNull(constants$1289.VarCmp$MH,"VarCmp");
    }
    public static int VarCmp ( Addressable pvarLeft,  Addressable pvarRight,  int lcid,  int dwFlags) {
        var mh$ = VarCmp$MH();
        try {
            return (int)mh$.invokeExact(pvarLeft, pvarRight, lcid, dwFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDecAdd$MH() {
        return RuntimeHelper.requireNonNull(constants$1289.VarDecAdd$MH,"VarDecAdd");
    }
    public static int VarDecAdd ( Addressable pdecLeft,  Addressable pdecRight,  Addressable pdecResult) {
        var mh$ = VarDecAdd$MH();
        try {
            return (int)mh$.invokeExact(pdecLeft, pdecRight, pdecResult);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDecDiv$MH() {
        return RuntimeHelper.requireNonNull(constants$1289.VarDecDiv$MH,"VarDecDiv");
    }
    public static int VarDecDiv ( Addressable pdecLeft,  Addressable pdecRight,  Addressable pdecResult) {
        var mh$ = VarDecDiv$MH();
        try {
            return (int)mh$.invokeExact(pdecLeft, pdecRight, pdecResult);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDecMul$MH() {
        return RuntimeHelper.requireNonNull(constants$1289.VarDecMul$MH,"VarDecMul");
    }
    public static int VarDecMul ( Addressable pdecLeft,  Addressable pdecRight,  Addressable pdecResult) {
        var mh$ = VarDecMul$MH();
        try {
            return (int)mh$.invokeExact(pdecLeft, pdecRight, pdecResult);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDecSub$MH() {
        return RuntimeHelper.requireNonNull(constants$1289.VarDecSub$MH,"VarDecSub");
    }
    public static int VarDecSub ( Addressable pdecLeft,  Addressable pdecRight,  Addressable pdecResult) {
        var mh$ = VarDecSub$MH();
        try {
            return (int)mh$.invokeExact(pdecLeft, pdecRight, pdecResult);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDecAbs$MH() {
        return RuntimeHelper.requireNonNull(constants$1289.VarDecAbs$MH,"VarDecAbs");
    }
    public static int VarDecAbs ( Addressable pdecIn,  Addressable pdecResult) {
        var mh$ = VarDecAbs$MH();
        try {
            return (int)mh$.invokeExact(pdecIn, pdecResult);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDecFix$MH() {
        return RuntimeHelper.requireNonNull(constants$1290.VarDecFix$MH,"VarDecFix");
    }
    public static int VarDecFix ( Addressable pdecIn,  Addressable pdecResult) {
        var mh$ = VarDecFix$MH();
        try {
            return (int)mh$.invokeExact(pdecIn, pdecResult);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDecInt$MH() {
        return RuntimeHelper.requireNonNull(constants$1290.VarDecInt$MH,"VarDecInt");
    }
    public static int VarDecInt ( Addressable pdecIn,  Addressable pdecResult) {
        var mh$ = VarDecInt$MH();
        try {
            return (int)mh$.invokeExact(pdecIn, pdecResult);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDecNeg$MH() {
        return RuntimeHelper.requireNonNull(constants$1290.VarDecNeg$MH,"VarDecNeg");
    }
    public static int VarDecNeg ( Addressable pdecIn,  Addressable pdecResult) {
        var mh$ = VarDecNeg$MH();
        try {
            return (int)mh$.invokeExact(pdecIn, pdecResult);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDecRound$MH() {
        return RuntimeHelper.requireNonNull(constants$1290.VarDecRound$MH,"VarDecRound");
    }
    public static int VarDecRound ( Addressable pdecIn,  int cDecimals,  Addressable pdecResult) {
        var mh$ = VarDecRound$MH();
        try {
            return (int)mh$.invokeExact(pdecIn, cDecimals, pdecResult);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDecCmp$MH() {
        return RuntimeHelper.requireNonNull(constants$1290.VarDecCmp$MH,"VarDecCmp");
    }
    public static int VarDecCmp ( Addressable pdecLeft,  Addressable pdecRight) {
        var mh$ = VarDecCmp$MH();
        try {
            return (int)mh$.invokeExact(pdecLeft, pdecRight);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDecCmpR8$MH() {
        return RuntimeHelper.requireNonNull(constants$1290.VarDecCmpR8$MH,"VarDecCmpR8");
    }
    public static int VarDecCmpR8 ( Addressable pdecLeft,  double dblRight) {
        var mh$ = VarDecCmpR8$MH();
        try {
            return (int)mh$.invokeExact(pdecLeft, dblRight);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarCyAdd$MH() {
        return RuntimeHelper.requireNonNull(constants$1291.VarCyAdd$MH,"VarCyAdd");
    }
    public static int VarCyAdd ( MemorySegment cyLeft,  MemorySegment cyRight,  Addressable pcyResult) {
        var mh$ = VarCyAdd$MH();
        try {
            return (int)mh$.invokeExact(cyLeft, cyRight, pcyResult);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarCyMul$MH() {
        return RuntimeHelper.requireNonNull(constants$1291.VarCyMul$MH,"VarCyMul");
    }
    public static int VarCyMul ( MemorySegment cyLeft,  MemorySegment cyRight,  Addressable pcyResult) {
        var mh$ = VarCyMul$MH();
        try {
            return (int)mh$.invokeExact(cyLeft, cyRight, pcyResult);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarCyMulI4$MH() {
        return RuntimeHelper.requireNonNull(constants$1291.VarCyMulI4$MH,"VarCyMulI4");
    }
    public static int VarCyMulI4 ( MemorySegment cyLeft,  int lRight,  Addressable pcyResult) {
        var mh$ = VarCyMulI4$MH();
        try {
            return (int)mh$.invokeExact(cyLeft, lRight, pcyResult);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarCyMulI8$MH() {
        return RuntimeHelper.requireNonNull(constants$1291.VarCyMulI8$MH,"VarCyMulI8");
    }
    public static int VarCyMulI8 ( MemorySegment cyLeft,  long lRight,  Addressable pcyResult) {
        var mh$ = VarCyMulI8$MH();
        try {
            return (int)mh$.invokeExact(cyLeft, lRight, pcyResult);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarCySub$MH() {
        return RuntimeHelper.requireNonNull(constants$1291.VarCySub$MH,"VarCySub");
    }
    public static int VarCySub ( MemorySegment cyLeft,  MemorySegment cyRight,  Addressable pcyResult) {
        var mh$ = VarCySub$MH();
        try {
            return (int)mh$.invokeExact(cyLeft, cyRight, pcyResult);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarCyAbs$MH() {
        return RuntimeHelper.requireNonNull(constants$1291.VarCyAbs$MH,"VarCyAbs");
    }
    public static int VarCyAbs ( MemorySegment cyIn,  Addressable pcyResult) {
        var mh$ = VarCyAbs$MH();
        try {
            return (int)mh$.invokeExact(cyIn, pcyResult);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarCyFix$MH() {
        return RuntimeHelper.requireNonNull(constants$1292.VarCyFix$MH,"VarCyFix");
    }
    public static int VarCyFix ( MemorySegment cyIn,  Addressable pcyResult) {
        var mh$ = VarCyFix$MH();
        try {
            return (int)mh$.invokeExact(cyIn, pcyResult);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarCyInt$MH() {
        return RuntimeHelper.requireNonNull(constants$1292.VarCyInt$MH,"VarCyInt");
    }
    public static int VarCyInt ( MemorySegment cyIn,  Addressable pcyResult) {
        var mh$ = VarCyInt$MH();
        try {
            return (int)mh$.invokeExact(cyIn, pcyResult);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarCyNeg$MH() {
        return RuntimeHelper.requireNonNull(constants$1292.VarCyNeg$MH,"VarCyNeg");
    }
    public static int VarCyNeg ( MemorySegment cyIn,  Addressable pcyResult) {
        var mh$ = VarCyNeg$MH();
        try {
            return (int)mh$.invokeExact(cyIn, pcyResult);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarCyRound$MH() {
        return RuntimeHelper.requireNonNull(constants$1292.VarCyRound$MH,"VarCyRound");
    }
    public static int VarCyRound ( MemorySegment cyIn,  int cDecimals,  Addressable pcyResult) {
        var mh$ = VarCyRound$MH();
        try {
            return (int)mh$.invokeExact(cyIn, cDecimals, pcyResult);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarCyCmp$MH() {
        return RuntimeHelper.requireNonNull(constants$1292.VarCyCmp$MH,"VarCyCmp");
    }
    public static int VarCyCmp ( MemorySegment cyLeft,  MemorySegment cyRight) {
        var mh$ = VarCyCmp$MH();
        try {
            return (int)mh$.invokeExact(cyLeft, cyRight);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarCyCmpR8$MH() {
        return RuntimeHelper.requireNonNull(constants$1292.VarCyCmpR8$MH,"VarCyCmpR8");
    }
    public static int VarCyCmpR8 ( MemorySegment cyLeft,  double dblRight) {
        var mh$ = VarCyCmpR8$MH();
        try {
            return (int)mh$.invokeExact(cyLeft, dblRight);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarBstrCat$MH() {
        return RuntimeHelper.requireNonNull(constants$1293.VarBstrCat$MH,"VarBstrCat");
    }
    public static int VarBstrCat ( Addressable bstrLeft,  Addressable bstrRight,  Addressable pbstrResult) {
        var mh$ = VarBstrCat$MH();
        try {
            return (int)mh$.invokeExact(bstrLeft, bstrRight, pbstrResult);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarBstrCmp$MH() {
        return RuntimeHelper.requireNonNull(constants$1293.VarBstrCmp$MH,"VarBstrCmp");
    }
    public static int VarBstrCmp ( Addressable bstrLeft,  Addressable bstrRight,  int lcid,  int dwFlags) {
        var mh$ = VarBstrCmp$MH();
        try {
            return (int)mh$.invokeExact(bstrLeft, bstrRight, lcid, dwFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarR8Pow$MH() {
        return RuntimeHelper.requireNonNull(constants$1293.VarR8Pow$MH,"VarR8Pow");
    }
    public static int VarR8Pow ( double dblLeft,  double dblRight,  Addressable pdblResult) {
        var mh$ = VarR8Pow$MH();
        try {
            return (int)mh$.invokeExact(dblLeft, dblRight, pdblResult);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarR4CmpR8$MH() {
        return RuntimeHelper.requireNonNull(constants$1293.VarR4CmpR8$MH,"VarR4CmpR8");
    }
    public static int VarR4CmpR8 ( float fltLeft,  double dblRight) {
        var mh$ = VarR4CmpR8$MH();
        try {
            return (int)mh$.invokeExact(fltLeft, dblRight);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarR8Round$MH() {
        return RuntimeHelper.requireNonNull(constants$1293.VarR8Round$MH,"VarR8Round");
    }
    public static int VarR8Round ( double dblIn,  int cDecimals,  Addressable pdblResult) {
        var mh$ = VarR8Round$MH();
        try {
            return (int)mh$.invokeExact(dblIn, cDecimals, pdblResult);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDateFromUdate$MH() {
        return RuntimeHelper.requireNonNull(constants$1293.VarDateFromUdate$MH,"VarDateFromUdate");
    }
    public static int VarDateFromUdate ( Addressable pudateIn,  int dwFlags,  Addressable pdateOut) {
        var mh$ = VarDateFromUdate$MH();
        try {
            return (int)mh$.invokeExact(pudateIn, dwFlags, pdateOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDateFromUdateEx$MH() {
        return RuntimeHelper.requireNonNull(constants$1294.VarDateFromUdateEx$MH,"VarDateFromUdateEx");
    }
    public static int VarDateFromUdateEx ( Addressable pudateIn,  int lcid,  int dwFlags,  Addressable pdateOut) {
        var mh$ = VarDateFromUdateEx$MH();
        try {
            return (int)mh$.invokeExact(pudateIn, lcid, dwFlags, pdateOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUdateFromDate$MH() {
        return RuntimeHelper.requireNonNull(constants$1294.VarUdateFromDate$MH,"VarUdateFromDate");
    }
    public static int VarUdateFromDate ( double dateIn,  int dwFlags,  Addressable pudateOut) {
        var mh$ = VarUdateFromDate$MH();
        try {
            return (int)mh$.invokeExact(dateIn, dwFlags, pudateOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetAltMonthNames$MH() {
        return RuntimeHelper.requireNonNull(constants$1294.GetAltMonthNames$MH,"GetAltMonthNames");
    }
    public static int GetAltMonthNames ( int lcid,  Addressable prgp) {
        var mh$ = GetAltMonthNames$MH();
        try {
            return (int)mh$.invokeExact(lcid, prgp);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarFormat$MH() {
        return RuntimeHelper.requireNonNull(constants$1294.VarFormat$MH,"VarFormat");
    }
    public static int VarFormat ( Addressable pvarIn,  Addressable pstrFormat,  int iFirstDay,  int iFirstWeek,  int dwFlags,  Addressable pbstrOut) {
        var mh$ = VarFormat$MH();
        try {
            return (int)mh$.invokeExact(pvarIn, pstrFormat, iFirstDay, iFirstWeek, dwFlags, pbstrOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarFormatDateTime$MH() {
        return RuntimeHelper.requireNonNull(constants$1294.VarFormatDateTime$MH,"VarFormatDateTime");
    }
    public static int VarFormatDateTime ( Addressable pvarIn,  int iNamedFormat,  int dwFlags,  Addressable pbstrOut) {
        var mh$ = VarFormatDateTime$MH();
        try {
            return (int)mh$.invokeExact(pvarIn, iNamedFormat, dwFlags, pbstrOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarFormatNumber$MH() {
        return RuntimeHelper.requireNonNull(constants$1294.VarFormatNumber$MH,"VarFormatNumber");
    }
    public static int VarFormatNumber ( Addressable pvarIn,  int iNumDig,  int iIncLead,  int iUseParens,  int iGroup,  int dwFlags,  Addressable pbstrOut) {
        var mh$ = VarFormatNumber$MH();
        try {
            return (int)mh$.invokeExact(pvarIn, iNumDig, iIncLead, iUseParens, iGroup, dwFlags, pbstrOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarFormatPercent$MH() {
        return RuntimeHelper.requireNonNull(constants$1295.VarFormatPercent$MH,"VarFormatPercent");
    }
    public static int VarFormatPercent ( Addressable pvarIn,  int iNumDig,  int iIncLead,  int iUseParens,  int iGroup,  int dwFlags,  Addressable pbstrOut) {
        var mh$ = VarFormatPercent$MH();
        try {
            return (int)mh$.invokeExact(pvarIn, iNumDig, iIncLead, iUseParens, iGroup, dwFlags, pbstrOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarFormatCurrency$MH() {
        return RuntimeHelper.requireNonNull(constants$1295.VarFormatCurrency$MH,"VarFormatCurrency");
    }
    public static int VarFormatCurrency ( Addressable pvarIn,  int iNumDig,  int iIncLead,  int iUseParens,  int iGroup,  int dwFlags,  Addressable pbstrOut) {
        var mh$ = VarFormatCurrency$MH();
        try {
            return (int)mh$.invokeExact(pvarIn, iNumDig, iIncLead, iUseParens, iGroup, dwFlags, pbstrOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarWeekdayName$MH() {
        return RuntimeHelper.requireNonNull(constants$1295.VarWeekdayName$MH,"VarWeekdayName");
    }
    public static int VarWeekdayName ( int iWeekday,  int fAbbrev,  int iFirstDay,  int dwFlags,  Addressable pbstrOut) {
        var mh$ = VarWeekdayName$MH();
        try {
            return (int)mh$.invokeExact(iWeekday, fAbbrev, iFirstDay, dwFlags, pbstrOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarMonthName$MH() {
        return RuntimeHelper.requireNonNull(constants$1295.VarMonthName$MH,"VarMonthName");
    }
    public static int VarMonthName ( int iMonth,  int fAbbrev,  int dwFlags,  Addressable pbstrOut) {
        var mh$ = VarMonthName$MH();
        try {
            return (int)mh$.invokeExact(iMonth, fAbbrev, dwFlags, pbstrOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarFormatFromTokens$MH() {
        return RuntimeHelper.requireNonNull(constants$1295.VarFormatFromTokens$MH,"VarFormatFromTokens");
    }
    public static int VarFormatFromTokens ( Addressable pvarIn,  Addressable pstrFormat,  Addressable pbTokCur,  int dwFlags,  Addressable pbstrOut,  int lcid) {
        var mh$ = VarFormatFromTokens$MH();
        try {
            return (int)mh$.invokeExact(pvarIn, pstrFormat, pbTokCur, dwFlags, pbstrOut, lcid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarTokenizeFormatString$MH() {
        return RuntimeHelper.requireNonNull(constants$1295.VarTokenizeFormatString$MH,"VarTokenizeFormatString");
    }
    public static int VarTokenizeFormatString ( Addressable pstrFormat,  Addressable rgbTok,  int cbTok,  int iFirstDay,  int iFirstWeek,  int lcid,  Addressable pcbActual) {
        var mh$ = VarTokenizeFormatString$MH();
        try {
            return (int)mh$.invokeExact(pstrFormat, rgbTok, cbTok, iFirstDay, iFirstWeek, lcid, pcbActual);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress LPTYPELIB = Constants$root.C_POINTER$LAYOUT;
    public static OfInt DISPID = Constants$root.C_LONG$LAYOUT;
    public static OfInt MEMBERID = Constants$root.C_LONG$LAYOUT;
    public static OfAddress LPTYPEINFO = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPTYPECOMP = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPCREATETYPELIB = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPCREATETYPEINFO = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle LHashValOfNameSysA$MH() {
        return RuntimeHelper.requireNonNull(constants$1296.LHashValOfNameSysA$MH,"LHashValOfNameSysA");
    }
    public static int LHashValOfNameSysA ( int syskind,  int lcid,  Addressable szName) {
        var mh$ = LHashValOfNameSysA$MH();
        try {
            return (int)mh$.invokeExact(syskind, lcid, szName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle LHashValOfNameSys$MH() {
        return RuntimeHelper.requireNonNull(constants$1296.LHashValOfNameSys$MH,"LHashValOfNameSys");
    }
    public static int LHashValOfNameSys ( int syskind,  int lcid,  Addressable szName) {
        var mh$ = LHashValOfNameSys$MH();
        try {
            return (int)mh$.invokeExact(syskind, lcid, szName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle LoadTypeLib$MH() {
        return RuntimeHelper.requireNonNull(constants$1296.LoadTypeLib$MH,"LoadTypeLib");
    }
    public static int LoadTypeLib ( Addressable szFile,  Addressable pptlib) {
        var mh$ = LoadTypeLib$MH();
        try {
            return (int)mh$.invokeExact(szFile, pptlib);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int REGKIND_DEFAULT() {
        return (int)0L;
    }
    public static int REGKIND_REGISTER() {
        return (int)1L;
    }
    public static int REGKIND_NONE() {
        return (int)2L;
    }
    public static MethodHandle LoadTypeLibEx$MH() {
        return RuntimeHelper.requireNonNull(constants$1296.LoadTypeLibEx$MH,"LoadTypeLibEx");
    }
    public static int LoadTypeLibEx ( Addressable szFile,  int regkind,  Addressable pptlib) {
        var mh$ = LoadTypeLibEx$MH();
        try {
            return (int)mh$.invokeExact(szFile, regkind, pptlib);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle LoadRegTypeLib$MH() {
        return RuntimeHelper.requireNonNull(constants$1296.LoadRegTypeLib$MH,"LoadRegTypeLib");
    }
    public static int LoadRegTypeLib ( Addressable rguid,  short wVerMajor,  short wVerMinor,  int lcid,  Addressable pptlib) {
        var mh$ = LoadRegTypeLib$MH();
        try {
            return (int)mh$.invokeExact(rguid, wVerMajor, wVerMinor, lcid, pptlib);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle QueryPathOfRegTypeLib$MH() {
        return RuntimeHelper.requireNonNull(constants$1296.QueryPathOfRegTypeLib$MH,"QueryPathOfRegTypeLib");
    }
    public static int QueryPathOfRegTypeLib ( Addressable guid,  short wMaj,  short wMin,  int lcid,  Addressable lpbstrPathName) {
        var mh$ = QueryPathOfRegTypeLib$MH();
        try {
            return (int)mh$.invokeExact(guid, wMaj, wMin, lcid, lpbstrPathName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegisterTypeLib$MH() {
        return RuntimeHelper.requireNonNull(constants$1297.RegisterTypeLib$MH,"RegisterTypeLib");
    }
    public static int RegisterTypeLib ( Addressable ptlib,  Addressable szFullPath,  Addressable szHelpDir) {
        var mh$ = RegisterTypeLib$MH();
        try {
            return (int)mh$.invokeExact(ptlib, szFullPath, szHelpDir);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle UnRegisterTypeLib$MH() {
        return RuntimeHelper.requireNonNull(constants$1297.UnRegisterTypeLib$MH,"UnRegisterTypeLib");
    }
    public static int UnRegisterTypeLib ( Addressable libID,  short wVerMajor,  short wVerMinor,  int lcid,  int syskind) {
        var mh$ = UnRegisterTypeLib$MH();
        try {
            return (int)mh$.invokeExact(libID, wVerMajor, wVerMinor, lcid, syskind);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegisterTypeLibForUser$MH() {
        return RuntimeHelper.requireNonNull(constants$1297.RegisterTypeLibForUser$MH,"RegisterTypeLibForUser");
    }
    public static int RegisterTypeLibForUser ( Addressable ptlib,  Addressable szFullPath,  Addressable szHelpDir) {
        var mh$ = RegisterTypeLibForUser$MH();
        try {
            return (int)mh$.invokeExact(ptlib, szFullPath, szHelpDir);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle UnRegisterTypeLibForUser$MH() {
        return RuntimeHelper.requireNonNull(constants$1297.UnRegisterTypeLibForUser$MH,"UnRegisterTypeLibForUser");
    }
    public static int UnRegisterTypeLibForUser ( Addressable libID,  short wMajorVerNum,  short wMinorVerNum,  int lcid,  int syskind) {
        var mh$ = UnRegisterTypeLibForUser$MH();
        try {
            return (int)mh$.invokeExact(libID, wMajorVerNum, wMinorVerNum, lcid, syskind);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CreateTypeLib$MH() {
        return RuntimeHelper.requireNonNull(constants$1297.CreateTypeLib$MH,"CreateTypeLib");
    }
    public static int CreateTypeLib ( int syskind,  Addressable szFile,  Addressable ppctlib) {
        var mh$ = CreateTypeLib$MH();
        try {
            return (int)mh$.invokeExact(syskind, szFile, ppctlib);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CreateTypeLib2$MH() {
        return RuntimeHelper.requireNonNull(constants$1297.CreateTypeLib2$MH,"CreateTypeLib2");
    }
    public static int CreateTypeLib2 ( int syskind,  Addressable szFile,  Addressable ppctlib) {
        var mh$ = CreateTypeLib2$MH();
        try {
            return (int)mh$.invokeExact(syskind, szFile, ppctlib);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress LPDISPATCH = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPARAMDATA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMETHODDATA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPINTERFACEDATA = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle DispGetParam$MH() {
        return RuntimeHelper.requireNonNull(constants$1298.DispGetParam$MH,"DispGetParam");
    }
    public static int DispGetParam ( Addressable pdispparams,  int position,  short vtTarg,  Addressable pvarResult,  Addressable puArgErr) {
        var mh$ = DispGetParam$MH();
        try {
            return (int)mh$.invokeExact(pdispparams, position, vtTarg, pvarResult, puArgErr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DispGetIDsOfNames$MH() {
        return RuntimeHelper.requireNonNull(constants$1298.DispGetIDsOfNames$MH,"DispGetIDsOfNames");
    }
    public static int DispGetIDsOfNames ( Addressable ptinfo,  Addressable rgszNames,  int cNames,  Addressable rgdispid) {
        var mh$ = DispGetIDsOfNames$MH();
        try {
            return (int)mh$.invokeExact(ptinfo, rgszNames, cNames, rgdispid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DispInvoke$MH() {
        return RuntimeHelper.requireNonNull(constants$1298.DispInvoke$MH,"DispInvoke");
    }
    public static int DispInvoke ( Addressable _this,  Addressable ptinfo,  int dispidMember,  short wFlags,  Addressable pparams,  Addressable pvarResult,  Addressable pexcepinfo,  Addressable puArgErr) {
        var mh$ = DispInvoke$MH();
        try {
            return (int)mh$.invokeExact(_this, ptinfo, dispidMember, wFlags, pparams, pvarResult, pexcepinfo, puArgErr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CreateDispTypeInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$1298.CreateDispTypeInfo$MH,"CreateDispTypeInfo");
    }
    public static int CreateDispTypeInfo ( Addressable pidata,  int lcid,  Addressable pptinfo) {
        var mh$ = CreateDispTypeInfo$MH();
        try {
            return (int)mh$.invokeExact(pidata, lcid, pptinfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CreateStdDispatch$MH() {
        return RuntimeHelper.requireNonNull(constants$1298.CreateStdDispatch$MH,"CreateStdDispatch");
    }
    public static int CreateStdDispatch ( Addressable punkOuter,  Addressable pvThis,  Addressable ptinfo,  Addressable ppunkStdDisp) {
        var mh$ = CreateStdDispatch$MH();
        try {
            return (int)mh$.invokeExact(punkOuter, pvThis, ptinfo, ppunkStdDisp);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DispCallFunc$MH() {
        return RuntimeHelper.requireNonNull(constants$1298.DispCallFunc$MH,"DispCallFunc");
    }
    public static int DispCallFunc ( Addressable pvInstance,  long oVft,  int cc,  short vtReturn,  int cActuals,  Addressable prgvt,  Addressable prgpvarg,  Addressable pvargResult) {
        var mh$ = DispCallFunc$MH();
        try {
            return (int)mh$.invokeExact(pvInstance, oVft, cc, vtReturn, cActuals, prgvt, prgpvarg, pvargResult);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegisterActiveObject$MH() {
        return RuntimeHelper.requireNonNull(constants$1299.RegisterActiveObject$MH,"RegisterActiveObject");
    }
    public static int RegisterActiveObject ( Addressable punk,  Addressable rclsid,  int dwFlags,  Addressable pdwRegister) {
        var mh$ = RegisterActiveObject$MH();
        try {
            return (int)mh$.invokeExact(punk, rclsid, dwFlags, pdwRegister);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RevokeActiveObject$MH() {
        return RuntimeHelper.requireNonNull(constants$1299.RevokeActiveObject$MH,"RevokeActiveObject");
    }
    public static int RevokeActiveObject ( int dwRegister,  Addressable pvReserved) {
        var mh$ = RevokeActiveObject$MH();
        try {
            return (int)mh$.invokeExact(dwRegister, pvReserved);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetActiveObject$MH() {
        return RuntimeHelper.requireNonNull(constants$1299.GetActiveObject$MH,"GetActiveObject");
    }
    public static int GetActiveObject ( Addressable rclsid,  Addressable pvReserved,  Addressable ppunk) {
        var mh$ = GetActiveObject$MH();
        try {
            return (int)mh$.invokeExact(rclsid, pvReserved, ppunk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetErrorInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$1299.SetErrorInfo$MH,"SetErrorInfo");
    }
    public static int SetErrorInfo ( int dwReserved,  Addressable perrinfo) {
        var mh$ = SetErrorInfo$MH();
        try {
            return (int)mh$.invokeExact(dwReserved, perrinfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetErrorInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$1299.GetErrorInfo$MH,"GetErrorInfo");
    }
    public static int GetErrorInfo ( int dwReserved,  Addressable pperrinfo) {
        var mh$ = GetErrorInfo$MH();
        try {
            return (int)mh$.invokeExact(dwReserved, pperrinfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CreateErrorInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$1299.CreateErrorInfo$MH,"CreateErrorInfo");
    }
    public static int CreateErrorInfo ( Addressable pperrinfo) {
        var mh$ = CreateErrorInfo$MH();
        try {
            return (int)mh$.invokeExact(pperrinfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetRecordInfoFromTypeInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$1300.GetRecordInfoFromTypeInfo$MH,"GetRecordInfoFromTypeInfo");
    }
    public static int GetRecordInfoFromTypeInfo ( Addressable pTypeInfo,  Addressable ppRecInfo) {
        var mh$ = GetRecordInfoFromTypeInfo$MH();
        try {
            return (int)mh$.invokeExact(pTypeInfo, ppRecInfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetRecordInfoFromGuids$MH() {
        return RuntimeHelper.requireNonNull(constants$1300.GetRecordInfoFromGuids$MH,"GetRecordInfoFromGuids");
    }
    public static int GetRecordInfoFromGuids ( Addressable rGuidTypeLib,  int uVerMajor,  int uVerMinor,  int lcid,  Addressable rGuidTypeInfo,  Addressable ppRecInfo) {
        var mh$ = GetRecordInfoFromGuids$MH();
        try {
            return (int)mh$.invokeExact(rGuidTypeLib, uVerMajor, uVerMinor, lcid, rGuidTypeInfo, ppRecInfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OaBuildVersion$MH() {
        return RuntimeHelper.requireNonNull(constants$1300.OaBuildVersion$MH,"OaBuildVersion");
    }
    public static int OaBuildVersion () {
        var mh$ = OaBuildVersion$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ClearCustData$MH() {
        return RuntimeHelper.requireNonNull(constants$1300.ClearCustData$MH,"ClearCustData");
    }
    public static void ClearCustData ( Addressable pCustData) {
        var mh$ = ClearCustData$MH();
        try {
            mh$.invokeExact(pCustData);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OaEnablePerUserTLibRegistration$MH() {
        return RuntimeHelper.requireNonNull(constants$1300.OaEnablePerUserTLibRegistration$MH,"OaEnablePerUserTLibRegistration");
    }
    public static void OaEnablePerUserTLibRegistration () {
        var mh$ = OaEnablePerUserTLibRegistration$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleBuildVersion$MH() {
        return RuntimeHelper.requireNonNull(constants$1300.OleBuildVersion$MH,"OleBuildVersion");
    }
    public static int OleBuildVersion () {
        var mh$ = OleBuildVersion$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WriteFmtUserTypeStg$MH() {
        return RuntimeHelper.requireNonNull(constants$1301.WriteFmtUserTypeStg$MH,"WriteFmtUserTypeStg");
    }
    public static int WriteFmtUserTypeStg ( Addressable pstg,  short cf,  Addressable lpszUserType) {
        var mh$ = WriteFmtUserTypeStg$MH();
        try {
            return (int)mh$.invokeExact(pstg, cf, lpszUserType);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ReadFmtUserTypeStg$MH() {
        return RuntimeHelper.requireNonNull(constants$1301.ReadFmtUserTypeStg$MH,"ReadFmtUserTypeStg");
    }
    public static int ReadFmtUserTypeStg ( Addressable pstg,  Addressable pcf,  Addressable lplpszUserType) {
        var mh$ = ReadFmtUserTypeStg$MH();
        try {
            return (int)mh$.invokeExact(pstg, pcf, lplpszUserType);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleInitialize$MH() {
        return RuntimeHelper.requireNonNull(constants$1301.OleInitialize$MH,"OleInitialize");
    }
    public static int OleInitialize ( Addressable pvReserved) {
        var mh$ = OleInitialize$MH();
        try {
            return (int)mh$.invokeExact(pvReserved);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleUninitialize$MH() {
        return RuntimeHelper.requireNonNull(constants$1301.OleUninitialize$MH,"OleUninitialize");
    }
    public static void OleUninitialize () {
        var mh$ = OleUninitialize$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleQueryLinkFromData$MH() {
        return RuntimeHelper.requireNonNull(constants$1301.OleQueryLinkFromData$MH,"OleQueryLinkFromData");
    }
    public static int OleQueryLinkFromData ( Addressable pSrcDataObject) {
        var mh$ = OleQueryLinkFromData$MH();
        try {
            return (int)mh$.invokeExact(pSrcDataObject);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleQueryCreateFromData$MH() {
        return RuntimeHelper.requireNonNull(constants$1301.OleQueryCreateFromData$MH,"OleQueryCreateFromData");
    }
    public static int OleQueryCreateFromData ( Addressable pSrcDataObject) {
        var mh$ = OleQueryCreateFromData$MH();
        try {
            return (int)mh$.invokeExact(pSrcDataObject);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleCreate$MH() {
        return RuntimeHelper.requireNonNull(constants$1302.OleCreate$MH,"OleCreate");
    }
    public static int OleCreate ( Addressable rclsid,  Addressable riid,  int renderopt,  Addressable pFormatEtc,  Addressable pClientSite,  Addressable pStg,  Addressable ppvObj) {
        var mh$ = OleCreate$MH();
        try {
            return (int)mh$.invokeExact(rclsid, riid, renderopt, pFormatEtc, pClientSite, pStg, ppvObj);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleCreateEx$MH() {
        return RuntimeHelper.requireNonNull(constants$1302.OleCreateEx$MH,"OleCreateEx");
    }
    public static int OleCreateEx ( Addressable rclsid,  Addressable riid,  int dwFlags,  int renderopt,  int cFormats,  Addressable rgAdvf,  Addressable rgFormatEtc,  Addressable lpAdviseSink,  Addressable rgdwConnection,  Addressable pClientSite,  Addressable pStg,  Addressable ppvObj) {
        var mh$ = OleCreateEx$MH();
        try {
            return (int)mh$.invokeExact(rclsid, riid, dwFlags, renderopt, cFormats, rgAdvf, rgFormatEtc, lpAdviseSink, rgdwConnection, pClientSite, pStg, ppvObj);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleCreateFromData$MH() {
        return RuntimeHelper.requireNonNull(constants$1302.OleCreateFromData$MH,"OleCreateFromData");
    }
    public static int OleCreateFromData ( Addressable pSrcDataObj,  Addressable riid,  int renderopt,  Addressable pFormatEtc,  Addressable pClientSite,  Addressable pStg,  Addressable ppvObj) {
        var mh$ = OleCreateFromData$MH();
        try {
            return (int)mh$.invokeExact(pSrcDataObj, riid, renderopt, pFormatEtc, pClientSite, pStg, ppvObj);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleCreateFromDataEx$MH() {
        return RuntimeHelper.requireNonNull(constants$1302.OleCreateFromDataEx$MH,"OleCreateFromDataEx");
    }
    public static int OleCreateFromDataEx ( Addressable pSrcDataObj,  Addressable riid,  int dwFlags,  int renderopt,  int cFormats,  Addressable rgAdvf,  Addressable rgFormatEtc,  Addressable lpAdviseSink,  Addressable rgdwConnection,  Addressable pClientSite,  Addressable pStg,  Addressable ppvObj) {
        var mh$ = OleCreateFromDataEx$MH();
        try {
            return (int)mh$.invokeExact(pSrcDataObj, riid, dwFlags, renderopt, cFormats, rgAdvf, rgFormatEtc, lpAdviseSink, rgdwConnection, pClientSite, pStg, ppvObj);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleCreateLinkFromData$MH() {
        return RuntimeHelper.requireNonNull(constants$1302.OleCreateLinkFromData$MH,"OleCreateLinkFromData");
    }
    public static int OleCreateLinkFromData ( Addressable pSrcDataObj,  Addressable riid,  int renderopt,  Addressable pFormatEtc,  Addressable pClientSite,  Addressable pStg,  Addressable ppvObj) {
        var mh$ = OleCreateLinkFromData$MH();
        try {
            return (int)mh$.invokeExact(pSrcDataObj, riid, renderopt, pFormatEtc, pClientSite, pStg, ppvObj);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleCreateLinkFromDataEx$MH() {
        return RuntimeHelper.requireNonNull(constants$1302.OleCreateLinkFromDataEx$MH,"OleCreateLinkFromDataEx");
    }
    public static int OleCreateLinkFromDataEx ( Addressable pSrcDataObj,  Addressable riid,  int dwFlags,  int renderopt,  int cFormats,  Addressable rgAdvf,  Addressable rgFormatEtc,  Addressable lpAdviseSink,  Addressable rgdwConnection,  Addressable pClientSite,  Addressable pStg,  Addressable ppvObj) {
        var mh$ = OleCreateLinkFromDataEx$MH();
        try {
            return (int)mh$.invokeExact(pSrcDataObj, riid, dwFlags, renderopt, cFormats, rgAdvf, rgFormatEtc, lpAdviseSink, rgdwConnection, pClientSite, pStg, ppvObj);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleCreateStaticFromData$MH() {
        return RuntimeHelper.requireNonNull(constants$1303.OleCreateStaticFromData$MH,"OleCreateStaticFromData");
    }
    public static int OleCreateStaticFromData ( Addressable pSrcDataObj,  Addressable iid,  int renderopt,  Addressable pFormatEtc,  Addressable pClientSite,  Addressable pStg,  Addressable ppvObj) {
        var mh$ = OleCreateStaticFromData$MH();
        try {
            return (int)mh$.invokeExact(pSrcDataObj, iid, renderopt, pFormatEtc, pClientSite, pStg, ppvObj);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleCreateLink$MH() {
        return RuntimeHelper.requireNonNull(constants$1303.OleCreateLink$MH,"OleCreateLink");
    }
    public static int OleCreateLink ( Addressable pmkLinkSrc,  Addressable riid,  int renderopt,  Addressable lpFormatEtc,  Addressable pClientSite,  Addressable pStg,  Addressable ppvObj) {
        var mh$ = OleCreateLink$MH();
        try {
            return (int)mh$.invokeExact(pmkLinkSrc, riid, renderopt, lpFormatEtc, pClientSite, pStg, ppvObj);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleCreateLinkEx$MH() {
        return RuntimeHelper.requireNonNull(constants$1303.OleCreateLinkEx$MH,"OleCreateLinkEx");
    }
    public static int OleCreateLinkEx ( Addressable pmkLinkSrc,  Addressable riid,  int dwFlags,  int renderopt,  int cFormats,  Addressable rgAdvf,  Addressable rgFormatEtc,  Addressable lpAdviseSink,  Addressable rgdwConnection,  Addressable pClientSite,  Addressable pStg,  Addressable ppvObj) {
        var mh$ = OleCreateLinkEx$MH();
        try {
            return (int)mh$.invokeExact(pmkLinkSrc, riid, dwFlags, renderopt, cFormats, rgAdvf, rgFormatEtc, lpAdviseSink, rgdwConnection, pClientSite, pStg, ppvObj);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleCreateLinkToFile$MH() {
        return RuntimeHelper.requireNonNull(constants$1303.OleCreateLinkToFile$MH,"OleCreateLinkToFile");
    }
    public static int OleCreateLinkToFile ( Addressable lpszFileName,  Addressable riid,  int renderopt,  Addressable lpFormatEtc,  Addressable pClientSite,  Addressable pStg,  Addressable ppvObj) {
        var mh$ = OleCreateLinkToFile$MH();
        try {
            return (int)mh$.invokeExact(lpszFileName, riid, renderopt, lpFormatEtc, pClientSite, pStg, ppvObj);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleCreateLinkToFileEx$MH() {
        return RuntimeHelper.requireNonNull(constants$1303.OleCreateLinkToFileEx$MH,"OleCreateLinkToFileEx");
    }
    public static int OleCreateLinkToFileEx ( Addressable lpszFileName,  Addressable riid,  int dwFlags,  int renderopt,  int cFormats,  Addressable rgAdvf,  Addressable rgFormatEtc,  Addressable lpAdviseSink,  Addressable rgdwConnection,  Addressable pClientSite,  Addressable pStg,  Addressable ppvObj) {
        var mh$ = OleCreateLinkToFileEx$MH();
        try {
            return (int)mh$.invokeExact(lpszFileName, riid, dwFlags, renderopt, cFormats, rgAdvf, rgFormatEtc, lpAdviseSink, rgdwConnection, pClientSite, pStg, ppvObj);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleCreateFromFile$MH() {
        return RuntimeHelper.requireNonNull(constants$1303.OleCreateFromFile$MH,"OleCreateFromFile");
    }
    public static int OleCreateFromFile ( Addressable rclsid,  Addressable lpszFileName,  Addressable riid,  int renderopt,  Addressable lpFormatEtc,  Addressable pClientSite,  Addressable pStg,  Addressable ppvObj) {
        var mh$ = OleCreateFromFile$MH();
        try {
            return (int)mh$.invokeExact(rclsid, lpszFileName, riid, renderopt, lpFormatEtc, pClientSite, pStg, ppvObj);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleCreateFromFileEx$MH() {
        return RuntimeHelper.requireNonNull(constants$1304.OleCreateFromFileEx$MH,"OleCreateFromFileEx");
    }
    public static int OleCreateFromFileEx ( Addressable rclsid,  Addressable lpszFileName,  Addressable riid,  int dwFlags,  int renderopt,  int cFormats,  Addressable rgAdvf,  Addressable rgFormatEtc,  Addressable lpAdviseSink,  Addressable rgdwConnection,  Addressable pClientSite,  Addressable pStg,  Addressable ppvObj) {
        var mh$ = OleCreateFromFileEx$MH();
        try {
            return (int)mh$.invokeExact(rclsid, lpszFileName, riid, dwFlags, renderopt, cFormats, rgAdvf, rgFormatEtc, lpAdviseSink, rgdwConnection, pClientSite, pStg, ppvObj);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleLoad$MH() {
        return RuntimeHelper.requireNonNull(constants$1304.OleLoad$MH,"OleLoad");
    }
    public static int OleLoad ( Addressable pStg,  Addressable riid,  Addressable pClientSite,  Addressable ppvObj) {
        var mh$ = OleLoad$MH();
        try {
            return (int)mh$.invokeExact(pStg, riid, pClientSite, ppvObj);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleSave$MH() {
        return RuntimeHelper.requireNonNull(constants$1304.OleSave$MH,"OleSave");
    }
    public static int OleSave ( Addressable pPS,  Addressable pStg,  int fSameAsLoad) {
        var mh$ = OleSave$MH();
        try {
            return (int)mh$.invokeExact(pPS, pStg, fSameAsLoad);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleLoadFromStream$MH() {
        return RuntimeHelper.requireNonNull(constants$1304.OleLoadFromStream$MH,"OleLoadFromStream");
    }
    public static int OleLoadFromStream ( Addressable pStm,  Addressable iidInterface,  Addressable ppvObj) {
        var mh$ = OleLoadFromStream$MH();
        try {
            return (int)mh$.invokeExact(pStm, iidInterface, ppvObj);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleSaveToStream$MH() {
        return RuntimeHelper.requireNonNull(constants$1304.OleSaveToStream$MH,"OleSaveToStream");
    }
    public static int OleSaveToStream ( Addressable pPStm,  Addressable pStm) {
        var mh$ = OleSaveToStream$MH();
        try {
            return (int)mh$.invokeExact(pPStm, pStm);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleSetContainedObject$MH() {
        return RuntimeHelper.requireNonNull(constants$1304.OleSetContainedObject$MH,"OleSetContainedObject");
    }
    public static int OleSetContainedObject ( Addressable pUnknown,  int fContained) {
        var mh$ = OleSetContainedObject$MH();
        try {
            return (int)mh$.invokeExact(pUnknown, fContained);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleNoteObjectVisible$MH() {
        return RuntimeHelper.requireNonNull(constants$1305.OleNoteObjectVisible$MH,"OleNoteObjectVisible");
    }
    public static int OleNoteObjectVisible ( Addressable pUnknown,  int fVisible) {
        var mh$ = OleNoteObjectVisible$MH();
        try {
            return (int)mh$.invokeExact(pUnknown, fVisible);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegisterDragDrop$MH() {
        return RuntimeHelper.requireNonNull(constants$1305.RegisterDragDrop$MH,"RegisterDragDrop");
    }
    public static int RegisterDragDrop ( Addressable hwnd,  Addressable pDropTarget) {
        var mh$ = RegisterDragDrop$MH();
        try {
            return (int)mh$.invokeExact(hwnd, pDropTarget);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RevokeDragDrop$MH() {
        return RuntimeHelper.requireNonNull(constants$1305.RevokeDragDrop$MH,"RevokeDragDrop");
    }
    public static int RevokeDragDrop ( Addressable hwnd) {
        var mh$ = RevokeDragDrop$MH();
        try {
            return (int)mh$.invokeExact(hwnd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DoDragDrop$MH() {
        return RuntimeHelper.requireNonNull(constants$1305.DoDragDrop$MH,"DoDragDrop");
    }
    public static int DoDragDrop ( Addressable pDataObj,  Addressable pDropSource,  int dwOKEffects,  Addressable pdwEffect) {
        var mh$ = DoDragDrop$MH();
        try {
            return (int)mh$.invokeExact(pDataObj, pDropSource, dwOKEffects, pdwEffect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleSetClipboard$MH() {
        return RuntimeHelper.requireNonNull(constants$1305.OleSetClipboard$MH,"OleSetClipboard");
    }
    public static int OleSetClipboard ( Addressable pDataObj) {
        var mh$ = OleSetClipboard$MH();
        try {
            return (int)mh$.invokeExact(pDataObj);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleGetClipboard$MH() {
        return RuntimeHelper.requireNonNull(constants$1305.OleGetClipboard$MH,"OleGetClipboard");
    }
    public static int OleGetClipboard ( Addressable ppDataObj) {
        var mh$ = OleGetClipboard$MH();
        try {
            return (int)mh$.invokeExact(ppDataObj);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleGetClipboardWithEnterpriseInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$1306.OleGetClipboardWithEnterpriseInfo$MH,"OleGetClipboardWithEnterpriseInfo");
    }
    public static int OleGetClipboardWithEnterpriseInfo ( Addressable dataObject,  Addressable dataEnterpriseId,  Addressable sourceDescription,  Addressable targetDescription,  Addressable dataDescription) {
        var mh$ = OleGetClipboardWithEnterpriseInfo$MH();
        try {
            return (int)mh$.invokeExact(dataObject, dataEnterpriseId, sourceDescription, targetDescription, dataDescription);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleFlushClipboard$MH() {
        return RuntimeHelper.requireNonNull(constants$1306.OleFlushClipboard$MH,"OleFlushClipboard");
    }
    public static int OleFlushClipboard () {
        var mh$ = OleFlushClipboard$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleIsCurrentClipboard$MH() {
        return RuntimeHelper.requireNonNull(constants$1306.OleIsCurrentClipboard$MH,"OleIsCurrentClipboard");
    }
    public static int OleIsCurrentClipboard ( Addressable pDataObj) {
        var mh$ = OleIsCurrentClipboard$MH();
        try {
            return (int)mh$.invokeExact(pDataObj);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleCreateMenuDescriptor$MH() {
        return RuntimeHelper.requireNonNull(constants$1306.OleCreateMenuDescriptor$MH,"OleCreateMenuDescriptor");
    }
    public static MemoryAddress OleCreateMenuDescriptor ( Addressable hmenuCombined,  Addressable lpMenuWidths) {
        var mh$ = OleCreateMenuDescriptor$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(hmenuCombined, lpMenuWidths);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleSetMenuDescriptor$MH() {
        return RuntimeHelper.requireNonNull(constants$1306.OleSetMenuDescriptor$MH,"OleSetMenuDescriptor");
    }
    public static int OleSetMenuDescriptor ( Addressable holemenu,  Addressable hwndFrame,  Addressable hwndActiveObject,  Addressable lpFrame,  Addressable lpActiveObj) {
        var mh$ = OleSetMenuDescriptor$MH();
        try {
            return (int)mh$.invokeExact(holemenu, hwndFrame, hwndActiveObject, lpFrame, lpActiveObj);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleDestroyMenuDescriptor$MH() {
        return RuntimeHelper.requireNonNull(constants$1306.OleDestroyMenuDescriptor$MH,"OleDestroyMenuDescriptor");
    }
    public static int OleDestroyMenuDescriptor ( Addressable holemenu) {
        var mh$ = OleDestroyMenuDescriptor$MH();
        try {
            return (int)mh$.invokeExact(holemenu);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleTranslateAccelerator$MH() {
        return RuntimeHelper.requireNonNull(constants$1307.OleTranslateAccelerator$MH,"OleTranslateAccelerator");
    }
    public static int OleTranslateAccelerator ( Addressable lpFrame,  Addressable lpFrameInfo,  Addressable lpmsg) {
        var mh$ = OleTranslateAccelerator$MH();
        try {
            return (int)mh$.invokeExact(lpFrame, lpFrameInfo, lpmsg);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleDuplicateData$MH() {
        return RuntimeHelper.requireNonNull(constants$1307.OleDuplicateData$MH,"OleDuplicateData");
    }
    public static MemoryAddress OleDuplicateData ( Addressable hSrc,  short cfFormat,  int uiFlags) {
        var mh$ = OleDuplicateData$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(hSrc, cfFormat, uiFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleDraw$MH() {
        return RuntimeHelper.requireNonNull(constants$1307.OleDraw$MH,"OleDraw");
    }
    public static int OleDraw ( Addressable pUnknown,  int dwAspect,  Addressable hdcDraw,  Addressable lprcBounds) {
        var mh$ = OleDraw$MH();
        try {
            return (int)mh$.invokeExact(pUnknown, dwAspect, hdcDraw, lprcBounds);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleRun$MH() {
        return RuntimeHelper.requireNonNull(constants$1307.OleRun$MH,"OleRun");
    }
    public static int OleRun ( Addressable pUnknown) {
        var mh$ = OleRun$MH();
        try {
            return (int)mh$.invokeExact(pUnknown);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleIsRunning$MH() {
        return RuntimeHelper.requireNonNull(constants$1307.OleIsRunning$MH,"OleIsRunning");
    }
    public static int OleIsRunning ( Addressable pObject) {
        var mh$ = OleIsRunning$MH();
        try {
            return (int)mh$.invokeExact(pObject);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleLockRunning$MH() {
        return RuntimeHelper.requireNonNull(constants$1307.OleLockRunning$MH,"OleLockRunning");
    }
    public static int OleLockRunning ( Addressable pUnknown,  int fLock,  int fLastUnlockCloses) {
        var mh$ = OleLockRunning$MH();
        try {
            return (int)mh$.invokeExact(pUnknown, fLock, fLastUnlockCloses);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ReleaseStgMedium$MH() {
        return RuntimeHelper.requireNonNull(constants$1308.ReleaseStgMedium$MH,"ReleaseStgMedium");
    }
    public static void ReleaseStgMedium ( Addressable x0) {
        var mh$ = ReleaseStgMedium$MH();
        try {
            mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CreateOleAdviseHolder$MH() {
        return RuntimeHelper.requireNonNull(constants$1308.CreateOleAdviseHolder$MH,"CreateOleAdviseHolder");
    }
    public static int CreateOleAdviseHolder ( Addressable ppOAHolder) {
        var mh$ = CreateOleAdviseHolder$MH();
        try {
            return (int)mh$.invokeExact(ppOAHolder);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleCreateDefaultHandler$MH() {
        return RuntimeHelper.requireNonNull(constants$1308.OleCreateDefaultHandler$MH,"OleCreateDefaultHandler");
    }
    public static int OleCreateDefaultHandler ( Addressable clsid,  Addressable pUnkOuter,  Addressable riid,  Addressable lplpObj) {
        var mh$ = OleCreateDefaultHandler$MH();
        try {
            return (int)mh$.invokeExact(clsid, pUnkOuter, riid, lplpObj);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleCreateEmbeddingHelper$MH() {
        return RuntimeHelper.requireNonNull(constants$1308.OleCreateEmbeddingHelper$MH,"OleCreateEmbeddingHelper");
    }
    public static int OleCreateEmbeddingHelper ( Addressable clsid,  Addressable pUnkOuter,  int flags,  Addressable pCF,  Addressable riid,  Addressable lplpObj) {
        var mh$ = OleCreateEmbeddingHelper$MH();
        try {
            return (int)mh$.invokeExact(clsid, pUnkOuter, flags, pCF, riid, lplpObj);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IsAccelerator$MH() {
        return RuntimeHelper.requireNonNull(constants$1308.IsAccelerator$MH,"IsAccelerator");
    }
    public static int IsAccelerator ( Addressable hAccel,  int cAccelEntries,  Addressable lpMsg,  Addressable lpwCmd) {
        var mh$ = IsAccelerator$MH();
        try {
            return (int)mh$.invokeExact(hAccel, cAccelEntries, lpMsg, lpwCmd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleGetIconOfFile$MH() {
        return RuntimeHelper.requireNonNull(constants$1308.OleGetIconOfFile$MH,"OleGetIconOfFile");
    }
    public static MemoryAddress OleGetIconOfFile ( Addressable lpszPath,  int fUseFileAsLabel) {
        var mh$ = OleGetIconOfFile$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(lpszPath, fUseFileAsLabel);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleGetIconOfClass$MH() {
        return RuntimeHelper.requireNonNull(constants$1309.OleGetIconOfClass$MH,"OleGetIconOfClass");
    }
    public static MemoryAddress OleGetIconOfClass ( Addressable rclsid,  Addressable lpszLabel,  int fUseTypeAsLabel) {
        var mh$ = OleGetIconOfClass$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(rclsid, lpszLabel, fUseTypeAsLabel);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleMetafilePictFromIconAndLabel$MH() {
        return RuntimeHelper.requireNonNull(constants$1309.OleMetafilePictFromIconAndLabel$MH,"OleMetafilePictFromIconAndLabel");
    }
    public static MemoryAddress OleMetafilePictFromIconAndLabel ( Addressable hIcon,  Addressable lpszLabel,  Addressable lpszSourceFile,  int iIconIndex) {
        var mh$ = OleMetafilePictFromIconAndLabel$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(hIcon, lpszLabel, lpszSourceFile, iIconIndex);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleRegGetUserType$MH() {
        return RuntimeHelper.requireNonNull(constants$1309.OleRegGetUserType$MH,"OleRegGetUserType");
    }
    public static int OleRegGetUserType ( Addressable clsid,  int dwFormOfType,  Addressable pszUserType) {
        var mh$ = OleRegGetUserType$MH();
        try {
            return (int)mh$.invokeExact(clsid, dwFormOfType, pszUserType);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleRegGetMiscStatus$MH() {
        return RuntimeHelper.requireNonNull(constants$1309.OleRegGetMiscStatus$MH,"OleRegGetMiscStatus");
    }
    public static int OleRegGetMiscStatus ( Addressable clsid,  int dwAspect,  Addressable pdwStatus) {
        var mh$ = OleRegGetMiscStatus$MH();
        try {
            return (int)mh$.invokeExact(clsid, dwAspect, pdwStatus);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleRegEnumFormatEtc$MH() {
        return RuntimeHelper.requireNonNull(constants$1309.OleRegEnumFormatEtc$MH,"OleRegEnumFormatEtc");
    }
    public static int OleRegEnumFormatEtc ( Addressable clsid,  int dwDirection,  Addressable ppenum) {
        var mh$ = OleRegEnumFormatEtc$MH();
        try {
            return (int)mh$.invokeExact(clsid, dwDirection, ppenum);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleRegEnumVerbs$MH() {
        return RuntimeHelper.requireNonNull(constants$1309.OleRegEnumVerbs$MH,"OleRegEnumVerbs");
    }
    public static int OleRegEnumVerbs ( Addressable clsid,  Addressable ppenum) {
        var mh$ = OleRegEnumVerbs$MH();
        try {
            return (int)mh$.invokeExact(clsid, ppenum);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress LPOLESTREAM = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPOLESTREAMVTBL = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle OleConvertOLESTREAMToIStorage$MH() {
        return RuntimeHelper.requireNonNull(constants$1310.OleConvertOLESTREAMToIStorage$MH,"OleConvertOLESTREAMToIStorage");
    }
    public static int OleConvertOLESTREAMToIStorage ( Addressable lpolestream,  Addressable pstg,  Addressable ptd) {
        var mh$ = OleConvertOLESTREAMToIStorage$MH();
        try {
            return (int)mh$.invokeExact(lpolestream, pstg, ptd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleConvertIStorageToOLESTREAM$MH() {
        return RuntimeHelper.requireNonNull(constants$1310.OleConvertIStorageToOLESTREAM$MH,"OleConvertIStorageToOLESTREAM");
    }
    public static int OleConvertIStorageToOLESTREAM ( Addressable pstg,  Addressable lpolestream) {
        var mh$ = OleConvertIStorageToOLESTREAM$MH();
        try {
            return (int)mh$.invokeExact(pstg, lpolestream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleDoAutoConvert$MH() {
        return RuntimeHelper.requireNonNull(constants$1310.OleDoAutoConvert$MH,"OleDoAutoConvert");
    }
    public static int OleDoAutoConvert ( Addressable pStg,  Addressable pClsidNew) {
        var mh$ = OleDoAutoConvert$MH();
        try {
            return (int)mh$.invokeExact(pStg, pClsidNew);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleGetAutoConvert$MH() {
        return RuntimeHelper.requireNonNull(constants$1310.OleGetAutoConvert$MH,"OleGetAutoConvert");
    }
    public static int OleGetAutoConvert ( Addressable clsidOld,  Addressable pClsidNew) {
        var mh$ = OleGetAutoConvert$MH();
        try {
            return (int)mh$.invokeExact(clsidOld, pClsidNew);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleSetAutoConvert$MH() {
        return RuntimeHelper.requireNonNull(constants$1310.OleSetAutoConvert$MH,"OleSetAutoConvert");
    }
    public static int OleSetAutoConvert ( Addressable clsidOld,  Addressable clsidNew) {
        var mh$ = OleSetAutoConvert$MH();
        try {
            return (int)mh$.invokeExact(clsidOld, clsidNew);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetConvertStg$MH() {
        return RuntimeHelper.requireNonNull(constants$1310.SetConvertStg$MH,"SetConvertStg");
    }
    public static int SetConvertStg ( Addressable pStg,  int fConvert) {
        var mh$ = SetConvertStg$MH();
        try {
            return (int)mh$.invokeExact(pStg, fConvert);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleConvertIStorageToOLESTREAMEx$MH() {
        return RuntimeHelper.requireNonNull(constants$1311.OleConvertIStorageToOLESTREAMEx$MH,"OleConvertIStorageToOLESTREAMEx");
    }
    public static int OleConvertIStorageToOLESTREAMEx ( Addressable pstg,  short cfFormat,  int lWidth,  int lHeight,  int dwSize,  Addressable pmedium,  Addressable polestm) {
        var mh$ = OleConvertIStorageToOLESTREAMEx$MH();
        try {
            return (int)mh$.invokeExact(pstg, cfFormat, lWidth, lHeight, dwSize, pmedium, polestm);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleConvertOLESTREAMToIStorageEx$MH() {
        return RuntimeHelper.requireNonNull(constants$1311.OleConvertOLESTREAMToIStorageEx$MH,"OleConvertOLESTREAMToIStorageEx");
    }
    public static int OleConvertOLESTREAMToIStorageEx ( Addressable polestm,  Addressable pstg,  Addressable pcfFormat,  Addressable plwWidth,  Addressable plHeight,  Addressable pdwSize,  Addressable pmedium) {
        var mh$ = OleConvertOLESTREAMToIStorageEx$MH();
        try {
            return (int)mh$.invokeExact(polestm, pstg, pcfFormat, plwWidth, plHeight, pdwSize, pmedium);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MemorySegment IID_IPrintDialogCallback$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1311.IID_IPrintDialogCallback$SEGMENT,"IID_IPrintDialogCallback");
    }
    public static MemorySegment IID_IPrintDialogServices$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1311.IID_IPrintDialogServices$SEGMENT,"IID_IPrintDialogServices");
    }
    public static OfAddress LPOPENFILENAME_NT4A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPOPENFILENAME_NT4W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPOPENFILENAME_NT4 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPOPENFILENAMEA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPOPENFILENAMEW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPOPENFILENAME = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle GetOpenFileNameA$MH() {
        return RuntimeHelper.requireNonNull(constants$1312.GetOpenFileNameA$MH,"GetOpenFileNameA");
    }
    public static int GetOpenFileNameA ( Addressable x0) {
        var mh$ = GetOpenFileNameA$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetOpenFileNameW$MH() {
        return RuntimeHelper.requireNonNull(constants$1312.GetOpenFileNameW$MH,"GetOpenFileNameW");
    }
    public static int GetOpenFileNameW ( Addressable x0) {
        var mh$ = GetOpenFileNameW$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetSaveFileNameA$MH() {
        return RuntimeHelper.requireNonNull(constants$1312.GetSaveFileNameA$MH,"GetSaveFileNameA");
    }
    public static int GetSaveFileNameA ( Addressable x0) {
        var mh$ = GetSaveFileNameA$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetSaveFileNameW$MH() {
        return RuntimeHelper.requireNonNull(constants$1312.GetSaveFileNameW$MH,"GetSaveFileNameW");
    }
    public static int GetSaveFileNameW ( Addressable x0) {
        var mh$ = GetSaveFileNameW$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetFileTitleA$MH() {
        return RuntimeHelper.requireNonNull(constants$1312.GetFileTitleA$MH,"GetFileTitleA");
    }
    public static short GetFileTitleA ( Addressable x0,  Addressable Buf,  short cchSize) {
        var mh$ = GetFileTitleA$MH();
        try {
            return (short)mh$.invokeExact(x0, Buf, cchSize);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetFileTitleW$MH() {
        return RuntimeHelper.requireNonNull(constants$1312.GetFileTitleW$MH,"GetFileTitleW");
    }
    public static short GetFileTitleW ( Addressable x0,  Addressable Buf,  short cchSize) {
        var mh$ = GetFileTitleW$MH();
        try {
            return (short)mh$.invokeExact(x0, Buf, cchSize);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress LPOFNOTIFYA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPOFNOTIFYW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPOFNOTIFY = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPOFNOTIFYEXA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPOFNOTIFYEXW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPOFNOTIFYEX = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPCHOOSECOLORA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPCHOOSECOLORW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPCHOOSECOLOR = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle ChooseColorA$MH() {
        return RuntimeHelper.requireNonNull(constants$1313.ChooseColorA$MH,"ChooseColorA");
    }
    public static int ChooseColorA ( Addressable x0) {
        var mh$ = ChooseColorA$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ChooseColorW$MH() {
        return RuntimeHelper.requireNonNull(constants$1313.ChooseColorW$MH,"ChooseColorW");
    }
    public static int ChooseColorW ( Addressable x0) {
        var mh$ = ChooseColorW$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress LPFINDREPLACEA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPFINDREPLACEW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPFINDREPLACE = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle FindTextA$MH() {
        return RuntimeHelper.requireNonNull(constants$1314.FindTextA$MH,"FindTextA");
    }
    public static MemoryAddress FindTextA ( Addressable x0) {
        var mh$ = FindTextA$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle FindTextW$MH() {
        return RuntimeHelper.requireNonNull(constants$1314.FindTextW$MH,"FindTextW");
    }
    public static MemoryAddress FindTextW ( Addressable x0) {
        var mh$ = FindTextW$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ReplaceTextA$MH() {
        return RuntimeHelper.requireNonNull(constants$1314.ReplaceTextA$MH,"ReplaceTextA");
    }
    public static MemoryAddress ReplaceTextA ( Addressable x0) {
        var mh$ = ReplaceTextA$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ReplaceTextW$MH() {
        return RuntimeHelper.requireNonNull(constants$1314.ReplaceTextW$MH,"ReplaceTextW");
    }
    public static MemoryAddress ReplaceTextW ( Addressable x0) {
        var mh$ = ReplaceTextW$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress LPCHOOSEFONTA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPCHOOSEFONTW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPCHOOSEFONT = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PCCHOOSEFONTA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PCCHOOSEFONTW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PCCHOOSEFONT = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle ChooseFontA$MH() {
        return RuntimeHelper.requireNonNull(constants$1315.ChooseFontA$MH,"ChooseFontA");
    }
    public static int ChooseFontA ( Addressable x0) {
        var mh$ = ChooseFontA$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ChooseFontW$MH() {
        return RuntimeHelper.requireNonNull(constants$1315.ChooseFontW$MH,"ChooseFontW");
    }
    public static int ChooseFontW ( Addressable x0) {
        var mh$ = ChooseFontW$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress LPPRINTDLGA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPRINTDLGW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPRINTDLG = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle PrintDlgA$MH() {
        return RuntimeHelper.requireNonNull(constants$1316.PrintDlgA$MH,"PrintDlgA");
    }
    public static int PrintDlgA ( Addressable pPD) {
        var mh$ = PrintDlgA$MH();
        try {
            return (int)mh$.invokeExact(pPD);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PrintDlgW$MH() {
        return RuntimeHelper.requireNonNull(constants$1316.PrintDlgW$MH,"PrintDlgW");
    }
    public static int PrintDlgW ( Addressable pPD) {
        var mh$ = PrintDlgW$MH();
        try {
            return (int)mh$.invokeExact(pPD);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress LPPRINTPAGERANGE = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PCPRINTPAGERANGE = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPRINTDLGEXA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPRINTDLGEXW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPRINTDLGEX = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle PrintDlgExA$MH() {
        return RuntimeHelper.requireNonNull(constants$1316.PrintDlgExA$MH,"PrintDlgExA");
    }
    public static int PrintDlgExA ( Addressable pPD) {
        var mh$ = PrintDlgExA$MH();
        try {
            return (int)mh$.invokeExact(pPD);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PrintDlgExW$MH() {
        return RuntimeHelper.requireNonNull(constants$1316.PrintDlgExW$MH,"PrintDlgExW");
    }
    public static int PrintDlgExW ( Addressable pPD) {
        var mh$ = PrintDlgExW$MH();
        try {
            return (int)mh$.invokeExact(pPD);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress LPDEVNAMES = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PCDEVNAMES = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle CommDlgExtendedError$MH() {
        return RuntimeHelper.requireNonNull(constants$1316.CommDlgExtendedError$MH,"CommDlgExtendedError");
    }
    public static int CommDlgExtendedError () {
        var mh$ = CommDlgExtendedError$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress LPPAGESETUPDLGA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPAGESETUPDLGW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPAGESETUPDLG = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle PageSetupDlgA$MH() {
        return RuntimeHelper.requireNonNull(constants$1317.PageSetupDlgA$MH,"PageSetupDlgA");
    }
    public static int PageSetupDlgA ( Addressable x0) {
        var mh$ = PageSetupDlgA$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PageSetupDlgW$MH() {
        return RuntimeHelper.requireNonNull(constants$1317.PageSetupDlgW$MH,"PageSetupDlgW");
    }
    public static int PageSetupDlgW ( Addressable x0) {
        var mh$ = PageSetupDlgW$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle uaw_CharUpperW$MH() {
        return RuntimeHelper.requireNonNull(constants$1317.uaw_CharUpperW$MH,"uaw_CharUpperW");
    }
    public static MemoryAddress uaw_CharUpperW ( Addressable String_) {
        var mh$ = uaw_CharUpperW$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(String_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle uaw_lstrcmpW$MH() {
        return RuntimeHelper.requireNonNull(constants$1318.uaw_lstrcmpW$MH,"uaw_lstrcmpW");
    }
    public static int uaw_lstrcmpW ( Addressable String1,  Addressable String2) {
        var mh$ = uaw_lstrcmpW$MH();
        try {
            return (int)mh$.invokeExact(String1, String2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle uaw_lstrcmpiW$MH() {
        return RuntimeHelper.requireNonNull(constants$1318.uaw_lstrcmpiW$MH,"uaw_lstrcmpiW");
    }
    public static int uaw_lstrcmpiW ( Addressable String1,  Addressable String2) {
        var mh$ = uaw_lstrcmpiW$MH();
        try {
            return (int)mh$.invokeExact(String1, String2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle uaw_lstrlenW$MH() {
        return RuntimeHelper.requireNonNull(constants$1318.uaw_lstrlenW$MH,"uaw_lstrlenW");
    }
    public static int uaw_lstrlenW ( Addressable String_) {
        var mh$ = uaw_lstrlenW$MH();
        try {
            return (int)mh$.invokeExact(String_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle uaw_wcschr$MH() {
        return RuntimeHelper.requireNonNull(constants$1318.uaw_wcschr$MH,"uaw_wcschr");
    }
    public static MemoryAddress uaw_wcschr ( Addressable String_,  short Character) {
        var mh$ = uaw_wcschr$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(String_, Character);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle uaw_wcscpy$MH() {
        return RuntimeHelper.requireNonNull(constants$1318.uaw_wcscpy$MH,"uaw_wcscpy");
    }
    public static MemoryAddress uaw_wcscpy ( Addressable Destination,  Addressable Source) {
        var mh$ = uaw_wcscpy$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(Destination, Source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle uaw_wcsicmp$MH() {
        return RuntimeHelper.requireNonNull(constants$1318.uaw_wcsicmp$MH,"uaw_wcsicmp");
    }
    public static int uaw_wcsicmp ( Addressable String1,  Addressable String2) {
        var mh$ = uaw_wcsicmp$MH();
        try {
            return (int)mh$.invokeExact(String1, String2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle uaw_wcslen$MH() {
        return RuntimeHelper.requireNonNull(constants$1319.uaw_wcslen$MH,"uaw_wcslen");
    }
    public static long uaw_wcslen ( Addressable String_) {
        var mh$ = uaw_wcslen$MH();
        try {
            return (long)mh$.invokeExact(String_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle uaw_wcsrchr$MH() {
        return RuntimeHelper.requireNonNull(constants$1319.uaw_wcsrchr$MH,"uaw_wcsrchr");
    }
    public static MemoryAddress uaw_wcsrchr ( Addressable String_,  short Character) {
        var mh$ = uaw_wcsrchr$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(String_, Character);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ua_CharUpperW$MH() {
        return RuntimeHelper.requireNonNull(constants$1319.ua_CharUpperW$MH,"ua_CharUpperW");
    }
    public static MemoryAddress ua_CharUpperW ( Addressable String_) {
        var mh$ = ua_CharUpperW$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(String_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ua_lstrcmpW$MH() {
        return RuntimeHelper.requireNonNull(constants$1319.ua_lstrcmpW$MH,"ua_lstrcmpW");
    }
    public static int ua_lstrcmpW ( Addressable String1,  Addressable String2) {
        var mh$ = ua_lstrcmpW$MH();
        try {
            return (int)mh$.invokeExact(String1, String2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ua_lstrcmpiW$MH() {
        return RuntimeHelper.requireNonNull(constants$1319.ua_lstrcmpiW$MH,"ua_lstrcmpiW");
    }
    public static int ua_lstrcmpiW ( Addressable String1,  Addressable String2) {
        var mh$ = ua_lstrcmpiW$MH();
        try {
            return (int)mh$.invokeExact(String1, String2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ua_lstrlenW$MH() {
        return RuntimeHelper.requireNonNull(constants$1319.ua_lstrlenW$MH,"ua_lstrlenW");
    }
    public static int ua_lstrlenW ( Addressable String_) {
        var mh$ = ua_lstrlenW$MH();
        try {
            return (int)mh$.invokeExact(String_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress PUWSTR_C = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle ua_wcschr$MH() {
        return RuntimeHelper.requireNonNull(constants$1320.ua_wcschr$MH,"ua_wcschr");
    }
    public static MemoryAddress ua_wcschr ( Addressable String_,  short Character) {
        var mh$ = ua_wcschr$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(String_, Character);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ua_wcsrchr$MH() {
        return RuntimeHelper.requireNonNull(constants$1320.ua_wcsrchr$MH,"ua_wcsrchr");
    }
    public static MemoryAddress ua_wcsrchr ( Addressable String_,  short Character) {
        var mh$ = ua_wcsrchr$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(String_, Character);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ua_wcscpy$MH() {
        return RuntimeHelper.requireNonNull(constants$1320.ua_wcscpy$MH,"ua_wcscpy");
    }
    public static MemoryAddress ua_wcscpy ( Addressable Destination,  Addressable Source) {
        var mh$ = ua_wcscpy$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(Destination, Source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ua_wcscpy_s$MH() {
        return RuntimeHelper.requireNonNull(constants$1320.ua_wcscpy_s$MH,"ua_wcscpy_s");
    }
    public static MemoryAddress ua_wcscpy_s ( Addressable Destination,  long DestinationSize,  Addressable Source) {
        var mh$ = ua_wcscpy_s$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(Destination, DestinationSize, Source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ua_wcslen$MH() {
        return RuntimeHelper.requireNonNull(constants$1320.ua_wcslen$MH,"ua_wcslen");
    }
    public static long ua_wcslen ( Addressable String_) {
        var mh$ = ua_wcslen$MH();
        try {
            return (long)mh$.invokeExact(String_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ua_wcsicmp$MH() {
        return RuntimeHelper.requireNonNull(constants$1320.ua_wcsicmp$MH,"ua_wcsicmp");
    }
    public static int ua_wcsicmp ( Addressable String1,  Addressable String2) {
        var mh$ = ua_wcsicmp$MH();
        try {
            return (int)mh$.invokeExact(String1, String2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MemorySegment NETWORK_MANAGER_FIRST_IP_ADDRESS_ARRIVAL_GUID$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1321.NETWORK_MANAGER_FIRST_IP_ADDRESS_ARRIVAL_GUID$SEGMENT,"NETWORK_MANAGER_FIRST_IP_ADDRESS_ARRIVAL_GUID");
    }
    public static MemorySegment NETWORK_MANAGER_LAST_IP_ADDRESS_REMOVAL_GUID$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1321.NETWORK_MANAGER_LAST_IP_ADDRESS_REMOVAL_GUID$SEGMENT,"NETWORK_MANAGER_LAST_IP_ADDRESS_REMOVAL_GUID");
    }
    public static MemorySegment DOMAIN_JOIN_GUID$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1321.DOMAIN_JOIN_GUID$SEGMENT,"DOMAIN_JOIN_GUID");
    }
    public static MemorySegment DOMAIN_LEAVE_GUID$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1321.DOMAIN_LEAVE_GUID$SEGMENT,"DOMAIN_LEAVE_GUID");
    }
    public static MemorySegment FIREWALL_PORT_OPEN_GUID$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1321.FIREWALL_PORT_OPEN_GUID$SEGMENT,"FIREWALL_PORT_OPEN_GUID");
    }
    public static MemorySegment FIREWALL_PORT_CLOSE_GUID$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1321.FIREWALL_PORT_CLOSE_GUID$SEGMENT,"FIREWALL_PORT_CLOSE_GUID");
    }
    public static MemorySegment MACHINE_POLICY_PRESENT_GUID$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1322.MACHINE_POLICY_PRESENT_GUID$SEGMENT,"MACHINE_POLICY_PRESENT_GUID");
    }
    public static MemorySegment USER_POLICY_PRESENT_GUID$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1322.USER_POLICY_PRESENT_GUID$SEGMENT,"USER_POLICY_PRESENT_GUID");
    }
    public static MemorySegment RPC_INTERFACE_EVENT_GUID$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1322.RPC_INTERFACE_EVENT_GUID$SEGMENT,"RPC_INTERFACE_EVENT_GUID");
    }
    public static MemorySegment NAMED_PIPE_EVENT_GUID$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1322.NAMED_PIPE_EVENT_GUID$SEGMENT,"NAMED_PIPE_EVENT_GUID");
    }
    public static MemorySegment CUSTOM_SYSTEM_STATE_CHANGE_EVENT_GUID$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1322.CUSTOM_SYSTEM_STATE_CHANGE_EVENT_GUID$SEGMENT,"CUSTOM_SYSTEM_STATE_CHANGE_EVENT_GUID");
    }
    public static OfAddress LPSERVICE_CUSTOM_SYSTEM_STATE_CHANGE_DATA_ITEM = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPSERVICE_DESCRIPTIONA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPSERVICE_DESCRIPTIONW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPSERVICE_DESCRIPTION = Constants$root.C_POINTER$LAYOUT;
    public static int SC_ACTION_NONE() {
        return (int)0L;
    }
    public static int SC_ACTION_RESTART() {
        return (int)1L;
    }
    public static int SC_ACTION_REBOOT() {
        return (int)2L;
    }
    public static int SC_ACTION_RUN_COMMAND() {
        return (int)3L;
    }
    public static int SC_ACTION_OWN_RESTART() {
        return (int)4L;
    }
    public static OfAddress LPSC_ACTION = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPSERVICE_FAILURE_ACTIONSA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPSERVICE_FAILURE_ACTIONSW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPSERVICE_FAILURE_ACTIONS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPSERVICE_DELAYED_AUTO_START_INFO = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPSERVICE_FAILURE_ACTIONS_FLAG = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPSERVICE_SID_INFO = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPSERVICE_REQUIRED_PRIVILEGES_INFOA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPSERVICE_REQUIRED_PRIVILEGES_INFOW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPSERVICE_REQUIRED_PRIVILEGES_INFO = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPSERVICE_PRESHUTDOWN_INFO = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PSERVICE_TRIGGER_SPECIFIC_DATA_ITEM = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PSERVICE_TRIGGER = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PSERVICE_TRIGGER_INFO = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPSERVICE_PREFERRED_NODE_INFO = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PSERVICE_TIMECHANGE_INFO = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PSERVICE_LAUNCH_PROTECTED_INFO = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress SC_HANDLE = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPSC_HANDLE = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress SERVICE_STATUS_HANDLE = Constants$root.C_POINTER$LAYOUT;
    public static int SC_STATUS_PROCESS_INFO() {
        return (int)0L;
    }
    public static int SC_ENUM_PROCESS_INFO() {
        return (int)0L;
    }
    public static OfAddress LPSERVICE_STATUS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPSERVICE_STATUS_PROCESS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPENUM_SERVICE_STATUSA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPENUM_SERVICE_STATUSW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPENUM_SERVICE_STATUS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPENUM_SERVICE_STATUS_PROCESSA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPENUM_SERVICE_STATUS_PROCESSW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPENUM_SERVICE_STATUS_PROCESS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress SC_LOCK = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPQUERY_SERVICE_LOCK_STATUSA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPQUERY_SERVICE_LOCK_STATUSW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPQUERY_SERVICE_LOCK_STATUS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPQUERY_SERVICE_CONFIGA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPQUERY_SERVICE_CONFIGW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPQUERY_SERVICE_CONFIG = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPSERVICE_TABLE_ENTRYA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPSERVICE_TABLE_ENTRYW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPSERVICE_TABLE_ENTRY = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PSERVICE_NOTIFY_1 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PSERVICE_NOTIFY_2A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PSERVICE_NOTIFY_2W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PSERVICE_NOTIFY_2 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PSERVICE_NOTIFYA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PSERVICE_NOTIFYW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PSERVICE_NOTIFY = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PSERVICE_CONTROL_STATUS_REASON_PARAMSA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PSERVICE_CONTROL_STATUS_REASON_PARAMSW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PSERVICE_CONTROL_STATUS_REASON_PARAMS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PSERVICE_START_REASON = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle ChangeServiceConfigA$MH() {
        return RuntimeHelper.requireNonNull(constants$1325.ChangeServiceConfigA$MH,"ChangeServiceConfigA");
    }
    public static int ChangeServiceConfigA ( Addressable hService,  int dwServiceType,  int dwStartType,  int dwErrorControl,  Addressable lpBinaryPathName,  Addressable lpLoadOrderGroup,  Addressable lpdwTagId,  Addressable lpDependencies,  Addressable lpServiceStartName,  Addressable lpPassword,  Addressable lpDisplayName) {
        var mh$ = ChangeServiceConfigA$MH();
        try {
            return (int)mh$.invokeExact(hService, dwServiceType, dwStartType, dwErrorControl, lpBinaryPathName, lpLoadOrderGroup, lpdwTagId, lpDependencies, lpServiceStartName, lpPassword, lpDisplayName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ChangeServiceConfigW$MH() {
        return RuntimeHelper.requireNonNull(constants$1326.ChangeServiceConfigW$MH,"ChangeServiceConfigW");
    }
    public static int ChangeServiceConfigW ( Addressable hService,  int dwServiceType,  int dwStartType,  int dwErrorControl,  Addressable lpBinaryPathName,  Addressable lpLoadOrderGroup,  Addressable lpdwTagId,  Addressable lpDependencies,  Addressable lpServiceStartName,  Addressable lpPassword,  Addressable lpDisplayName) {
        var mh$ = ChangeServiceConfigW$MH();
        try {
            return (int)mh$.invokeExact(hService, dwServiceType, dwStartType, dwErrorControl, lpBinaryPathName, lpLoadOrderGroup, lpdwTagId, lpDependencies, lpServiceStartName, lpPassword, lpDisplayName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ChangeServiceConfig2A$MH() {
        return RuntimeHelper.requireNonNull(constants$1326.ChangeServiceConfig2A$MH,"ChangeServiceConfig2A");
    }
    public static int ChangeServiceConfig2A ( Addressable hService,  int dwInfoLevel,  Addressable lpInfo) {
        var mh$ = ChangeServiceConfig2A$MH();
        try {
            return (int)mh$.invokeExact(hService, dwInfoLevel, lpInfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ChangeServiceConfig2W$MH() {
        return RuntimeHelper.requireNonNull(constants$1326.ChangeServiceConfig2W$MH,"ChangeServiceConfig2W");
    }
    public static int ChangeServiceConfig2W ( Addressable hService,  int dwInfoLevel,  Addressable lpInfo) {
        var mh$ = ChangeServiceConfig2W$MH();
        try {
            return (int)mh$.invokeExact(hService, dwInfoLevel, lpInfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CloseServiceHandle$MH() {
        return RuntimeHelper.requireNonNull(constants$1326.CloseServiceHandle$MH,"CloseServiceHandle");
    }
    public static int CloseServiceHandle ( Addressable hSCObject) {
        var mh$ = CloseServiceHandle$MH();
        try {
            return (int)mh$.invokeExact(hSCObject);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ControlService$MH() {
        return RuntimeHelper.requireNonNull(constants$1326.ControlService$MH,"ControlService");
    }
    public static int ControlService ( Addressable hService,  int dwControl,  Addressable lpServiceStatus) {
        var mh$ = ControlService$MH();
        try {
            return (int)mh$.invokeExact(hService, dwControl, lpServiceStatus);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CreateServiceA$MH() {
        return RuntimeHelper.requireNonNull(constants$1326.CreateServiceA$MH,"CreateServiceA");
    }
    public static MemoryAddress CreateServiceA ( Addressable hSCManager,  Addressable lpServiceName,  Addressable lpDisplayName,  int dwDesiredAccess,  int dwServiceType,  int dwStartType,  int dwErrorControl,  Addressable lpBinaryPathName,  Addressable lpLoadOrderGroup,  Addressable lpdwTagId,  Addressable lpDependencies,  Addressable lpServiceStartName,  Addressable lpPassword) {
        var mh$ = CreateServiceA$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(hSCManager, lpServiceName, lpDisplayName, dwDesiredAccess, dwServiceType, dwStartType, dwErrorControl, lpBinaryPathName, lpLoadOrderGroup, lpdwTagId, lpDependencies, lpServiceStartName, lpPassword);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CreateServiceW$MH() {
        return RuntimeHelper.requireNonNull(constants$1327.CreateServiceW$MH,"CreateServiceW");
    }
    public static MemoryAddress CreateServiceW ( Addressable hSCManager,  Addressable lpServiceName,  Addressable lpDisplayName,  int dwDesiredAccess,  int dwServiceType,  int dwStartType,  int dwErrorControl,  Addressable lpBinaryPathName,  Addressable lpLoadOrderGroup,  Addressable lpdwTagId,  Addressable lpDependencies,  Addressable lpServiceStartName,  Addressable lpPassword) {
        var mh$ = CreateServiceW$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(hSCManager, lpServiceName, lpDisplayName, dwDesiredAccess, dwServiceType, dwStartType, dwErrorControl, lpBinaryPathName, lpLoadOrderGroup, lpdwTagId, lpDependencies, lpServiceStartName, lpPassword);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeleteService$MH() {
        return RuntimeHelper.requireNonNull(constants$1327.DeleteService$MH,"DeleteService");
    }
    public static int DeleteService ( Addressable hService) {
        var mh$ = DeleteService$MH();
        try {
            return (int)mh$.invokeExact(hService);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumDependentServicesA$MH() {
        return RuntimeHelper.requireNonNull(constants$1327.EnumDependentServicesA$MH,"EnumDependentServicesA");
    }
    public static int EnumDependentServicesA ( Addressable hService,  int dwServiceState,  Addressable lpServices,  int cbBufSize,  Addressable pcbBytesNeeded,  Addressable lpServicesReturned) {
        var mh$ = EnumDependentServicesA$MH();
        try {
            return (int)mh$.invokeExact(hService, dwServiceState, lpServices, cbBufSize, pcbBytesNeeded, lpServicesReturned);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumDependentServicesW$MH() {
        return RuntimeHelper.requireNonNull(constants$1327.EnumDependentServicesW$MH,"EnumDependentServicesW");
    }
    public static int EnumDependentServicesW ( Addressable hService,  int dwServiceState,  Addressable lpServices,  int cbBufSize,  Addressable pcbBytesNeeded,  Addressable lpServicesReturned) {
        var mh$ = EnumDependentServicesW$MH();
        try {
            return (int)mh$.invokeExact(hService, dwServiceState, lpServices, cbBufSize, pcbBytesNeeded, lpServicesReturned);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumServicesStatusA$MH() {
        return RuntimeHelper.requireNonNull(constants$1327.EnumServicesStatusA$MH,"EnumServicesStatusA");
    }
    public static int EnumServicesStatusA ( Addressable hSCManager,  int dwServiceType,  int dwServiceState,  Addressable lpServices,  int cbBufSize,  Addressable pcbBytesNeeded,  Addressable lpServicesReturned,  Addressable lpResumeHandle) {
        var mh$ = EnumServicesStatusA$MH();
        try {
            return (int)mh$.invokeExact(hSCManager, dwServiceType, dwServiceState, lpServices, cbBufSize, pcbBytesNeeded, lpServicesReturned, lpResumeHandle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumServicesStatusW$MH() {
        return RuntimeHelper.requireNonNull(constants$1327.EnumServicesStatusW$MH,"EnumServicesStatusW");
    }
    public static int EnumServicesStatusW ( Addressable hSCManager,  int dwServiceType,  int dwServiceState,  Addressable lpServices,  int cbBufSize,  Addressable pcbBytesNeeded,  Addressable lpServicesReturned,  Addressable lpResumeHandle) {
        var mh$ = EnumServicesStatusW$MH();
        try {
            return (int)mh$.invokeExact(hSCManager, dwServiceType, dwServiceState, lpServices, cbBufSize, pcbBytesNeeded, lpServicesReturned, lpResumeHandle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumServicesStatusExA$MH() {
        return RuntimeHelper.requireNonNull(constants$1328.EnumServicesStatusExA$MH,"EnumServicesStatusExA");
    }
    public static int EnumServicesStatusExA ( Addressable hSCManager,  int InfoLevel,  int dwServiceType,  int dwServiceState,  Addressable lpServices,  int cbBufSize,  Addressable pcbBytesNeeded,  Addressable lpServicesReturned,  Addressable lpResumeHandle,  Addressable pszGroupName) {
        var mh$ = EnumServicesStatusExA$MH();
        try {
            return (int)mh$.invokeExact(hSCManager, InfoLevel, dwServiceType, dwServiceState, lpServices, cbBufSize, pcbBytesNeeded, lpServicesReturned, lpResumeHandle, pszGroupName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumServicesStatusExW$MH() {
        return RuntimeHelper.requireNonNull(constants$1328.EnumServicesStatusExW$MH,"EnumServicesStatusExW");
    }
    public static int EnumServicesStatusExW ( Addressable hSCManager,  int InfoLevel,  int dwServiceType,  int dwServiceState,  Addressable lpServices,  int cbBufSize,  Addressable pcbBytesNeeded,  Addressable lpServicesReturned,  Addressable lpResumeHandle,  Addressable pszGroupName) {
        var mh$ = EnumServicesStatusExW$MH();
        try {
            return (int)mh$.invokeExact(hSCManager, InfoLevel, dwServiceType, dwServiceState, lpServices, cbBufSize, pcbBytesNeeded, lpServicesReturned, lpResumeHandle, pszGroupName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetServiceKeyNameA$MH() {
        return RuntimeHelper.requireNonNull(constants$1328.GetServiceKeyNameA$MH,"GetServiceKeyNameA");
    }
    public static int GetServiceKeyNameA ( Addressable hSCManager,  Addressable lpDisplayName,  Addressable lpServiceName,  Addressable lpcchBuffer) {
        var mh$ = GetServiceKeyNameA$MH();
        try {
            return (int)mh$.invokeExact(hSCManager, lpDisplayName, lpServiceName, lpcchBuffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetServiceKeyNameW$MH() {
        return RuntimeHelper.requireNonNull(constants$1328.GetServiceKeyNameW$MH,"GetServiceKeyNameW");
    }
    public static int GetServiceKeyNameW ( Addressable hSCManager,  Addressable lpDisplayName,  Addressable lpServiceName,  Addressable lpcchBuffer) {
        var mh$ = GetServiceKeyNameW$MH();
        try {
            return (int)mh$.invokeExact(hSCManager, lpDisplayName, lpServiceName, lpcchBuffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetServiceDisplayNameA$MH() {
        return RuntimeHelper.requireNonNull(constants$1328.GetServiceDisplayNameA$MH,"GetServiceDisplayNameA");
    }
    public static int GetServiceDisplayNameA ( Addressable hSCManager,  Addressable lpServiceName,  Addressable lpDisplayName,  Addressable lpcchBuffer) {
        var mh$ = GetServiceDisplayNameA$MH();
        try {
            return (int)mh$.invokeExact(hSCManager, lpServiceName, lpDisplayName, lpcchBuffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetServiceDisplayNameW$MH() {
        return RuntimeHelper.requireNonNull(constants$1328.GetServiceDisplayNameW$MH,"GetServiceDisplayNameW");
    }
    public static int GetServiceDisplayNameW ( Addressable hSCManager,  Addressable lpServiceName,  Addressable lpDisplayName,  Addressable lpcchBuffer) {
        var mh$ = GetServiceDisplayNameW$MH();
        try {
            return (int)mh$.invokeExact(hSCManager, lpServiceName, lpDisplayName, lpcchBuffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle LockServiceDatabase$MH() {
        return RuntimeHelper.requireNonNull(constants$1329.LockServiceDatabase$MH,"LockServiceDatabase");
    }
    public static MemoryAddress LockServiceDatabase ( Addressable hSCManager) {
        var mh$ = LockServiceDatabase$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(hSCManager);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NotifyBootConfigStatus$MH() {
        return RuntimeHelper.requireNonNull(constants$1329.NotifyBootConfigStatus$MH,"NotifyBootConfigStatus");
    }
    public static int NotifyBootConfigStatus ( int BootAcceptable) {
        var mh$ = NotifyBootConfigStatus$MH();
        try {
            return (int)mh$.invokeExact(BootAcceptable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OpenSCManagerA$MH() {
        return RuntimeHelper.requireNonNull(constants$1329.OpenSCManagerA$MH,"OpenSCManagerA");
    }
    public static MemoryAddress OpenSCManagerA ( Addressable lpMachineName,  Addressable lpDatabaseName,  int dwDesiredAccess) {
        var mh$ = OpenSCManagerA$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(lpMachineName, lpDatabaseName, dwDesiredAccess);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OpenSCManagerW$MH() {
        return RuntimeHelper.requireNonNull(constants$1329.OpenSCManagerW$MH,"OpenSCManagerW");
    }
    public static MemoryAddress OpenSCManagerW ( Addressable lpMachineName,  Addressable lpDatabaseName,  int dwDesiredAccess) {
        var mh$ = OpenSCManagerW$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(lpMachineName, lpDatabaseName, dwDesiredAccess);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OpenServiceA$MH() {
        return RuntimeHelper.requireNonNull(constants$1329.OpenServiceA$MH,"OpenServiceA");
    }
    public static MemoryAddress OpenServiceA ( Addressable hSCManager,  Addressable lpServiceName,  int dwDesiredAccess) {
        var mh$ = OpenServiceA$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(hSCManager, lpServiceName, dwDesiredAccess);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OpenServiceW$MH() {
        return RuntimeHelper.requireNonNull(constants$1329.OpenServiceW$MH,"OpenServiceW");
    }
    public static MemoryAddress OpenServiceW ( Addressable hSCManager,  Addressable lpServiceName,  int dwDesiredAccess) {
        var mh$ = OpenServiceW$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(hSCManager, lpServiceName, dwDesiredAccess);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle QueryServiceConfigA$MH() {
        return RuntimeHelper.requireNonNull(constants$1330.QueryServiceConfigA$MH,"QueryServiceConfigA");
    }
    public static int QueryServiceConfigA ( Addressable hService,  Addressable lpServiceConfig,  int cbBufSize,  Addressable pcbBytesNeeded) {
        var mh$ = QueryServiceConfigA$MH();
        try {
            return (int)mh$.invokeExact(hService, lpServiceConfig, cbBufSize, pcbBytesNeeded);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle QueryServiceConfigW$MH() {
        return RuntimeHelper.requireNonNull(constants$1330.QueryServiceConfigW$MH,"QueryServiceConfigW");
    }
    public static int QueryServiceConfigW ( Addressable hService,  Addressable lpServiceConfig,  int cbBufSize,  Addressable pcbBytesNeeded) {
        var mh$ = QueryServiceConfigW$MH();
        try {
            return (int)mh$.invokeExact(hService, lpServiceConfig, cbBufSize, pcbBytesNeeded);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle QueryServiceConfig2A$MH() {
        return RuntimeHelper.requireNonNull(constants$1330.QueryServiceConfig2A$MH,"QueryServiceConfig2A");
    }
    public static int QueryServiceConfig2A ( Addressable hService,  int dwInfoLevel,  Addressable lpBuffer,  int cbBufSize,  Addressable pcbBytesNeeded) {
        var mh$ = QueryServiceConfig2A$MH();
        try {
            return (int)mh$.invokeExact(hService, dwInfoLevel, lpBuffer, cbBufSize, pcbBytesNeeded);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle QueryServiceConfig2W$MH() {
        return RuntimeHelper.requireNonNull(constants$1330.QueryServiceConfig2W$MH,"QueryServiceConfig2W");
    }
    public static int QueryServiceConfig2W ( Addressable hService,  int dwInfoLevel,  Addressable lpBuffer,  int cbBufSize,  Addressable pcbBytesNeeded) {
        var mh$ = QueryServiceConfig2W$MH();
        try {
            return (int)mh$.invokeExact(hService, dwInfoLevel, lpBuffer, cbBufSize, pcbBytesNeeded);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle QueryServiceLockStatusA$MH() {
        return RuntimeHelper.requireNonNull(constants$1330.QueryServiceLockStatusA$MH,"QueryServiceLockStatusA");
    }
    public static int QueryServiceLockStatusA ( Addressable hSCManager,  Addressable lpLockStatus,  int cbBufSize,  Addressable pcbBytesNeeded) {
        var mh$ = QueryServiceLockStatusA$MH();
        try {
            return (int)mh$.invokeExact(hSCManager, lpLockStatus, cbBufSize, pcbBytesNeeded);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle QueryServiceLockStatusW$MH() {
        return RuntimeHelper.requireNonNull(constants$1330.QueryServiceLockStatusW$MH,"QueryServiceLockStatusW");
    }
    public static int QueryServiceLockStatusW ( Addressable hSCManager,  Addressable lpLockStatus,  int cbBufSize,  Addressable pcbBytesNeeded) {
        var mh$ = QueryServiceLockStatusW$MH();
        try {
            return (int)mh$.invokeExact(hSCManager, lpLockStatus, cbBufSize, pcbBytesNeeded);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle QueryServiceObjectSecurity$MH() {
        return RuntimeHelper.requireNonNull(constants$1331.QueryServiceObjectSecurity$MH,"QueryServiceObjectSecurity");
    }
    public static int QueryServiceObjectSecurity ( Addressable hService,  int dwSecurityInformation,  Addressable lpSecurityDescriptor,  int cbBufSize,  Addressable pcbBytesNeeded) {
        var mh$ = QueryServiceObjectSecurity$MH();
        try {
            return (int)mh$.invokeExact(hService, dwSecurityInformation, lpSecurityDescriptor, cbBufSize, pcbBytesNeeded);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle QueryServiceStatus$MH() {
        return RuntimeHelper.requireNonNull(constants$1331.QueryServiceStatus$MH,"QueryServiceStatus");
    }
    public static int QueryServiceStatus ( Addressable hService,  Addressable lpServiceStatus) {
        var mh$ = QueryServiceStatus$MH();
        try {
            return (int)mh$.invokeExact(hService, lpServiceStatus);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle QueryServiceStatusEx$MH() {
        return RuntimeHelper.requireNonNull(constants$1331.QueryServiceStatusEx$MH,"QueryServiceStatusEx");
    }
    public static int QueryServiceStatusEx ( Addressable hService,  int InfoLevel,  Addressable lpBuffer,  int cbBufSize,  Addressable pcbBytesNeeded) {
        var mh$ = QueryServiceStatusEx$MH();
        try {
            return (int)mh$.invokeExact(hService, InfoLevel, lpBuffer, cbBufSize, pcbBytesNeeded);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegisterServiceCtrlHandlerA$MH() {
        return RuntimeHelper.requireNonNull(constants$1331.RegisterServiceCtrlHandlerA$MH,"RegisterServiceCtrlHandlerA");
    }
    public static MemoryAddress RegisterServiceCtrlHandlerA ( Addressable lpServiceName,  Addressable lpHandlerProc) {
        var mh$ = RegisterServiceCtrlHandlerA$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(lpServiceName, lpHandlerProc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegisterServiceCtrlHandlerW$MH() {
        return RuntimeHelper.requireNonNull(constants$1331.RegisterServiceCtrlHandlerW$MH,"RegisterServiceCtrlHandlerW");
    }
    public static MemoryAddress RegisterServiceCtrlHandlerW ( Addressable lpServiceName,  Addressable lpHandlerProc) {
        var mh$ = RegisterServiceCtrlHandlerW$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(lpServiceName, lpHandlerProc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegisterServiceCtrlHandlerExA$MH() {
        return RuntimeHelper.requireNonNull(constants$1331.RegisterServiceCtrlHandlerExA$MH,"RegisterServiceCtrlHandlerExA");
    }
    public static MemoryAddress RegisterServiceCtrlHandlerExA ( Addressable lpServiceName,  Addressable lpHandlerProc,  Addressable lpContext) {
        var mh$ = RegisterServiceCtrlHandlerExA$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(lpServiceName, lpHandlerProc, lpContext);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegisterServiceCtrlHandlerExW$MH() {
        return RuntimeHelper.requireNonNull(constants$1332.RegisterServiceCtrlHandlerExW$MH,"RegisterServiceCtrlHandlerExW");
    }
    public static MemoryAddress RegisterServiceCtrlHandlerExW ( Addressable lpServiceName,  Addressable lpHandlerProc,  Addressable lpContext) {
        var mh$ = RegisterServiceCtrlHandlerExW$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(lpServiceName, lpHandlerProc, lpContext);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetServiceObjectSecurity$MH() {
        return RuntimeHelper.requireNonNull(constants$1332.SetServiceObjectSecurity$MH,"SetServiceObjectSecurity");
    }
    public static int SetServiceObjectSecurity ( Addressable hService,  int dwSecurityInformation,  Addressable lpSecurityDescriptor) {
        var mh$ = SetServiceObjectSecurity$MH();
        try {
            return (int)mh$.invokeExact(hService, dwSecurityInformation, lpSecurityDescriptor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetServiceStatus$MH() {
        return RuntimeHelper.requireNonNull(constants$1332.SetServiceStatus$MH,"SetServiceStatus");
    }
    public static int SetServiceStatus ( Addressable hServiceStatus,  Addressable lpServiceStatus) {
        var mh$ = SetServiceStatus$MH();
        try {
            return (int)mh$.invokeExact(hServiceStatus, lpServiceStatus);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle StartServiceCtrlDispatcherA$MH() {
        return RuntimeHelper.requireNonNull(constants$1332.StartServiceCtrlDispatcherA$MH,"StartServiceCtrlDispatcherA");
    }
    public static int StartServiceCtrlDispatcherA ( Addressable lpServiceStartTable) {
        var mh$ = StartServiceCtrlDispatcherA$MH();
        try {
            return (int)mh$.invokeExact(lpServiceStartTable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle StartServiceCtrlDispatcherW$MH() {
        return RuntimeHelper.requireNonNull(constants$1332.StartServiceCtrlDispatcherW$MH,"StartServiceCtrlDispatcherW");
    }
    public static int StartServiceCtrlDispatcherW ( Addressable lpServiceStartTable) {
        var mh$ = StartServiceCtrlDispatcherW$MH();
        try {
            return (int)mh$.invokeExact(lpServiceStartTable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle StartServiceA$MH() {
        return RuntimeHelper.requireNonNull(constants$1332.StartServiceA$MH,"StartServiceA");
    }
    public static int StartServiceA ( Addressable hService,  int dwNumServiceArgs,  Addressable lpServiceArgVectors) {
        var mh$ = StartServiceA$MH();
        try {
            return (int)mh$.invokeExact(hService, dwNumServiceArgs, lpServiceArgVectors);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle StartServiceW$MH() {
        return RuntimeHelper.requireNonNull(constants$1333.StartServiceW$MH,"StartServiceW");
    }
    public static int StartServiceW ( Addressable hService,  int dwNumServiceArgs,  Addressable lpServiceArgVectors) {
        var mh$ = StartServiceW$MH();
        try {
            return (int)mh$.invokeExact(hService, dwNumServiceArgs, lpServiceArgVectors);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle UnlockServiceDatabase$MH() {
        return RuntimeHelper.requireNonNull(constants$1333.UnlockServiceDatabase$MH,"UnlockServiceDatabase");
    }
    public static int UnlockServiceDatabase ( Addressable ScLock) {
        var mh$ = UnlockServiceDatabase$MH();
        try {
            return (int)mh$.invokeExact(ScLock);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NotifyServiceStatusChangeA$MH() {
        return RuntimeHelper.requireNonNull(constants$1333.NotifyServiceStatusChangeA$MH,"NotifyServiceStatusChangeA");
    }
    public static int NotifyServiceStatusChangeA ( Addressable hService,  int dwNotifyMask,  Addressable pNotifyBuffer) {
        var mh$ = NotifyServiceStatusChangeA$MH();
        try {
            return (int)mh$.invokeExact(hService, dwNotifyMask, pNotifyBuffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NotifyServiceStatusChangeW$MH() {
        return RuntimeHelper.requireNonNull(constants$1333.NotifyServiceStatusChangeW$MH,"NotifyServiceStatusChangeW");
    }
    public static int NotifyServiceStatusChangeW ( Addressable hService,  int dwNotifyMask,  Addressable pNotifyBuffer) {
        var mh$ = NotifyServiceStatusChangeW$MH();
        try {
            return (int)mh$.invokeExact(hService, dwNotifyMask, pNotifyBuffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ControlServiceExA$MH() {
        return RuntimeHelper.requireNonNull(constants$1333.ControlServiceExA$MH,"ControlServiceExA");
    }
    public static int ControlServiceExA ( Addressable hService,  int dwControl,  int dwInfoLevel,  Addressable pControlParams) {
        var mh$ = ControlServiceExA$MH();
        try {
            return (int)mh$.invokeExact(hService, dwControl, dwInfoLevel, pControlParams);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ControlServiceExW$MH() {
        return RuntimeHelper.requireNonNull(constants$1333.ControlServiceExW$MH,"ControlServiceExW");
    }
    public static int ControlServiceExW ( Addressable hService,  int dwControl,  int dwInfoLevel,  Addressable pControlParams) {
        var mh$ = ControlServiceExW$MH();
        try {
            return (int)mh$.invokeExact(hService, dwControl, dwInfoLevel, pControlParams);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle QueryServiceDynamicInformation$MH() {
        return RuntimeHelper.requireNonNull(constants$1334.QueryServiceDynamicInformation$MH,"QueryServiceDynamicInformation");
    }
    public static int QueryServiceDynamicInformation ( Addressable hServiceStatus,  int dwInfoLevel,  Addressable ppDynamicInfo) {
        var mh$ = QueryServiceDynamicInformation$MH();
        try {
            return (int)mh$.invokeExact(hServiceStatus, dwInfoLevel, ppDynamicInfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int SC_EVENT_DATABASE_CHANGE() {
        return (int)0L;
    }
    public static int SC_EVENT_PROPERTY_CHANGE() {
        return (int)1L;
    }
    public static int SC_EVENT_STATUS_CHANGE() {
        return (int)2L;
    }
    public static OfAddress PSC_EVENT_TYPE = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PSC_NOTIFICATION_REGISTRATION = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle SubscribeServiceChangeNotifications$MH() {
        return RuntimeHelper.requireNonNull(constants$1334.SubscribeServiceChangeNotifications$MH,"SubscribeServiceChangeNotifications");
    }
    public static int SubscribeServiceChangeNotifications ( Addressable hService,  int eEventType,  Addressable pCallback,  Addressable pCallbackContext,  Addressable pSubscription) {
        var mh$ = SubscribeServiceChangeNotifications$MH();
        try {
            return (int)mh$.invokeExact(hService, eEventType, pCallback, pCallbackContext, pSubscription);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle UnsubscribeServiceChangeNotifications$MH() {
        return RuntimeHelper.requireNonNull(constants$1335.UnsubscribeServiceChangeNotifications$MH,"UnsubscribeServiceChangeNotifications");
    }
    public static void UnsubscribeServiceChangeNotifications ( Addressable pSubscription) {
        var mh$ = UnsubscribeServiceChangeNotifications$MH();
        try {
            mh$.invokeExact(pSubscription);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WaitServiceState$MH() {
        return RuntimeHelper.requireNonNull(constants$1335.WaitServiceState$MH,"WaitServiceState");
    }
    public static int WaitServiceState ( Addressable hService,  int dwNotify,  int dwTimeout,  Addressable hCancelEvent) {
        var mh$ = WaitServiceState$MH();
        try {
            return (int)mh$.invokeExact(hService, dwNotify, dwTimeout, hCancelEvent);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int ServiceRegistryStateParameters() {
        return (int)0L;
    }
    public static int ServiceRegistryStatePersistent() {
        return (int)1L;
    }
    public static int MaxServiceRegistryStateType() {
        return (int)2L;
    }
    public static MethodHandle GetServiceRegistryStateKey$MH() {
        return RuntimeHelper.requireNonNull(constants$1335.GetServiceRegistryStateKey$MH,"GetServiceRegistryStateKey");
    }
    public static int GetServiceRegistryStateKey ( Addressable ServiceStatusHandle,  int StateType,  int AccessMask,  Addressable ServiceStateKey) {
        var mh$ = GetServiceRegistryStateKey$MH();
        try {
            return (int)mh$.invokeExact(ServiceStatusHandle, StateType, AccessMask, ServiceStateKey);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int ServiceDirectoryPersistentState() {
        return (int)0L;
    }
    public static int ServiceDirectoryTypeMax() {
        return (int)1L;
    }
    public static MethodHandle GetServiceDirectory$MH() {
        return RuntimeHelper.requireNonNull(constants$1335.GetServiceDirectory$MH,"GetServiceDirectory");
    }
    public static int GetServiceDirectory ( Addressable hServiceStatus,  int eDirectoryType,  Addressable lpPathBuffer,  int cchPathBufferLength,  Addressable lpcchRequiredBufferLength) {
        var mh$ = GetServiceDirectory$MH();
        try {
            return (int)mh$.invokeExact(hServiceStatus, eDirectoryType, lpPathBuffer, cchPathBufferLength, lpcchRequiredBufferLength);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress PMODEMDEVCAPS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMODEMDEVCAPS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMODEMSETTINGS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMODEMSETTINGS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress HIMC = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress HIMCC = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPHKL = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPUINT = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PCOMPOSITIONFORM = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress NPCOMPOSITIONFORM = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPCOMPOSITIONFORM = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PCANDIDATEFORM = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress NPCANDIDATEFORM = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPCANDIDATEFORM = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PCANDIDATELIST = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress NPCANDIDATELIST = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPCANDIDATELIST = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PREGISTERWORDA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress NPREGISTERWORDA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPREGISTERWORDA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PREGISTERWORDW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress NPREGISTERWORDW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPREGISTERWORDW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PREGISTERWORD = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress NPREGISTERWORD = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPREGISTERWORD = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PRECONVERTSTRING = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress NPRECONVERTSTRING = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPRECONVERTSTRING = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PSTYLEBUFA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress NPSTYLEBUFA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPSTYLEBUFA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PSTYLEBUFW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress NPSTYLEBUFW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPSTYLEBUFW = Constants$root.C_POINTER$LAYOUT;
}


