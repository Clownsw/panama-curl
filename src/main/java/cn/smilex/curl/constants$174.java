// Generated by jextract

package cn.smilex;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$174 {

    static final FunctionDescriptor RtlCaptureStackBackTrace$FUNC = FunctionDescriptor.of(Constants$root.C_SHORT$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle RtlCaptureStackBackTrace$MH = RuntimeHelper.downcallHandle(
        "RtlCaptureStackBackTrace",
        constants$174.RtlCaptureStackBackTrace$FUNC
    );
    static final FunctionDescriptor RtlCaptureContext$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle RtlCaptureContext$MH = RuntimeHelper.downcallHandle(
        "RtlCaptureContext",
        constants$174.RtlCaptureContext$FUNC
    );
    static final FunctionDescriptor RtlCaptureContext2$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle RtlCaptureContext2$MH = RuntimeHelper.downcallHandle(
        "RtlCaptureContext2",
        constants$174.RtlCaptureContext2$FUNC
    );
    static final FunctionDescriptor RtlUnwind$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle RtlUnwind$MH = RuntimeHelper.downcallHandle(
        "RtlUnwind",
        constants$174.RtlUnwind$FUNC
    );
    static final FunctionDescriptor RtlAddFunctionTable$FUNC = FunctionDescriptor.of(Constants$root.C_CHAR$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle RtlAddFunctionTable$MH = RuntimeHelper.downcallHandle(
        "RtlAddFunctionTable",
        constants$174.RtlAddFunctionTable$FUNC
    );
    static final FunctionDescriptor RtlDeleteFunctionTable$FUNC = FunctionDescriptor.of(Constants$root.C_CHAR$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle RtlDeleteFunctionTable$MH = RuntimeHelper.downcallHandle(
        "RtlDeleteFunctionTable",
        constants$174.RtlDeleteFunctionTable$FUNC
    );
}


