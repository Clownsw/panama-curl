// Generated by jextract

package cn.smilex;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$118 {

    static final FunctionDescriptor _ReadWriteBarrier$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle _ReadWriteBarrier$MH = RuntimeHelper.downcallHandle(
        "_ReadWriteBarrier",
        constants$118._ReadWriteBarrier$FUNC
    );
    static final FunctionDescriptor __faststorefence$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle __faststorefence$MH = RuntimeHelper.downcallHandle(
        "__faststorefence",
        constants$118.__faststorefence$FUNC
    );
    static final FunctionDescriptor _mm_lfence$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle _mm_lfence$MH = RuntimeHelper.downcallHandle(
        "_mm_lfence",
        constants$118._mm_lfence$FUNC
    );
    static final FunctionDescriptor _mm_mfence$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle _mm_mfence$MH = RuntimeHelper.downcallHandle(
        "_mm_mfence",
        constants$118._mm_mfence$FUNC
    );
    static final FunctionDescriptor _mm_sfence$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle _mm_sfence$MH = RuntimeHelper.downcallHandle(
        "_mm_sfence",
        constants$118._mm_sfence$FUNC
    );
    static final FunctionDescriptor _mm_pause$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle _mm_pause$MH = RuntimeHelper.downcallHandle(
        "_mm_pause",
        constants$118._mm_pause$FUNC
    );
}


